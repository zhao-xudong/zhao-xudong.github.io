<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马里奥</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-18T16:23:07.620Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>马里奥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试image</title>
    <link href="http://yoursite.com/2018/04/19/%E6%B5%8B%E8%AF%95image/"/>
    <id>http://yoursite.com/2018/04/19/测试image/</id>
    <published>2018-04-18T16:20:02.000Z</published>
    <updated>2018-04-18T16:23:07.620Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/04/19/测试image/576452.jpg" alt=""></p><p>用电脑桌面进行一波测试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/04/19/测试image/576452.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;用电脑桌面进行一波测试&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>判断回文串时忽略既非字母又非数字的字符</title>
    <link href="http://yoursite.com/2018/04/18/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E4%B8%B2%E6%97%B6%E5%BF%BD%E7%95%A5%E6%97%A2%E9%9D%9E%E5%AD%97%E6%AF%8D%E5%8F%88%E9%9D%9E%E6%95%B0%E5%AD%97%E7%9A%84%E5%AD%97%E7%AC%A6/"/>
    <id>http://yoursite.com/2018/04/18/判断回文串时忽略既非字母又非数字的字符/</id>
    <published>2018-04-18T06:55:22.000Z</published>
    <updated>2018-04-18T15:32:30.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="判断回文串时忽略既非字母又非数字的字符"><a href="#判断回文串时忽略既非字母又非数字的字符" class="headerlink" title="判断回文串时忽略既非字母又非数字的字符"></a>判断回文串时忽略既非字母又非数字的字符</h1><hr><h2 id="问题及解决办法"><a href="#问题及解决办法" class="headerlink" title="问题及解决办法"></a>问题及解决办法</h2><p>​    1.question：通过删除既非字母有非数字的字符过滤这个字符串。answer：创建一个新的空字符串构建器，将字符串中每一个字母或数字字符添加到字符串构建器中，然后从这个构建器返回所求的字符串。可以使用Character类中的isLetterOrDigit(ch)方法来检测字符ch是否是数字或字母。</p><p>​    2.question：倒置过滤后的字符串得到一个新字符串。使用equal方法对倒置后的字符串和过滤后的字符串进行比较。</p><h2 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h2><p><strong>PalindromeIgnoreNonAlphanumeric.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class PalindromeIgnoreNonAlphanumeric &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Scanner input = new Scanner(System.in);</span><br><span class="line">System.out.println(&quot;Enter a string:&quot;);</span><br><span class="line">String s = input.nextLine();</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;Ignoring nonalphanumeric characters,\nis &quot;+s+&quot; a palindrome? &quot;+isPalindrome(s));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static boolean isPalindrome(String s)&#123;</span><br><span class="line">String s1=filter(s);</span><br><span class="line">String s2=reverse(s1);</span><br><span class="line">return s2.equals(s1);</span><br><span class="line">&#125;</span><br><span class="line">public static String filter(String s)&#123;</span><br><span class="line">StringBuilder stringBuilder = new StringBuilder();</span><br><span class="line">for(int i=0;i&lt;s.length();i++)</span><br><span class="line">&#123;</span><br><span class="line">if(Character.isLetterOrDigit(s.charAt(i)))&#123;</span><br><span class="line">stringBuilder.append(s.charAt(i));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return stringBuilder.toString();</span><br><span class="line">&#125;</span><br><span class="line">public static String reverse(String s)&#123;</span><br><span class="line">StringBuilder stringBuilder=new StringBuilder(s);</span><br><span class="line">stringBuilder.reverse();</span><br><span class="line">return stringBuilder.toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//ex1:</span><br><span class="line">Enter a string:</span><br><span class="line">ab&lt;c&gt;b?a</span><br><span class="line">Ignoring nonalphanumeric haracters,</span><br><span class="line">is ab&lt;c&gt;b?a a palindrome? true</span><br><span class="line">//ex2:</span><br><span class="line">Enter a string:</span><br><span class="line">abcc&gt;&lt;?cab</span><br><span class="line">Ignoring nonalphanumeric haracters,</span><br><span class="line">is abcc&gt;&lt;?cab a palindrome? false</span><br></pre></td></tr></table></figure><p>​    filter(String s)方法逐个检查字符串s中的每个字符，如果字符是字母或者数字字符，就将他复制到字符串构建器。filter方法返回构建器中的字符串。reverse(String s)方法创建一个新字符串，这个新串是对给定字符串s的倒置。filter方法和reverse方法都会返回一个新字符串，原始字符串并没有改变。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;判断回文串时忽略既非字母又非数字的字符&quot;&gt;&lt;a href=&quot;#判断回文串时忽略既非字母又非数字的字符&quot; class=&quot;headerlink&quot; title=&quot;判断回文串时忽略既非字母又非数字的字符&quot;&gt;&lt;/a&gt;判断回文串时忽略既非字母又非数字的字符&lt;/h1&gt;&lt;hr&gt;

      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>toString、capacity、length、setlength和charAt方法</title>
    <link href="http://yoursite.com/2018/04/18/toString%E3%80%81capacity%E3%80%81length%E3%80%81setlength%E5%92%8CcharAt%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/18/toString、capacity、length、setlength和charAt方法/</id>
    <published>2018-04-18T06:18:22.000Z</published>
    <updated>2018-04-18T06:18:58.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="toString、capacity、length、setlength和charAt方法"><a href="#toString、capacity、length、setlength和charAt方法" class="headerlink" title="toString、capacity、length、setlength和charAt方法"></a>toString、capacity、length、setlength和charAt方法</h1><hr><p>​    StringBuilder类提供了许多其他处理字符串构建器和获取它的属性的办法。</p><p><strong>java.lang.StringBuilder</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+toString(): String//从字符串构建器返回一个字符串对象</span><br><span class="line">+capacity(): int//返回该字符串构建器的容量</span><br><span class="line">+charAt(index: int): char//返回指定索引位置的字符</span><br><span class="line">+length(): int//返回该构建器中的字符数</span><br><span class="line">+setLength(newLength: int): void//设置该构建器的新长度</span><br><span class="line">+substring(startIndex: int): String//返回从startIndex开始的字符串</span><br><span class="line">+substring(startIndex: int,endIndex: int):String//返回从startIndex开始endIndex结束的子字符串</span><br><span class="line">+trimToSize(): void//减少用于字符串构建器的存储大小</span><br></pre></td></tr></table></figure><p>​    capacity()方法返回字符串构建器当前的容量。容量是指在不增加构建器大小的情况下存储的字符数量。</p><p>​    length()方法返回字符串构建器中实际存储的字符数量，setLength(newLength)方法设置字符串构建器的长度。如果参数newLength小于字符串构建器当前的长度，则字符串构建器会被截短到恰好能包含由参数newLength给定的字符个数。如果参数newLength大于或者等于当前长度，则给字符串构建器追加足够多的空字符(‘\u0000’),使其长度length变成新参数newLength。参数newLength必须大于等于0。</p><p>​    charAt(index)方法返回字符串构建器中某个特定下标index的字符。下标是基于0的，字符串构建器中的第一个字符的下标为0，第二个字符下标为1，以此类推。参数index必须大于或等于0，并且小于字符串构建器的长度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;toString、capacity、length、setlength和charAt方法&quot;&gt;&lt;a href=&quot;#toString、capacity、length、setlength和charAt方法&quot; class=&quot;headerlink&quot; title=&quot;toStri
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>StringBuilder-----修改StringBuilder中的字符串</title>
    <link href="http://yoursite.com/2018/04/17/StringBuilder-----%E4%BF%AE%E6%94%B9StringBuilder%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://yoursite.com/2018/04/17/StringBuilder-----修改StringBuilder中的字符串/</id>
    <published>2018-04-17T15:32:23.000Z</published>
    <updated>2018-04-17T16:04:03.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="StringBuilder—–修改StringBuilder中的字符串"><a href="#StringBuilder—–修改StringBuilder中的字符串" class="headerlink" title="StringBuilder—–修改StringBuilder中的字符串"></a>StringBuilder—–修改StringBuilder中的字符串</h1><hr><p><strong>要点提示：</strong>StringBuilder和StringBuffer类似于String类，区别在于String类是不可变的。</p><p>​    一般只要使用字符的地方都可以使用StringBuilder和StringBuffer类，可以给一个StringBuilder和StringBuffer类中<strong>添加、插入或追加</strong>新的内容，而String不行。</p><p>多任务并发访问，就是用StringBuffer，因为这种情况下需要同步以防止StringBuffer崩溃。</p><p>单任务访问，使用StringBuilder更有效果。</p><p><strong>java.lang.StringBuilder</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+StringBuilder() //构建一个容量为16的字符串构建器</span><br><span class="line">+StringBuilder(capacity: int) //构建一个指定容量的字符串构建器</span><br><span class="line">+StringBuilder(s: String)//构建一个指定字符的字符串构建器</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">+append(data: char[]): StringBuilder//追加一个字符数组到字符串构建器</span><br><span class="line">+append(data: char[],offset: int,len: int): StringBuilder//追加data中的子数组到字符串构建器</span><br><span class="line">+append(v: aPrimitiveType): StringBuilder//将一个基本类型值作为字符串追加到字符串构建器中</span><br><span class="line">+append(s: String): StringBuilder//追加一个字符串到字符串构建器</span><br><span class="line">+delete(startIndex: int,endIndex: int): StringBuilder//删除从startIndex到endIndex-1的字符</span><br><span class="line">+deleteCharAt(indexL int): StringBuilder//删除给定索引位置的字符</span><br><span class="line">+insert(index:int,data: char[],offset: int,len:int): StringBuilder//在字符串构建器的给定索引位置插入数组data的子数组</span><br><span class="line">+insert(offset: int,data: char[]): StringBuilder//向构建器偏移位置插入数据</span><br><span class="line">+insert(offset: int,b:a: PrimitiveType): StringBuilder//向该字符串构建器插入一个转换为字符串的值</span><br><span class="line">+replace(startIndex: int,endIndex: int,s: String): StringBuilder//将该构建器从startIndex到endIndex-1的位置的字符替换为给定的字符串</span><br><span class="line">+reverse(): StringBuilder//倒置构建器中的字符</span><br><span class="line">+setCharAt(index: int,ch: char): StringBuilder//将该构建器的指定索引位置设置为新的字符</span><br></pre></td></tr></table></figure><p>​    StringBuilder类提供了几个重载方法，可以将boolean、char、char数组、double、float、int、long和String类型值追加到字符串构建器。例如下面的代码将字符串和字符追加到stringBuilder，构成新的字符串”Welcome to Java”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">StringBuilder stringBuilder=new StringBuilder();</span><br><span class="line">stringBuilder.append(&quot;Welcome&quot;);</span><br><span class="line">stringBuilder.append(&quot; &quot;);</span><br><span class="line">stringBuilder.append(&quot;to&quot;);</span><br><span class="line">stringBuilder.append(&quot; &quot;);</span><br><span class="line">stringBuilder.append(&quot;Java&quot;);</span><br></pre></td></tr></table></figure><p>​    StringBuilderl类也包括几个重载的方法，可以可以将boolean、char、char数组、double、float、int、long和String类型值追加到字符串构建器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringBuilder.insert(11,&quot;HTML and&quot;);</span><br></pre></td></tr></table></figure><p>接上条代码，新的stringBuilder就变成了”Welcome to HTML and Java”。</p><p>​    也可以使用两个delete方法将字符从构建器中的字符串中删除，使用reverse方法导致字符串，使用replace方法替换字符串中的字符，或者使用setCharAt方法在字符串中设置一个新字符。</p><p>假设应用下面方法前stringBuilder包含的是”Welcome to Java”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">stringBuilder.delete(8,11);//将构建器变为Welcome Java</span><br><span class="line">stringBuilder.deleteCharAt(8);//将构建器变为Welcome o Java</span><br><span class="line">stringBuilder.reverse();//将构建器变为avaJ ot emocleW</span><br><span class="line">stringBuilder.replace(11,15,&quot;HTML&quot;);//将构建器变为Welcome to HTML</span><br><span class="line">stringBuilder.setCharAt(0,&apos;w&apos;);将构建器变为welcome to Java</span><br></pre></td></tr></table></figure><p>未完待续…………</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;StringBuilder—–修改StringBuilder中的字符串&quot;&gt;&lt;a href=&quot;#StringBuilder—–修改StringBuilder中的字符串&quot; class=&quot;headerlink&quot; title=&quot;StringBuilder—–修改Strin
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>如何解决安卓项目在Android Studio无法打开</title>
    <link href="http://yoursite.com/2018/04/16/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%AE%89%E5%8D%93%E9%A1%B9%E7%9B%AE%E5%9C%A8Android%20Studio%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80/"/>
    <id>http://yoursite.com/2018/04/16/如何解决安卓项目在Android Studio无法打开/</id>
    <published>2018-04-16T15:19:16.000Z</published>
    <updated>2018-04-16T15:19:45.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何解决安卓项目在Android-Studio无法打开"><a href="#如何解决安卓项目在Android-Studio无法打开" class="headerlink" title="如何解决安卓项目在Android Studio无法打开"></a>如何解决安卓项目在Android Studio无法打开</h1><hr><p>​    在github上下载一些安卓源码项目后，导入到Android Studio的时候无法导入，于是开始网上搜索大佬们的经验，为了避免忘记，还会自己写一篇博客吧，方便自己以后导入项目。</p><p>修改三处即可：</p><p>①build.gradle文件（在根目录下）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:2.3.3&apos;//将此处版本号改为自己AS的版本</span><br><span class="line"></span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line">        // in the individual module build.gradle files</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    如果不知道自己Android Studio的版本的话，新建一个项目，打开同样的文件查看。</p><p>②app文件夹中的build.gradle</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 26//</span><br><span class="line">    buildToolsVersion &quot;26.0.1&quot;//</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId &quot;com.example.zhaoxudong.calculatorapp&quot;</span><br><span class="line">        minSdkVersion 14//</span><br><span class="line">        targetSdkVersion 26//</span><br><span class="line">        versionCode 1</span><br><span class="line">        versionName &quot;1.0&quot;</span><br><span class="line">        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    用//标注的地方，修改成跟自己Android Studio一样的。</p><p>③gradle/wrapper/gradle-wrapper.properties文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Mon Dec 28 10:00:20 PST 2015</span><br><span class="line">distributionBase=GRADLE_USER_HOME</span><br><span class="line">distributionPath=wrapper/dists</span><br><span class="line">zipStoreBase=GRADLE_USER_HOME</span><br><span class="line">zipStorePath=wrapper/dists</span><br><span class="line">distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip//</span><br></pre></td></tr></table></figure><p>​    将//前面的/gadle-3.3-all.zip里面的数字改为与自己Android Studio一样的。</p><p>此时再从Android Studio中导入该项目就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何解决安卓项目在Android-Studio无法打开&quot;&gt;&lt;a href=&quot;#如何解决安卓项目在Android-Studio无法打开&quot; class=&quot;headerlink&quot; title=&quot;如何解决安卓项目在Android Studio无法打开&quot;&gt;&lt;/a&gt;如何解决安
      
    
    </summary>
    
      <category term="Android编程" scheme="http://yoursite.com/categories/Android%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>BigInteger和BigDecimal类</title>
    <link href="http://yoursite.com/2018/04/16/BigInteger%E5%92%8CBigDecimal%E7%B1%BB/"/>
    <id>http://yoursite.com/2018/04/16/BigInteger和BigDecimal类/</id>
    <published>2018-04-16T08:32:23.000Z</published>
    <updated>2018-04-16T08:32:40.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BigInteger和BigDecimal类"><a href="#BigInteger和BigDecimal类" class="headerlink" title="BigInteger和BigDecimal类"></a>BigInteger和BigDecimal类</h1><hr><p><strong>要点提示：</strong>BigInteger和BigDecimal类可以用于表示任意大小和精度的整数或者十进制数。</p><p>​    如果要进行非常大的数的计算或者高精度浮点值的计算，可以使用java.math包中的BigInteger和BigDecimal类。他们都是不可变的。long类型的最大整数值为</p><p>long.MAX_VALUE（即9223372036854775807）。BigInteger的实例可以表示任意大小的整数。可以使用new BigInteger(String)和new BigDecimal(String)来创建BigInteger和BigDecimal的实例，使用<strong>add、subtract、multiple、divide和remainder</strong>方法完成算数运算，使用<strong>compareTo</strong>方法比较两个大数字。例如下面代码创建两个BigInteger对象并且将它们进行相乘：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BigInteger a = new BigInteger(&quot;9223372036854775807&quot;);</span><br><span class="line">BigInteger b = new BigInteger(&quot;2&quot;);</span><br><span class="line">BigInteger c = a.multiply(b);//9223372036854775807*2</span><br><span class="line">System.out.println(c);</span><br></pre></td></tr></table></figure><p>它的输出为18446744073709551614。</p><p>对BigDecimal对象的精度没有限制。如果结果不能终止，那么divide方法会抛出ArithmeticException异常。但是可以使用重载divide(BigDecimal d,int scale,int roundingMode)方法来指定制度和摄入方式来避免这个异常，这里的scale是指小数点后最小的整数位数。例如下面的代码创建两个尺度为20、摄入方式为BigDecimal.ROUND_UP的BigDecimal对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal a = new BigDecimal(1.0);</span><br><span class="line">BigDecimal b = new BigDecimal(3);</span><br><span class="line">BigDecimal c= a.divide(b,20,BigDecimal.ROUND_UP)；</span><br><span class="line">Sysyem.out.println(c);</span><br></pre></td></tr></table></figure><p>输出为0.33333333333333333334。</p><p>注意，一个整数的阶乘可能会很大，下面的程序给出可以返回任意整数阶乘的方法。</p><p>LargeFactorial.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package ohhh;</span><br><span class="line">import java.math.*;</span><br><span class="line"></span><br><span class="line">public class LargeFactorial &#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">System.out.println(&quot;50! is\n&quot;+factorial(50));&#125;</span><br><span class="line">public static BigInteger factorial(long n)&#123;</span><br><span class="line">BigInteger result=BigInteger.ONE;//等价于=new BigInteger(&quot;1&quot;)</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">result=result.multiply(new BigInteger(i+&quot;&quot;));//BigInteger(String)</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果是：</p><p>50! is<br>30414093201713378043612608166064768844377641568960512000000000000</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BigInteger和BigDecimal类&quot;&gt;&lt;a href=&quot;#BigInteger和BigDecimal类&quot; class=&quot;headerlink&quot; title=&quot;BigInteger和BigDecimal类&quot;&gt;&lt;/a&gt;BigInteger和BigDecima
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>关键字this引用</title>
    <link href="http://yoursite.com/2018/04/16/this%E5%BC%95%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/16/this引用/</id>
    <published>2018-04-16T06:28:56.000Z</published>
    <updated>2018-04-16T06:29:12.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关键字this引用"><a href="#关键字this引用" class="headerlink" title="关键字this引用"></a>关键字this引用</h1><hr><p><strong>要点提示：</strong>关键字this引用独享自身。他也可以在构造方法内部调用另一个类的其他构造方法。</p><p>​    关键字this是指向调用对象本身的引用名。可以用this关键字引用对象的实例成员。</p><p>例如：下面a的代码使用this来显示地引用独享的radius以及调用他的getArea()方法。this引用通常可以省略掉的，如b所示。然而，在引用隐藏数据域的以及调用一个重载的构造方法的时候，this引用是必须的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//a:</span><br><span class="line">public class Circle&#123;</span><br><span class="line">    private double radius;</span><br><span class="line">    .....</span><br><span class="line">    public double getArea() &#123;</span><br><span class="line">        return this.radius*this.radius*Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;radius&quot;+this.radius+&quot;area&quot;+this.getArea();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//b:</span><br><span class="line">public class Circle&#123;</span><br><span class="line">    private double radius;</span><br><span class="line">    .....</span><br><span class="line">    public double getArea() &#123;</span><br><span class="line">        return radius*radius*Math.PI;</span><br><span class="line">    &#125;</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;radius&quot;+radius+&quot;area&quot;+getArea();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用this引用隐藏数据域"><a href="#使用this引用隐藏数据域" class="headerlink" title="使用this引用隐藏数据域"></a>使用this引用隐藏数据域</h2><p>​    this关键字可以用于引用类的隐藏数据域。例如在数据域set方法中，经常将数据域名用作参数名。在这种情况下，这个数据域在set方法中被隐藏。为了给他设置新值，需要在方法中引用隐藏的数据域名。隐藏的静态变量可以简单的通过“类名.静态变量”的方式引用。隐藏的实例变量就需要使用关键字this来引用了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class F &#123;</span><br><span class="line">    private int i = 5;</span><br><span class="line">    private static double k = 0;</span><br><span class="line">    public void setI(int i)&#123;</span><br><span class="line">        this.i = i;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void setK(double k) &#123;</span><br><span class="line">        F.k = k;</span><br><span class="line">    &#125;</span><br><span class="line">    //other menthods omitted</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用this调用构造方法"><a href="#使用this调用构造方法" class="headerlink" title="使用this调用构造方法"></a>使用this调用构造方法</h2><p>​    关键字this可以用于调用同一个类的另一个构造方法。例如，可以如下改写Circle类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class Circle &#123;</span><br><span class="line">    private double radius;</span><br><span class="line">    public Circle(double radius) &#123;</span><br><span class="line">        tihs.radius = radius;//this关键字用于引用所构建的对象的隐藏数据radius</span><br><span class="line">    &#125;</span><br><span class="line">    public Circle() &#123;</span><br><span class="line">        tihs(1.0);//this关键字用来调用另一个构造方法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    在第二个构造方法中，this(1.0)这一行调用带double值参数的第一个构造方法。</p><p><strong>注意：</strong>Java要求在构造方法中，语句this(参数列表)应在任何其他可执行语句之前出现。</p><p><strong>提示：</strong>如果一个类有多个构造方法，最好尽可能的使this(参数列表)实现它们。通常，无参数或参数少的构造方法可以用this(参数列表)调用参数多德构造方法。这样做通常可以简化代码，使类便于阅读和维护。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关键字this引用&quot;&gt;&lt;a href=&quot;#关键字this引用&quot; class=&quot;headerlink&quot; title=&quot;关键字this引用&quot;&gt;&lt;/a&gt;关键字this引用&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;要点提示：&lt;/strong&gt;关键字this引用独享自身。他
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java库中的Point2D类</title>
    <link href="http://yoursite.com/2018/04/15/Java%E5%BA%93%E4%B8%AD%E7%9A%84Point2D%E7%B1%BB/"/>
    <id>http://yoursite.com/2018/04/15/Java库中的Point2D类/</id>
    <published>2018-04-15T03:04:23.000Z</published>
    <updated>2018-04-15T03:04:38.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java库中的Point2D类"><a href="#Java库中的Point2D类" class="headerlink" title="Java库中的Point2D类"></a>Java库中的Point2D类</h1><hr><p><strong>javafx.geometry.Point2D</strong></p><p>+Point2D(x: double,y: double)        //用给定的x和y坐标来创建一个Point2D对象</p><p>+distance(x: double,y: double): double        //返回该点到定点（x,y）的距离</p><p>+distance(p: Point2D): double        //返回该点到p点的距离</p><p>+getX(): double                //返回该点的x的坐标</p><p>+getY(): double                //返回该点的y的坐标</p><p>+toString(): String                //返回该点的字符串表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">import javafx.geometry.Point2D;</span><br><span class="line">public class TestPoint2D &#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line"></span><br><span class="line">Scanner input= new Scanner(System.in);</span><br><span class="line">System.out.println(&quot;Enter point1&apos;s x-,y-coordinates:&quot;);</span><br><span class="line">double x1=input.nextDouble();</span><br><span class="line">double y1=input.nextDouble();</span><br><span class="line">System.out.println(&quot;Enter point2&apos;s x-,y-coordinates:&quot;);</span><br><span class="line">double x2=input.nextDouble();</span><br><span class="line">double y2=input.nextDouble();</span><br><span class="line">Point2D p1 =new Point2D(x1,y1);</span><br><span class="line">Point2D p2 =new Point2D(x2,y2);</span><br><span class="line">System.out.println(&quot;p1 is&quot;+p1.toString());</span><br><span class="line">System.out.println(&quot;p2 is&quot;+p2.toString());</span><br><span class="line">System.out.println(&quot;distance is&quot;+p1.distance(p2));</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么会把这个类单拿出来呢，因为在<strong>eclipse</strong>运行的时候，你会发现会<strong>报错</strong>，难道是书写错了？不不不，下面是<strong>答案：</strong></p><p>这是因为这个类是Eclipse的JRE带的，但并不属于JAVA的公开API。<br>解决方法：<br>右击项目-&gt;属性-&gt;Java Compiler-&gt;Errors/Warnings-&gt;Deprecated and restricted API-&gt;Forbidden reference -&gt; Ignore</p><p><strong>运行结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Enter point1&apos;s x-,y-coordinates:</span><br><span class="line">1 2</span><br><span class="line">Enter point2&apos;s x-,y-coordinates:</span><br><span class="line">3 4</span><br><span class="line">p1 isPoint2D [x = 1.0, y = 2.0]</span><br><span class="line">p2 isPoint2D [x = 3.0, y = 4.0]</span><br><span class="line">distance is2.8284271247461903</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java库中的Point2D类&quot;&gt;&lt;a href=&quot;#Java库中的Point2D类&quot; class=&quot;headerlink&quot; title=&quot;Java库中的Point2D类&quot;&gt;&lt;/a&gt;Java库中的Point2D类&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;javaf
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用Java库中的类</title>
    <link href="http://yoursite.com/2018/04/15/%E4%BD%BF%E7%94%A8Java%E5%BA%93%E4%B8%AD%E7%9A%84%E7%B1%BB/"/>
    <id>http://yoursite.com/2018/04/15/使用Java库中的类/</id>
    <published>2018-04-15T02:52:23.000Z</published>
    <updated>2018-04-15T02:52:32.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Java库中的类"><a href="#使用Java库中的类" class="headerlink" title="使用Java库中的类"></a>使用Java库中的类</h1><hr><h2 id="Date类"><a href="#Date类" class="headerlink" title="Date类"></a>Date类</h2><p><strong>java.util.Date</strong></p><p>+Date()            //为当前时间创建一个Date对象</p><p>+Date(elapseTime: long)//为一个从格林威治时间1970年1月1日至今流逝的以毫秒为单位计算的给定时间创建的Date对象</p><p>+toString(): String        //返回一个代表日期和时间的字符串表示</p><p>+getTime(): long        //返回从格林威治时间1970年1月1日至今流逝的毫秒数</p><p>+setTime(elapseTime: long): void    //在对象中设置一个新的流逝时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java.util.Date date = new java.util.Date();</span><br><span class="line">System.out.println(&quot;The elapsed time since Jan 1,1970 is&quot;+date.getTime()+&quot;milliseconds&quot;);</span><br><span class="line">System.out.println(date.toString());</span><br><span class="line">//输出：</span><br><span class="line">The elapsed time since Jan 1,1970 is1523760077427milliseconds</span><br><span class="line">Sun Apr 15 10:41:17 CST 2018</span><br></pre></td></tr></table></figure><h2 id="Random类"><a href="#Random类" class="headerlink" title="Random类"></a>Random类</h2><p><strong>java.util.Random</strong></p><p>+Random()        //以当前时间创建一个Random对象</p><p>+Random(seed: long)        //以一个特定的值作为种子创建一个Random对象</p><p>+nextInt(): int        //返回一个随机的int值</p><p>+nextInt(n: int): int        //返回一个0到n之间的随机int类型的数</p><p>+nextLong(): long            //返回一个0到n之间的随机long值</p><p>+nextDouble(): double    //返回一个0.0到1.0（不包含1.0）之间的随机double类型的值</p><p>+nextFloat(): float            //返回一个0.0F到1.0F（不包含1.0F）之间的随机float类型的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">java.util.Random random1 = new java.util.Random(3);</span><br><span class="line">System.out.println(&quot;From random1:&quot;);</span><br><span class="line">for(int i=0;i&lt;10;i++)</span><br><span class="line">System.out.print(random1.nextInt(1000)+&quot; &quot;);</span><br><span class="line"></span><br><span class="line">java.util.Random random2 = new java.util.Random(3);</span><br><span class="line">System.out.println(&quot;\nFrom random2:&quot;);</span><br><span class="line">for(int i=0;i&lt;10;i++)</span><br><span class="line">System.out.print(random2.nextInt(1000)+&quot; &quot;);</span><br><span class="line"></span><br><span class="line">java.util.Random random3 = new java.util.Random();</span><br><span class="line">System.out.println(&quot;\nFrom random3:&quot;);</span><br><span class="line">for(int i=0;i&lt;10;i++)</span><br><span class="line">System.out.print(random3.nextInt(1000)+&quot; &quot;);</span><br><span class="line">//输出：</span><br><span class="line">From random1:</span><br><span class="line">734 660 210 581 128 202 549 564 459 961 </span><br><span class="line">From random2:</span><br><span class="line">734 660 210 581 128 202 549 564 459 961 </span><br><span class="line">From random3:</span><br><span class="line">384 412 586 796 729 521 52 718 586 355</span><br></pre></td></tr></table></figure><p>还有一个类，我们在下一篇文章介绍，有一点特殊。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用Java库中的类&quot;&gt;&lt;a href=&quot;#使用Java库中的类&quot; class=&quot;headerlink&quot; title=&quot;使用Java库中的类&quot;&gt;&lt;/a&gt;使用Java库中的类&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;Date类&quot;&gt;&lt;a href=&quot;#Date类&quot; clas
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java类多文件运行</title>
    <link href="http://yoursite.com/2018/04/14/Java%E7%B1%BB%E5%A4%9A%E6%96%87%E4%BB%B6%E8%BF%90%E8%A1%8C/"/>
    <id>http://yoursite.com/2018/04/14/Java类多文件运行/</id>
    <published>2018-04-14T01:45:23.000Z</published>
    <updated>2018-04-14T01:47:51.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java类多文件运行"><a href="#Java类多文件运行" class="headerlink" title="Java类多文件运行"></a>Java类多文件运行</h1><hr><h2 id="TV类对电视机的建模："><a href="#TV类对电视机的建模：" class="headerlink" title="TV类对电视机的建模："></a>TV类对电视机的建模：</h2><p>​    channel: int             //这个TV的当前频道（从1到120）</p><p>​    volumeLevel: int     //这个TV的当前音量（从1到7）</p><p>​    on: boolean             //表明这个TV是开的还是关的</p><p>​    +TV()              //构造一个默认的TV对象</p><p>​    +turnOn(): void       //打开这个TV</p><p>​    +turnOff(): void       //关闭这个TV</p><p>​    +setChannel(newChannel: int): void        //为这个TV设置一个新频道</p><p>​    +setVolume(newVolumeLevel: int): void  //为这个TV设置一个新音量</p><p>​    +channelUp(): void                    //给频道数+1</p><p>​    +channelDown(): void                    //给频道数-1</p><p>​    +volumeUp(): void                     //给音量+1</p><p>​    +volumeDown:void                    //给音量-1</p><h2 id="TV-java文件"><a href="#TV-java文件" class="headerlink" title="TV.java文件"></a>TV.java文件</h2><p>TV类中的构造方法定义为公共的，因此可以从其他类中访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public class TV &#123;</span><br><span class="line">int channel = 1;</span><br><span class="line">int volumeLevel = 1;</span><br><span class="line">boolean on = false;</span><br><span class="line">public void turnOn()&#123;//开</span><br><span class="line">on = true;</span><br><span class="line">&#125;</span><br><span class="line">public void turnOff()&#123;//关</span><br><span class="line">on = false;</span><br><span class="line">&#125;</span><br><span class="line">public void setChannel(int newChannel)&#123;</span><br><span class="line">if(on &amp;&amp; newChannel &gt;= 1&amp;&amp; newChannel &lt;= 120)</span><br><span class="line">volumeLevel = newChannel;</span><br><span class="line">&#125;</span><br><span class="line">public void setVolume(int newVolumeLevel)&#123;</span><br><span class="line">if(on &amp;&amp; newVolumeLevel &gt;=1 &amp;&amp; newVolumeLevel &lt;=7)</span><br><span class="line">volumeLevel = newVolumeLevel;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public void channelUp()&#123;</span><br><span class="line">if(on &amp;&amp; channel &lt; 120)</span><br><span class="line">channel++;</span><br><span class="line">&#125;</span><br><span class="line">public void channelDown()&#123;</span><br><span class="line">if (on &amp;&amp; channel &gt; 1)</span><br><span class="line">channel--;</span><br><span class="line">&#125;</span><br><span class="line">public void volumeUp()&#123;</span><br><span class="line">if(on &amp;&amp; volumeLevel &lt; 7)</span><br><span class="line">volumeLevel++;</span><br><span class="line">&#125;</span><br><span class="line">public void volumeDown()&#123;</span><br><span class="line">if(on &amp;&amp; volumeLevel &gt; 1)</span><br><span class="line">volumeLevel--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TestTV-java文件"><a href="#TestTV-java文件" class="headerlink" title="TestTV.java文件"></a>TestTV.java文件</h2><p>第3行和第8行创建了两个对象，然后调用对象中的方法来完成设置频道和音量的动作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class TestTV &#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">TV tv1 = new TV();</span><br><span class="line">tv1.turnOn();//tv1 开</span><br><span class="line">tv1.setChannel(30);//频道 30</span><br><span class="line">tv1.setVolume(3);// 音量 3</span><br><span class="line"></span><br><span class="line">TV tv2 = new TV();</span><br><span class="line">tv2.turnOn();// tv2 开</span><br><span class="line">tv2.channelUp();// tv2 频道+1</span><br><span class="line">tv2.volumeUp();//tv2 音量+1</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;tv1的频道是&quot;+tv1.channel+&quot;声音是&quot;+tv1.volumeLevel);</span><br><span class="line">System.out.println(&quot;tv2的频道是&quot;+tv2.channel+&quot;声音是&quot;+tv2.volumeLevel);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tv1的频道是1声音是3</span><br><span class="line">tv2的频道是2声音是2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java类多文件运行&quot;&gt;&lt;a href=&quot;#Java类多文件运行&quot; class=&quot;headerlink&quot; title=&quot;Java类多文件运行&quot;&gt;&lt;/a&gt;Java类多文件运行&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;TV类对电视机的建模：&quot;&gt;&lt;a href=&quot;#TV类对电
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客添加搜索功能</title>
    <link href="http://yoursite.com/2018/04/13/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2018/04/13/hexo博客添加搜索功能/</id>
    <published>2018-04-13T03:19:55.000Z</published>
    <updated>2018-04-13T03:26:21.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo博客添加搜索功能"><a href="#hexo博客添加搜索功能" class="headerlink" title="hexo博客添加搜索功能"></a>hexo博客添加搜索功能</h1><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  当博文慢慢变多的时候，标签和分类已经不能提供太大的作用，无法准确的定位到自己想要看的博客上去，所以添加一个本站内搜索功能是很有必要的。</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>直接在自己的博客文件夹下（我的是blog）点击鼠标右键选择<strong>Git Bash Here</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h3><p>我的路径是：blog下的_config.yml文件，进行编辑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search：</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure><p>PS:每个冒号后面都有空格。</p><h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><p>我的路径：/blog/themes/next下的_config.yml文件，进行编辑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><p>PS:冒号后面都有空格。</p><p>  此时，部署到github，打开网页就可以看到搜索功能了，容易添加，使用起来很方便，推荐添加，增加网站友好度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo博客添加搜索功能&quot;&gt;&lt;a href=&quot;#hexo博客添加搜索功能&quot; class=&quot;headerlink&quot; title=&quot;hexo博客添加搜索功能&quot;&gt;&lt;/a&gt;hexo博客添加搜索功能&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; cl
      
    
    </summary>
    
      <category term="博客杂谈" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客添加评论神器---valine</title>
    <link href="http://yoursite.com/2018/04/12/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%A5%9E%E5%99%A8---valine/"/>
    <id>http://yoursite.com/2018/04/12/hexo博客添加评论神器---valine/</id>
    <published>2018-04-12T15:15:23.000Z</published>
    <updated>2018-04-15T02:53:17.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo博客添加评论神器—valine"><a href="#hexo博客添加评论神器—valine" class="headerlink" title="hexo博客添加评论神器—valine"></a>hexo博客添加评论神器—valine</h1><hr><p>我们评论系统是放在LeanCloud上的，因此需要先去注册一个账号。</p><p><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud官网，点击注册</a></p><p>注册完成后需要创建一个应用，创建成功以后，<strong>进入应用→设置→应用key</strong></p><p>获取到了你的<strong>appid</strong>和<strong>appkey</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">App ID</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">每个app有一个唯一的ID，不可变更</span><br><span class="line"></span><br><span class="line">App Key</span><br><span class="line">XXXXXXXXXXXXXXXXXXXXXXXXXX</span><br><span class="line">适用于所有平台</span><br></pre></td></tr></table></figure><p>拥有了你的<strong>appid</strong>和<strong>appkey</strong>后，打开<strong>主题配置文件</strong>（blog/themes/next/_config.yml）填写<strong>appid</strong>和<strong>appkey</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">valine：</span><br><span class="line">enable: true</span><br><span class="line">appid: your app id //你获取的appid</span><br><span class="line">appkey your app key //你获取的app key</span><br><span class="line">notifiy: false # mail notifier,https://github.com/xCss/Valine/wiki //是否开启邮箱提醒</span><br><span class="line">verfify: false # Verifaication code //开启验证码</span><br><span class="line">planceholde: 评论内容。 //你要发表的评论内容</span><br><span class="line">guest_info: nick,mail,link</span><br><span class="line">pageSize: 10</span><br></pre></td></tr></table></figure><p>PS：配置的时候自行删除”//“开始以后的注释内容，同时如果开启邮箱提醒的话，会默认开启验证码模式。</p><p>完成这些以后还需要在<strong>LeanCloud</strong>中，<strong>进入应用→设置→安全中心</strong>在Web 安全域名中填写自己的博客首页，然后保存。</p><p>最后部署到github，打开自己的博客就可以看到评论功能，有没有点小激动，快去邀请小伙伴发表评论吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo博客添加评论神器—valine&quot;&gt;&lt;a href=&quot;#hexo博客添加评论神器—valine&quot; class=&quot;headerlink&quot; title=&quot;hexo博客添加评论神器—valine&quot;&gt;&lt;/a&gt;hexo博客添加评论神器—valine&lt;/h1&gt;&lt;hr&gt;

      
    
    </summary>
    
      <category term="博客杂谈" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Valine" scheme="http://yoursite.com/tags/Valine/"/>
    
  </entry>
  
  <entry>
    <title>词法分析器的设计与实现</title>
    <link href="http://yoursite.com/2018/04/11/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/04/11/词法分析器的设计与实现/</id>
    <published>2018-04-11T03:33:24.000Z</published>
    <updated>2018-04-11T06:16:10.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="词法分析器的设计与实现"><a href="#词法分析器的设计与实现" class="headerlink" title="词法分析器的设计与实现"></a>词法分析器的设计与实现</h1><hr><h2 id="词法分析器介绍"><a href="#词法分析器介绍" class="headerlink" title="词法分析器介绍"></a>词法分析器介绍</h2><p>  词法分析是从左到右扫描每行源程序的符号，拼成单词，换成统一的机内表示形式——TOKEN字，送给语法分析程序。</p><p>  TOKEN字是一个二元式：（单词种别码，自身值）。单词自身值按如下规则给出：</p><p>​                                   1.标识符的自身值是他在符号表的入口位置。</p><p>​                                   2.常数的自身值是常数本身（或者其他二进制数值）。</p><p>​                                   3.关键字和界限符的自身值为本身。</p><h2 id="词法分析器功能"><a href="#词法分析器功能" class="headerlink" title="词法分析器功能"></a>词法分析器功能</h2><p>1.输入：字符串（带进行词法分析的源程序），可从键盘直接输入或从文件读入。</p><p>   输出：由（种别码，自身值）所组成的二元组序列。</p><p>   单词的种别码是语法分析需要的信息，可用整数编码表示，例如：标识符的种别码为1，常数为2，保留字为3，运算符为4，界符为5。</p><p>   单词的自身值是编译其他阶段需要的信息，标识符的自身是标识符在符号表入口，其他类型单词的自身值是其本身。</p><p>例如：输入：if i &gt;= 15 then x := y ;</p><p>​           输出：</p><p>​                       （3，if）</p><p>​                       （1，0）//i符号的入口为0</p><p>​                       （4，&gt;=）</p><p>​                       （2，15）</p><p>​                       （3，then）</p><p>​                       （1，1）//x符号的入口为1</p><p>​                       （4，：=）</p><p>​                       （1，2）//y符号的入口为2</p><p>​                       （5，；）</p><p>2.功能：</p><p>a.滤过空格。</p><p>b.识别保留字：if then else while do 等。</p><p>c.识别标识符：&lt;字母&gt;(&lt;字母&gt;|&lt;数字&gt;)。</p><p>d.识别整数：0|(1|2|3|4|5|6|7|8|9)(0|1|2|3|4|5|6|7|8|9)。</p><p>e.识别典型的运算符和分隔符，例如：+ - * / &gt; &gt;= &lt;= ( ) ;</p><p>3.具有一定的错误处理功能，例如：能检查出程序语言的字符集以外的非法字符。</p><h2 id="源码附带注释"><a href="#源码附带注释" class="headerlink" title="源码附带注释"></a>源码附带注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;string&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">bool isLetter(char ch)&#123;//isLetter 标识符</span><br><span class="line">if ((ch &gt;= &apos;A&apos; &amp;&amp; ch &lt;= &apos;Z&apos;) || (ch &gt;= &apos;a&apos; &amp;&amp; ch &lt;= &apos;z&apos;)) return true;</span><br><span class="line">else return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool isDigit(char ch)&#123;//isDigit 常数</span><br><span class="line">if (ch &gt;= &apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos;) return true;</span><br><span class="line">else return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool isOperators(char ch)&#123;// isOperators 运算符</span><br><span class="line">if (ch == &apos;+&apos; || ch == &apos;*&apos; || ch == &apos;-&apos; || ch == &apos;/&apos; || ch == &apos;=&apos; || ch == &apos;:&apos; || ch == &apos;&lt;&apos; || ch == &apos;&gt;&apos;) return true;</span><br><span class="line">else return false;</span><br><span class="line">&#125;</span><br><span class="line">bool isDelimiter(char ch)&#123;// isDelimiter 界符</span><br><span class="line">if (ch == &apos;,&apos; || ch == &apos;;&apos; || ch == &apos;.&apos; || ch == &apos;(&apos; || ch == &apos;)&apos; || ch == &apos;[&apos; || ch == &apos;]&apos; || ch == &apos;&#123;&apos; || ch == &apos;&#125;&apos; || ch == &apos;#&apos;) return true;</span><br><span class="line">else return false;</span><br><span class="line">&#125;</span><br><span class="line">bool isBlank(char ch)&#123;</span><br><span class="line">if (ch == &apos; &apos; || ch == &apos;\t&apos;) return true;</span><br><span class="line">else return false;</span><br><span class="line">&#125;</span><br><span class="line">char  key[34][10] = &#123; &quot;main&quot;,</span><br><span class="line">&quot;auto&quot;, &quot;short&quot;, &quot;int&quot;, &quot;long&quot;, &quot;float&quot;, &quot;double&quot;, &quot;char&quot;, &quot;struct&quot;</span><br><span class="line">, &quot;union&quot;, &quot;enum&quot;, &quot;typedef&quot;, &quot;const&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;extern&quot;, &quot;register&quot;</span><br><span class="line">, &quot;static&quot;, &quot;volatile&quot;, &quot;void&quot;, &quot;if&quot;, &quot;else&quot;, &quot;switch&quot;, &quot;case&quot;, &quot;for&quot;</span><br><span class="line">, &quot;do&quot;, &quot;while&quot;, &quot;goto&quot;, &quot;continue&quot;, &quot;break&quot;, &quot;default&quot;, &quot;sizeof&quot;, &quot;return&quot;,&quot;then&quot;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">back:</span><br><span class="line">char Sourcecode[100] = &quot;&quot;;</span><br><span class="line">int number=0;</span><br><span class="line">int h=0;</span><br><span class="line">char hh[100][10]=&#123;&apos;\0&apos;&#125;;</span><br><span class="line">//声明变量</span><br><span class="line">printf(&quot;请输入程序段，标识符为1，常数为2，关键字为3，运算符4，界符5\n&quot;);</span><br><span class="line">gets(Sourcecode);</span><br><span class="line">//读入程序段放入firstcode</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; 100; i)&#123;</span><br><span class="line">//char delimiter[2] = &quot;&quot;;</span><br><span class="line">int j = 0;  //letter  标识符</span><br><span class="line">int l = 0;   //digit  常数</span><br><span class="line">int k = 0;   //operators  运算符</span><br><span class="line"></span><br><span class="line">int b = 0;   //类型编号</span><br><span class="line">char num[10] = &quot;&quot;;</span><br><span class="line">char word[10] = &quot;&quot;;  </span><br><span class="line">if (isBlank(Sourcecode[i]) == 1)&#123;</span><br><span class="line">i += 1;</span><br><span class="line">&#125;//去空格</span><br><span class="line">else&#123;</span><br><span class="line">if (isLetter(Sourcecode[i]) == 1)         //是否为字母</span><br><span class="line">&#123;                                             //是</span><br><span class="line"></span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">if (j &lt; 10)&#123;</span><br><span class="line">word[j] = Sourcecode[i];</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; while (isDigit(Sourcecode[++i]) == 1|| isLetter(Sourcecode[i]) == 1);//常数||标识符</span><br><span class="line"></span><br><span class="line">//*~~~*</span><br><span class="line">int a = 0;</span><br><span class="line">while (a &lt; 34)&#123;</span><br><span class="line">if (strcmp(key[a], word) == 0)&#123;</span><br><span class="line">b = 3;</span><br><span class="line">a++;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">b = 1;</span><br><span class="line">a++;</span><br><span class="line">//否</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (b == 3)&#123;</span><br><span class="line">printf(&quot;(3,%s)\n&quot;, word);</span><br><span class="line">&#125;//~~~~~~~~~~~~~~~~~~~~~~~~</span><br></pre></td></tr></table></figure><pre><code>if (b == 1){    int q=0;    for(int qq=0;strcmp(hh[qq],&quot;&quot;)!=0;qq++){        if(strcmp(word,hh[qq])==0){            q=1;break;        }    }    if(q==1){        printf(&quot;(1,%d)\n&quot;,qq);        q=0;    }else{        for(qq=0;qq&lt;j;qq++){            hh[h][qq]=word[qq];        }        printf(&quot;(1,%d)\n&quot;,h);        h++;    }/*    int qq,yy=0;    if(h==0){        for(qq=0;qq&lt;j;qq++){            hh[0][qq]=word[qq];        }        printf(&quot;(1,%d)\n&quot;,h);        h++;    }else{        for(qq=0;qq&lt;h;qq++){            if(strcmp(hh[qq], word)==0){                yy=1;                break;            }        }        if(yy==0){            for(qq=0;qq&lt;j;qq++){                hh[h][qq]=word[qq];            }            printf(&quot;(1,%d)\n&quot;,h);            h++;            yy=0;        }        else{            for(qq=0;qq&lt;h;qq++){                if(strcmp(hh[qq], word)==0)                    printf(&quot;(1,%d)\n&quot;,qq);                yy=0;            }        }    }*/    //}//<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&#125;</span><br><span class="line">else if (isDigit(Sourcecode[i]) == 1)//常数</span><br><span class="line">&#123;int c = 0;</span><br><span class="line">while (isDigit(Sourcecode[i]))&#123;</span><br><span class="line"></span><br><span class="line">num[c] = Sourcecode[i];</span><br><span class="line">i += 1;</span><br><span class="line">c++;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;(2,%s)\n&quot;, num);</span><br><span class="line">&#125;</span><br><span class="line">else if (isDelimiter(Sourcecode[i]) == 1)&#123;//界符</span><br><span class="line"></span><br><span class="line">printf(&quot;(5,%c)\n&quot;, Sourcecode[i]);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">else if (isOperators(Sourcecode[i]) == 1)&#123;//运算符</span><br><span class="line"></span><br><span class="line">if (Sourcecode[i] == &apos;:&apos; || Sourcecode[i] == &apos;&gt;&apos; || Sourcecode[i] == &apos;&lt;&apos;&amp;&amp;Sourcecode[i + 1] == &apos;=&apos;)&#123;</span><br><span class="line">printf(&quot;(4,%c%c)\n&quot;, Sourcecode[i], Sourcecode[i + 1]);</span><br><span class="line">i += 2;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">printf(&quot;(4,%c)\n&quot;, Sourcecode[i]);</span><br><span class="line">i+= 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if(Sourcecode[i]!=&apos;\0&apos;)</span><br><span class="line">printf(&quot;(error,%c)\n&quot;,Sourcecode[i]);</span><br><span class="line">if(Sourcecode[i+1]!=&apos;\0&apos;)&#123;</span><br><span class="line"></span><br><span class="line">i+=1;&#125;</span><br><span class="line">else</span><br><span class="line">i=100;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">goto back;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><h2 id="编程感悟"><a href="#编程感悟" class="headerlink" title="编程感悟"></a>编程感悟</h2><p>1.需要对是否为标识符、常数、保留字、运算符、界符进行判断，应用布尔类型完美的解决这个问题。</p><p>2.++i与i++都是i=i+1的含义，但是++i表示执行前i=i+1，而i++表示执行后i=i+1。</p><p>3.用一维数组来表示字符串，二维数组用来表示字符串的集合，并且用strcmp(string_1,string_2)来进行字符串内容的比较，相同返回0。</p><p>4.对于相同的标识符来说，入口应该相同，所以在对这里进行处理的时候，声明一个二维数组用来存放各个标识符（字符或者字符串），根据二维数组中的行下标进行入口标记。</p><p>5.好好学习一维数组、二维数组的应用场景以及应用原理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;词法分析器的设计与实现&quot;&gt;&lt;a href=&quot;#词法分析器的设计与实现&quot; class=&quot;headerlink&quot; title=&quot;词法分析器的设计与实现&quot;&gt;&lt;/a&gt;词法分析器的设计与实现&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;词法分析器介绍&quot;&gt;&lt;a href=&quot;#词法分析器
      
    
    </summary>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="词法分析" scheme="http://yoursite.com/tags/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>并行计算π值</title>
    <link href="http://yoursite.com/2018/04/02/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    <id>http://yoursite.com/2018/04/02/并行计算/</id>
    <published>2018-04-02T14:14:23.000Z</published>
    <updated>2018-04-11T07:35:29.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="并行计算π值"><a href="#并行计算π值" class="headerlink" title="并行计算π值"></a>并行计算π值</h1><hr><h2 id="并行计算定义"><a href="#并行计算定义" class="headerlink" title="并行计算定义"></a>并行计算定义</h2><p>  并行计算或称平计算是相对于串行计算来说的。它是一种一次可执行多个指令的算法，目的是提高计算速度，及通过扩大问题求解规模，解决大型而复杂的计算问题。所谓并行计算可分为时间上的并行和空间上的并行。时间上的并行就是指流水线技术，而空间上的并行则是指用多个处理器并发的执行计算。</p><h2 id="并行计算特征"><a href="#并行计算特征" class="headerlink" title="并行计算特征"></a>并行计算特征</h2><p>1、将工作分离成离散部分，有助于同时解决；</p><p>2、随时并及时地执行多个程序指令；</p><p>3、多计算资源下的解决问题的耗时要少于单个计算资源下的耗时。</p><h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><p>并行计算机是靠网络将各个处理机或者处理器连接起来的，一般有以下几种方式，处理单元间有着固定连接的一类网络，在程序执行期间，这种点到点的链接保持不变。</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h3><p>1.点击菜单栏右侧的wifi图标，选择Edit Connections按钮。</p><p>2.点击Edit按钮编辑现有的有线连接。切换到IPV4 Settings选项卡，Method选择手动设置IP模式（Manual），点击add按钮添加IP。IP地址自行设定（如：192.168.0.1）保证4个节点在同一网段（网关相同）。子掩码255.255.255.0，网关根据IP设置（如：192.168.0.1），保存即设定成功。（可能需要手动点击wifi选择Ethernet Connection1）</p><h3 id="安装ssh服务"><a href="#安装ssh服务" class="headerlink" title="安装ssh服务"></a>安装ssh服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i libck*</span><br><span class="line">sudo dpkg -i openssh-client*</span><br><span class="line">sudo dpkg -i openssh-sftp*</span><br><span class="line">sudo dpkg -i openssh-server*</span><br></pre></td></tr></table></figure><h3 id="启动ssh服务"><a href="#启动ssh服务" class="headerlink" title="启动ssh服务"></a>启动ssh服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh start</span><br></pre></td></tr></table></figure><h3 id="安装MPICH2"><a href="#安装MPICH2" class="headerlink" title="安装MPICH2"></a>安装MPICH2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd//切换到家目录</span><br><span class="line">cp softWare/mpich2-1.0.6.tar.gz ./   //回车复制软件包到家目录</span><br><span class="line">tar zxf mpich2-1.0.6.tar.gz  //回车解压目录</span><br><span class="line">mv mpich2-1.0.6 mpich2 //回车对文件夹进行重命名</span><br><span class="line">cd mpich2 //回车切换到软件根目录</span><br><span class="line">./configure //运行配置文件，运行后会输出很多的信息，请注意过程中是否有Error信息</span><br><span class="line">make //编译软件，运行后会输出很多的信息，请注意过程中是否有Error信息</span><br><span class="line">sudo make install //运行后会输出很多信息，请注意过程中是否有Error信息</span><br><span class="line">//到此MPICH2 安装完成</span><br></pre></td></tr></table></figure><h3 id="检测MPICH2是否安装成功"><a href="#检测MPICH2是否安装成功" class="headerlink" title="检测MPICH2是否安装成功"></a>检测MPICH2是否安装成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">which mpd</span><br><span class="line">//输出：/usr/local/bin/mpd</span><br><span class="line">which mpiexec</span><br><span class="line">//输出：/usr/local/bin/mpiexec</span><br><span class="line">which mpdboot</span><br><span class="line">//输出：/usr/local/bin/mpdboot</span><br></pre></td></tr></table></figure><h3 id="配置系统文件"><a href="#配置系统文件" class="headerlink" title="配置系统文件"></a>配置系统文件</h3><p>1.切换到集群机的第一个节点，打开终端。输入命令cd回车切换到家目录。</p><p>2.输入nano .mpd.conf//建立MPICH2的配置文件。并在窗口中输入MPD_SECRETWORD=123456,然后</p><p>ctrl+shift+o保存更改，回车，最后ctrl+x退出nano编辑器（注意.mpd.conf是隐藏文件，需要ls -al才能看</p><p>见，文件结尾不要换行）</p><p>3.输入chmod 600 .mpd.conf//修改文件权限</p><p>4.nano mpd.hosts//建立集群节点的列表文件，并在窗中输入参与节点的主机名，文件结尾不要换行。然</p><p>后保存关闭窗口。</p><p>5.输入命令 sudonano  /etc/hosts 修改系统host文件 。将第二行的127.0.0.1修改为本机的IP地址。忘记IP</p><p>地址可以使用 ifconfig 命令查看。最后再把其他运算节点的IP 和 主机名加入到host 文件中。保存并退出</p><p>nano 编辑器。</p><p>6.输入命令 ping 主机名 检查是否能够与其他主机联通，如果不能联通 使用 ping  IP地址 的方式检查。如果</p><p>不能ping 通主机名，检查是否正确修改 /etc/hosts 文件 ，如果不能ping 通 IP 检查节点是否正确连接有线网</p><p>络，或者IP地址是否正确。</p><p>7.输入命令 ssh-keygen 生成SSH密钥，过程中一路回车，不需要进行输入操作。</p><p>8.输入命令 cd  .ssh 切换到ssh目录。通过ls 命令查看目录下面的文件，再输入命令 cp  id_rsa.pub </p><p>authorized_keys 复制公钥为认证密钥 ，通过 ls 命令显示目录下的文件。</p><p>9.输入命令 cd切换到家目录。 再输入命令 scp  -r  .sshgjy@011225-2:~/ 将ssh目录复制到其他节点。</p><p>（scp 为远程复制命令，该命令需要执行多次将ssh目录复制到每一个节点 <em>用户名@**主机名</em>），第一次复</p><p>制需要输入yes，然后输入密码。</p><p>10.输入命令 scp  /etc/hosts  .mpd.conf  mpd.hosts  gjy@011225-2:~/ 将3个文件复制到其他节点。（该</p><p>命令需要执行多次，此时已经不需要输入密码，如果还需要密码，则ssh免密码登陆没有生效，请检查步骤</p><p>6、7、8操作是否正确）。</p><p>11.输入命令 ssh  用户名@主机名（如 ssh  gjy@011225-2） 登陆到其他节点。</p><p>12.输入命令 sudomv  hosts  /etc/替换本机etc目录下的hosts 文件。</p><p>13.输入命令 exit 退出远程登陆。重复 9 ~ 12 步，直到每个节点都有这3个文件。</p><h3 id="做π的并行计算"><a href="#做π的并行计算" class="headerlink" title="做π的并行计算"></a>做π的并行计算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mpdboot -n 4 -f mpd.hosts //启动并行运算节点。（4为所有运算节点数 ，不能超过mpd.host文件中定义的主机数）</span><br><span class="line">mpdtrace -l //查看所有启动的节点</span><br><span class="line">mpiexec -n 4 ./mpich2/examples/cpi //并行计算PI值（4为运算的进程数，可以任意定义）</span><br></pre></td></tr></table></figure><h3 id="运行其他程序"><a href="#运行其他程序" class="headerlink" title="运行其他程序"></a>运行其他程序</h3><p>1.编译文件 queen.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpicc -o queen queen.c//编译完成将生成一个叫.queen的文件</span><br></pre></td></tr></table></figure><p>2.拷贝可执行文件到其他节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp queen gjy@011224-2:~/</span><br><span class="line">scp queen gjy@011224-2:~/</span><br></pre></td></tr></table></figure><p>3.并行计算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpiexec -n 4 ./queen</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;并行计算π值&quot;&gt;&lt;a href=&quot;#并行计算π值&quot; class=&quot;headerlink&quot; title=&quot;并行计算π值&quot;&gt;&lt;/a&gt;并行计算π值&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;并行计算定义&quot;&gt;&lt;a href=&quot;#并行计算定义&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="并行计算" scheme="http://yoursite.com/categories/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="并行计算" scheme="http://yoursite.com/tags/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Java中String类型的骚操作（2）</title>
    <link href="http://yoursite.com/2018/03/19/Java%E4%B8%ADString%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C%EF%BC%882%EF%BC%89/"/>
    <id>http://yoursite.com/2018/03/19/Java中String类型的骚操作（2）/</id>
    <published>2018-03-19T14:27:23.000Z</published>
    <updated>2018-03-28T14:36:52.827Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java中String类型的骚操作（2）"><a href="#Java中String类型的骚操作（2）" class="headerlink" title="Java中String类型的骚操作（2）"></a>Java中String类型的骚操作（2）</h1><hr><h2 id="String类包含的获取子串的方法"><a href="#String类包含的获取子串的方法" class="headerlink" title="String类包含的获取子串的方法"></a>String类包含的获取子串的方法</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>substring(beginIndex)</td><td>返回该字符串的子串，从特定位置beginIndex的字符开始到字符串的结尾</td></tr><tr><td>substring(beginIndex,endIndex)</td><td>返回该字符串的子串，从特定位置beginIndex的字符开始到下标为endIndex-1的字符</td></tr></tbody></table><p>1）使用substring(beginIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">Strnig s1 = message.substring(11);</span><br><span class="line">System.out.println(s1);//返回Java</span><br></pre></td></tr></table></figure><p>这里需要注意的是“W”其实是第0个字符，所以“J”是第11个字符。</p><p>2）使用substring(beginIndex,endIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">String s1 = message.substring(0,10);</span><br><span class="line">System.out.println(s1);//返回Welcome to</span><br></pre></td></tr></table></figure><h2 id="获取字符串中的字符或者子串"><a href="#获取字符串中的字符或者子串" class="headerlink" title="获取字符串中的字符或者子串"></a>获取字符串中的字符或者子串</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>indexOf(ch)</td><td>返回字符串中出现的第一个ch的下标，如果没有匹配的，返回-1</td></tr><tr><td>indexOf(ch,fromIndex)</td><td>返回字符串中的fromIndex之后出现的第一个ch的下标，如果没有匹配的，返回-1</td></tr><tr><td>indexOf(s)</td><td>返回字符串中出现的第一个字符串s的下标，如果没有匹配，返回-1</td></tr><tr><td>indexxOf(s,fromIndex)</td><td>返回字符串中fromIndex后出现的第一个字符串s的下标，如果没有匹配的，返回-1</td></tr><tr><td>lastIndexOf(ch)</td><td>返回字符串中出现的最后一个ch的下标，如果没有匹配，返回-1</td></tr><tr><td>lastIndexOf(ch,fromIndex)</td><td>返回字符串中fromIndex之前出现的最后一个ch的下标，如果没有匹配的，返回-1</td></tr><tr><td>lastIndexOf(s)</td><td>返回字符串中出现的最后一个字符串s的下标，如果没有匹配的，返回-1</td></tr><tr><td>lasIndexOf(s,fromIndex)</td><td>返回字符串忠fromIndex之前出现的最后一个ch的下标，如果没有匹配的，返回-1</td></tr></tbody></table><p>1）使用indexOf(ch)方法和indexOf(ch,fromIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">System.out.println(message.indexOf(&quot;W&quot;));//返回 0</span><br><span class="line">System.out.println(message.indexOf(&quot;0&quot;,5));//返回9</span><br></pre></td></tr></table></figure><p>2）使用indexOf(s)方法和indexOf(s,fromIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">System.out.println(message.indexOf(&quot;come&quot;));//返回3</span><br><span class="line">System.out.println(message.indexOf(&quot;Java&quot;,5));//返回11</span><br></pre></td></tr></table></figure><p>3）使用lastIndexOf(ch)方法和lastIndexOf(ch,fromIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">System.out.println(message.lastIndexOf(&quot;W&quot;));//返回0</span><br><span class="line">System.out.println(message.lastIndexOf(&quot;o&quot;,5));//返回4</span><br></pre></td></tr></table></figure><p>4）使用lastIndexOf(s)方法和lastIndexOf(s,fromIndex)方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">System.out.println(message.lastIndexOf(&quot;come&quot;));//返回3</span><br><span class="line">System.out.println(message.lastIndexOf(&quot;Java&quot;,5));//返回-1</span><br></pre></td></tr></table></figure><p>PS:写的时候indexOf(“w”)和indexOf(‘w’)是一样的，用””和’’都行。</p><p>​                                                             <strong>字符串的骚操作就告一段落了。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java中String类型的骚操作（2）&quot;&gt;&lt;a href=&quot;#Java中String类型的骚操作（2）&quot; class=&quot;headerlink&quot; title=&quot;Java中String类型的骚操作（2）&quot;&gt;&lt;/a&gt;Java中String类型的骚操作（2）&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="String" scheme="http://yoursite.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Java中String类型的骚操作（1）</title>
    <link href="http://yoursite.com/2018/03/18/Java%E4%B8%ADString%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/03/18/Java中String类型的骚操作/</id>
    <published>2018-03-18T12:23:34.000Z</published>
    <updated>2018-03-28T14:36:22.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java中String类型的骚操作"><a href="#Java中String类型的骚操作" class="headerlink" title="Java中String类型的骚操作"></a>Java中String类型的骚操作</h1><hr><h2 id="String对象的简单实用方法"><a href="#String对象的简单实用方法" class="headerlink" title="String对象的简单实用方法"></a>String对象的简单实用方法</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>length()</td><td>返回字符串中的字符数</td></tr><tr><td>charAt(index)</td><td>返回字符串中指定位置的字符</td></tr><tr><td>concat（s1）</td><td>将本字符串和字符串s1相连，返回一个新的字符串</td></tr><tr><td>toUpperCase()</td><td>返回一个新的字符串，只有大写字母</td></tr><tr><td>toLowerCase()</td><td>返回一个新的字符串，只有小写字母</td></tr><tr><td>trim()</td><td>返回一个新的字符串，去掉了两边的空白字符</td></tr></tbody></table><p>1)使用length()方法获取长度：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;；</span><br><span class="line">System.out.println(&quot;The length of &quot;+message+&quot;is&quot;+message.length());</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The length of Welcome to Java is 15</span><br></pre></td></tr></table></figure><p>2)使用charAt(index)方法获取字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;；</span><br><span class="line">System.out.println(message.charAt(0));</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">W</span><br></pre></td></tr></table></figure><p>3）使用concat(s2)连接字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;Welcome to&quot;;</span><br><span class="line">String s2 = &quot;Java&quot;;</span><br><span class="line">Strnig s3=s1.concat(s2);</span><br><span class="line">System.out.println(s3);</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Java</span><br></pre></td></tr></table></figure><p>4)使用toUpperCase()、toLowerCase()实现字符串的转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String message = &quot;Welcome to Java&quot;;</span><br><span class="line">String s2 = message.toUpperCase(message);</span><br><span class="line">String s3 = message.toLowerCase(message);</span><br><span class="line">System.out.println(s2);</span><br><span class="line">System.out.println(s3);</span><br></pre></td></tr></table></figure><p>显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WELCOME TO JAVA</span><br><span class="line">welcome to java</span><br></pre></td></tr></table></figure><h2 id="String-对象的比较方法"><a href="#String-对象的比较方法" class="headerlink" title="String 对象的比较方法"></a>String 对象的比较方法</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>equals(s1)</td><td>如果该字符串等于字符串s1，返回true</td></tr><tr><td>equalsIgnoreCase(s1)</td><td>如果该字符串等于字符串s1，返回true，不区分大小写</td></tr><tr><td>compareTo(s1)</td><td>返回一个大于0、等于0、小于0的整数，表明字符串是否大于、等于、小于s1</td></tr><tr><td>compareToIgnoreCase(s1)</td><td>和compareTo(s1)一样，除了不区分大小写之外</td></tr><tr><td>startsWith(prefix)</td><td>如果字符串以特定的前缀开始，返回true</td></tr><tr><td>endsWith(suffix)</td><td>如果字符串以特定的后缀结束，返回true</td></tr><tr><td>contains(s1)</td><td>如果s1是该字符串的子字符串，返回true</td></tr></tbody></table><p>1）使用“==”只能检测字符串是否指向同一个对象，而equals方法可以判断两个字符串内容是否相同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;Welcome to Java&quot;;</span><br><span class="line">String s2 = &quot;Welcome to java&quot;;</span><br><span class="line">String s3 = &quot;Welcome to maliao&quot;;</span><br><span class="line">System.out.println(s1.equals(s2));//return true</span><br><span class="line">System.out.println(s1.equals(s3));//return false</span><br></pre></td></tr></table></figure><p>2）compareTo方法也可以比较字符串，按照字典顺序（Unicode码的顺序）进行比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;abc&quot;;</span><br><span class="line">String s2 = &quot;abg&quot;;</span><br><span class="line">System.out.println(s1.compareTo(s2));//返回-4</span><br></pre></td></tr></table></figure><p>3）startsWith(prefix)、endsWith(suffix)的使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;Welcome to Java&quot;;</span><br><span class="line">System.out.printn(s1.startsWith(&quot;We&quot;));//return true</span><br><span class="line">System.out.println(s1.startsWith(&quot;we&quot;));//return false</span><br><span class="line">System.out.println(s1.endsWith(&quot;va&quot;);//retrun true</span><br><span class="line">System.out.println(s1.endsWith(&quot;Va&quot;));//return false</span><br></pre></td></tr></table></figure><p>String的更多骚操作请见下一条博客。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java中String类型的骚操作&quot;&gt;&lt;a href=&quot;#Java中String类型的骚操作&quot; class=&quot;headerlink&quot; title=&quot;Java中String类型的骚操作&quot;&gt;&lt;/a&gt;Java中String类型的骚操作&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="String" scheme="http://yoursite.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>非凡匠心</title>
    <link href="http://yoursite.com/2018/03/14/%E9%9D%9E%E5%87%A1%E5%8C%A0%E5%BF%83/"/>
    <id>http://yoursite.com/2018/03/14/非凡匠心/</id>
    <published>2018-03-14T15:51:09.000Z</published>
    <updated>2018-03-14T15:52:39.226Z</updated>
    
    <content type="html"><![CDATA[<h1 id="非凡匠心"><a href="#非凡匠心" class="headerlink" title="非凡匠心"></a>非凡匠心</h1><hr><h2 id="节目介绍"><a href="#节目介绍" class="headerlink" title="节目介绍"></a>节目介绍</h2><p>  今天给大家推荐一档节目，名字叫做《非凡匠心》，由张国立带队并且每一期带一个新嘉宾，去寻求国宝级非物质文化遗产代表人，并向他们学习中国传统文化。每一期嘉宾都有他们自己的特点，有的是综艺大咖，有的是歌手、演员等等。当然，每期张国立老师必在（第二季第二期不在，原因自寻），张国立老师可以说是非常适合这个节目了，当然不是说其他人不合适，而是张国立老师积累了大半辈子演艺经验以及生活经验，不论学习什么，都不会显得束手无策、无从下手。又不论与什么人交流，都游刃有余并且还会一些地方方言，能够迅速拉近人与人之间的距离。可以说，节目组选择张国立老师是一个明智的原则。</p><h2 id="推荐原因"><a href="#推荐原因" class="headerlink" title="推荐原因"></a>推荐原因</h2><p>  本人是从第二期开始看的，目前一共播出五期，第一期“张国立携任贤齐勇闯龙泉求宝剑”，第二期“海清独自挑战造纸工艺”，第三期“张国立高晓菲师兄妹直面“窑死窑生””，第四期“张国立杨迪同赴山西求学制药秘诀”，第五期“张国立李玉刚演绎皮影戏版“贵妃醉酒””。而正是因为最近更新的这一期“皮影戏”让我更加有了推荐大家去看的想法（之前看第一期的时候就有推荐）。</p><p>  第五期中，张国立老师和李玉刚来到了陕西华县高塘镇魏家塬村，这里是五人忙（华县）皮影戏的发源地。首先来到的是魏金全家，并在这里取景落镜。这次的五个人分别是：前声（吕崇德）、签手（魏金全）、上档（刘东耀）、下档（刘华）、后台（魏亚民）。其中最有特点两位便是吕崇德和刘华。吕崇德老师坚守传统，不希望破坏皮影戏特有的”碗碗腔“，不想让皮影戏变得“土不土，洋不洋“。而刘华老师认为不能老停留在这个原汁原味上，应该整个社会与时俱进。弹幕有人说评论说”刘华老师思想前卫“，”吕崇德老师腐朽顽固“。其实，两位老师何尝不想既保持原汁原味又能传承下去，只是时代不一样了，必须要做出这个鱼和熊掌不可兼得的选择。两位老爷子我都很喜欢，可能因为吕崇德老爷子是前声的原因，当他唱出来的时候，每每都感觉震撼心酸。震撼是中华传统文化的博大精深，心酸的是只剩下这么几个老爷子还在坚持着，或许真的像他们自己说的那样：“也就剩十来年了吧”。当李玉刚找到他们并告明来意后，看得出每个人对能够再次登台演出，十分欣喜，甚至迫不及待并且在演出时穿上了最隆重的衣服，或许皮影戏就是他们的全部。在表演准备阶段，每个人都认真地准备着，像整理着装准备奔赴战场的士兵。演出过程中，张国立老师突然忘词，全场一片安静，正在这个时候，吕崇德老师立马接上张国立老师的台词，保证了演出的继续。镜头转向他的时候，吕崇德老师，面无表情，可以看得出内心的平静，这可能就是一种境界吧。也或许是像弹幕抖得机灵一样：“你这样的学生我见得多了”。如果学生真的多，那该多好。与其说他们是华县皮影戏的老戏骨、老艺术家，不如称他们为华县皮影戏的精神，无形无味，却让人望而生畏。</p><h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>  有些记忆，很轻很轻，像在梦里回到过去。有些牵挂，很重很重，想要离开就是一生的悲欣。对皮影大师而言，光影是多么神秘的游戏。灯光一亮，碗碗腔一起，一夫当关的骁勇酣畅。美景良辰的赏心乐事，都是往昔，散落在时光里的珍宝。更是梦境的永续留存。</p><p>   希望像华县皮影戏这样的非物质文化遗产能够很好的传承下去，不要在我们这一代丢失。也希望这些老艺术家们能够健健康康、长命百岁。为你们深深的鞠一躬！</p><p>  文字非常稚嫩，希望各位观众老爷包容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;非凡匠心&quot;&gt;&lt;a href=&quot;#非凡匠心&quot; class=&quot;headerlink&quot; title=&quot;非凡匠心&quot;&gt;&lt;/a&gt;非凡匠心&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;节目介绍&quot;&gt;&lt;a href=&quot;#节目介绍&quot; class=&quot;headerlink&quot; title=&quot;节目介绍
      
    
    </summary>
    
      <category term="生活小调" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/"/>
    
    
      <category term="节目推荐" scheme="http://yoursite.com/tags/%E8%8A%82%E7%9B%AE%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>安卓简易计算器</title>
    <link href="http://yoursite.com/2018/03/11/%E5%AE%89%E5%8D%93%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>http://yoursite.com/2018/03/11/安卓简易计算器/</id>
    <published>2018-03-11T00:55:09.000Z</published>
    <updated>2018-03-28T14:35:47.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安卓简易计算器"><a href="#安卓简易计算器" class="headerlink" title="安卓简易计算器"></a>安卓简易计算器</h1><hr><h2 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h2><p>  Android是由Andy Rubin创立的一个手机操作系统，后来被Google收购。Gooole希望与各方面共同建立一个标准化的、开放式的移动电话软件平台，从而在移动产业形成一个开放式的操作平台。</p><h3 id="界面编程"><a href="#界面编程" class="headerlink" title="界面编程"></a>界面编程</h3><p>   安卓常用的几种布局：线性布局（LineraLayout）、表格布局（Tablelayout）、帧布局（FrameLayout）、相对布局（RelativeLayout）等等。我这里用的是比较简单的“线性布局”。</p><p>布局文件（activity_main.xml）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;com.example.zhaoxudong.calculatorapp.MainActivity&quot;&gt;</span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:orientation=&quot;vertical&quot;</span><br><span class="line">        tools:layout_editor_absoluteY=&quot;0dp&quot;</span><br><span class="line">        tools:layout_editor_absoluteX=&quot;0dp&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=&quot;403dp&quot;</span><br><span class="line">            android:layout_height=&quot;155dp&quot;</span><br><span class="line">            android:id=&quot;@+id/result_Text&quot;/&gt;</span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;CE&quot;</span><br><span class="line">                android:id=&quot;@+id/CE&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;DEL&quot;</span><br><span class="line">                android:id=&quot;@+id/DEL&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;SIN&quot;</span><br><span class="line">                android:id=&quot;@+id/SIN&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;113dp&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;COS&quot;</span><br><span class="line">                android:id=&quot;@+id/COS&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;7&quot;</span><br><span class="line">                android:id=&quot;@+id/number7&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;8&quot;</span><br><span class="line">                android:id=&quot;@+id/number8&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;9&quot;</span><br><span class="line">                android:id=&quot;@+id/number9&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;117dp&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;+&quot;</span><br><span class="line">                android:id=&quot;@+id/add_but&quot;/&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;4&quot;</span><br><span class="line">                android:id=&quot;@+id/number4&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;5&quot;</span><br><span class="line">                android:id=&quot;@+id/number5&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;6&quot;</span><br><span class="line">                android:id=&quot;@+id/number6&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;117dp&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;-&quot;</span><br><span class="line">                android:id=&quot;@+id/sub_but&quot;/&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;1&quot;</span><br><span class="line">                android:id=&quot;@+id/number1&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;2&quot;</span><br><span class="line">                android:id=&quot;@+id/number2&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;3&quot;</span><br><span class="line">                android:id=&quot;@+id/number3&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;116dp&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;*&quot;</span><br><span class="line">                android:id=&quot;@+id/mult_but&quot;/&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;=&quot;</span><br><span class="line">                android:id=&quot;@+id/sign_but&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;0&quot;</span><br><span class="line">                android:id=&quot;@+id/number0&quot;/&gt;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;.&quot;</span><br><span class="line">                android:id=&quot;@+id/spot_but&quot;/&gt;</span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=&quot;114dp&quot;</span><br><span class="line">                android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">                android:text=&quot;/&quot;</span><br><span class="line">                android:id=&quot;@+id/div_but&quot;/&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><p>界面效果：</p><p><img src="/2018/03/11/安卓简易计算器/C:/Users\赵旭东\Desktop\Screenshot_2018-03-11-21-54-47-557.png" alt="Screenshot_2018-03-11-21-54-47-557"></p><h3 id="逻辑部分"><a href="#逻辑部分" class="headerlink" title="逻辑部分"></a>逻辑部分</h3><p>  逻辑部分是由java代码实现，实践证明<u>代码多练</u>还是有好处的。</p><p>为了实现按钮的点击事件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends Activity implements OnClikListener&#123;&#125;</span><br></pre></td></tr></table></figure><p>对layout中的按钮进行定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">private Button number0;</span><br><span class="line">private Button number1;</span><br><span class="line">private Button number2;</span><br><span class="line">private Button number3;</span><br><span class="line">private Button number4;</span><br><span class="line">private Button number5;</span><br><span class="line">private Button number6;</span><br><span class="line">private Button number7;</span><br><span class="line">private Button number8;</span><br><span class="line">private Button number9;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">运算符</span><br><span class="line"> */</span><br><span class="line">private Button add_but;//加法</span><br><span class="line">private Button sub_but;//减法</span><br><span class="line">private Button mult_but;//乘法</span><br><span class="line">private Button div_but;//除法</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">等号</span><br><span class="line">小数点</span><br><span class="line">归零</span><br><span class="line"> */</span><br><span class="line">private Button sign_but;//等号</span><br><span class="line">private Button spot_but;//小数点</span><br><span class="line">private Button CE_but;//归零键</span><br><span class="line">private Button DEL;</span><br><span class="line">private Button SIN;</span><br><span class="line">private Button COS;</span><br><span class="line">/*</span><br><span class="line">结果</span><br><span class="line"> */</span><br><span class="line">private EditText result;</span><br><span class="line">private boolean clear_flag;//清空标识</span><br></pre></td></tr></table></figure><p>对每个按钮进行<u>实例化</u>并且设置<u>点击事件</u></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">   protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">       super.onCreate(savedInstanceState);</span><br><span class="line">       setContentView(R.layout.activity_main);</span><br><span class="line">       /*</span><br><span class="line">       数字</span><br><span class="line">        */</span><br><span class="line">       number0 = (Button) findViewById(R.id.number0);</span><br><span class="line">       number1 = (Button) findViewById(R.id.number1);</span><br><span class="line">       number2 = (Button) findViewById(R.id.number2);</span><br><span class="line">       number3 = (Button) findViewById(R.id.number3);</span><br><span class="line">       number4 = (Button) findViewById(R.id.number4);</span><br><span class="line">       number5 = (Button) findViewById(R.id.number5);</span><br><span class="line">       number6 = (Button) findViewById(R.id.number6);</span><br><span class="line">       number7 = (Button) findViewById(R.id.number7);</span><br><span class="line">       number8 = (Button) findViewById(R.id.number8);</span><br><span class="line">       number9 = (Button) findViewById(R.id.number9);</span><br><span class="line">       /*</span><br><span class="line">       运算符</span><br><span class="line">        */</span><br><span class="line">       add_but = (Button) findViewById(R.id.add_but);</span><br><span class="line">       sub_but = (Button) findViewById(R.id.sub_but);</span><br><span class="line">       mult_but = (Button) findViewById(R.id.mult_but);</span><br><span class="line">       div_but = (Button) findViewById(R.id.div_but);</span><br><span class="line">       /*</span><br><span class="line">       等号</span><br><span class="line">       小数点</span><br><span class="line">       归零</span><br><span class="line">        */</span><br><span class="line">       sign_but = (Button) findViewById(R.id.sign_but);//等号</span><br><span class="line">       spot_but = (Button) findViewById(R.id.spot_but);//小数点</span><br><span class="line">       CE_but = (Button) findViewById(R.id.CE);//归零</span><br><span class="line">       DEL = (Button) findViewById(R.id.DEL);</span><br><span class="line">       SIN=(Button) findViewById(R.id.SIN);</span><br><span class="line">       COS=(Button) findViewById(R.id.COS);</span><br><span class="line">       /*</span><br><span class="line">       结果</span><br><span class="line">        */</span><br><span class="line">       result = (EditText) findViewById(R.id.result_Text);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   /*</span><br><span class="line">   初始化事件</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">       number0.setOnClickListener(this);</span><br><span class="line">       number1.setOnClickListener(this);</span><br><span class="line">       number2.setOnClickListener(this);</span><br><span class="line">       number3.setOnClickListener(this);</span><br><span class="line">       number4.setOnClickListener(this);</span><br><span class="line">       number5.setOnClickListener(this);</span><br><span class="line">       number6.setOnClickListener(this);</span><br><span class="line">       number7.setOnClickListener(this);</span><br><span class="line">       number8.setOnClickListener(this);</span><br><span class="line">       number9.setOnClickListener(this);</span><br><span class="line"></span><br><span class="line">       add_but.setOnClickListener(this);</span><br><span class="line">       sub_but.setOnClickListener(this);</span><br><span class="line">       mult_but.setOnClickListener(this);</span><br><span class="line">       div_but.setOnClickListener(this);</span><br><span class="line"></span><br><span class="line">       sign_but.setOnClickListener(this);</span><br><span class="line">       spot_but.setOnClickListener(this);</span><br><span class="line">       CE_but.setOnClickListener(this);</span><br><span class="line">       DEL.setOnClickListener(this);</span><br><span class="line">       SIN.setOnClickListener(this);</span><br><span class="line">       COS.setOnClickListener(this);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>下面是在onClick方法中实现逻辑运算：</p><p>这里使用的方法是使用以下代码获取EditText中的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = result.getText().toString();</span><br></pre></td></tr></table></figure><p>为了区分开数字和运算符，分别用s1、s2和op来表示数字和运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s1 = exp.substring(0, exp.indexOf(&quot; &quot;));//运算符前面的字符串</span><br><span class="line">String op = exp.substring(exp.indexOf(&quot; &quot;) + 1, exp.indexOf(&quot; &quot;) + 2);//截取到的运算符</span><br><span class="line">String s2 = exp.substring(exp.indexOf(&quot; &quot;) + 3);//运算符后面的字符串</span><br></pre></td></tr></table></figure><p>为了能够实现点击任意按钮可以出现对应的字符，使用以下代码可以获取Button中的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result.setText(str + &quot; &quot; + ((Button) v).getText() + &quot; &quot;);</span><br></pre></td></tr></table></figure><p>通过判断出数字和运算符来进行运算，下面是逻辑运算全部的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">private void getResult() &#123;</span><br><span class="line">        clear_flag = true;</span><br><span class="line">        String exp = result.getText().toString();</span><br><span class="line">        double result_1 = 0;</span><br><span class="line">        if(exp==null||exp.equals(&quot;&quot;))&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if(!exp.contains(&quot; &quot;))&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (clear_flag)&#123;</span><br><span class="line">            clear_flag=false;</span><br><span class="line">        &#125;</span><br><span class="line">        clear_flag=true;</span><br><span class="line">        String s1 = exp.substring(0, exp.indexOf(&quot; &quot;));//运算符前面的字符串</span><br><span class="line">        String op = exp.substring(exp.indexOf(&quot; &quot;) + 1, exp.indexOf(&quot; &quot;) + 2);//截取到的运算符</span><br><span class="line">        String s2 = exp.substring(exp.indexOf(&quot; &quot;) + 3);//运算符后面的字符串</span><br><span class="line">        if (!s1.equals(&quot;&quot;) &amp;&amp; !s2.equals(&quot;&quot;)) &#123;</span><br><span class="line">            double d1 = Double.parseDouble(s1);</span><br><span class="line">            double d2 = Double.parseDouble(s2);</span><br><span class="line">            if (op.equals(&quot;+&quot;)) &#123;</span><br><span class="line">                result_1 = d1 + d2;</span><br><span class="line">            &#125; else if (op.equals(&quot;-&quot;)) &#123;</span><br><span class="line">                result_1 = d1 - d2;</span><br><span class="line"></span><br><span class="line">            &#125; else if (op.equals(&quot;*&quot;)) &#123;</span><br><span class="line">                result_1 = d1 * d2;</span><br><span class="line"></span><br><span class="line">            &#125; else if (op.equals(&quot;/&quot;)) &#123;</span><br><span class="line">                if (d2 == 0)</span><br><span class="line">                    result_1 = 0;</span><br><span class="line">                result_1 = d1 / d2;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            if (!s1.contains(&quot;.&quot;) &amp;&amp; !s2.contains(&quot;.&quot;)&amp;&amp;!op.equals(&quot;/&quot;)) &#123;</span><br><span class="line">                int r = (int) result_1;</span><br><span class="line">                result.setText(r + &quot;&quot;);</span><br><span class="line"></span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                result.setText(result_1 + &quot;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; else if (!s1.equals(&quot;&quot;) &amp;&amp; s2.equals(&quot;&quot;)) &#123;</span><br><span class="line">            result.setText(exp);</span><br><span class="line">        &#125; else if (s1.equals(&quot;&quot;) &amp;&amp; !s2.equals(&quot;&quot;)) &#123;</span><br><span class="line">            double d2 = Double.parseDouble(s2);</span><br><span class="line">            if (op.equals(&quot;+&quot;)) &#123;</span><br><span class="line">                result_1 = 0 + d2;</span><br><span class="line">            &#125; else if (op.equals(&quot;-&quot;)) &#123;</span><br><span class="line">                result_1 = 0 - d2;</span><br><span class="line"></span><br><span class="line">            &#125; else if (op.equals(&quot;*&quot;)) &#123;</span><br><span class="line">                result_1 = 0;</span><br><span class="line"></span><br><span class="line">            &#125; else if (op.equals(&quot;/&quot;)) &#123;</span><br><span class="line">                result_1 = 0;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            result.setText(&quot;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>以上便是简单计算器的所有重要代码。</p><h3 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h3><ul><li style="list-style: none"><input type="checkbox"> 支持加减乘除的基本运算</li><li style="list-style: none"><input type="checkbox"> 支持加减乘除后的再运算</li><li style="list-style: none"><input type="checkbox"> 支持浮点数运算</li><li style="list-style: none"><input type="checkbox"> 支持三角函数sin cos运算</li><li style="list-style: none"><input type="checkbox"> 支持数字删除</li><li style="list-style: none"><input type="checkbox"> 支持置零</li></ul><h3 id="随便聊聊"><a href="#随便聊聊" class="headerlink" title="随便聊聊"></a>随便聊聊</h3><p>第一次写博客，算是大学将尽一个学渣的挣扎，总是要还的，大一不努力，那就现在来补充吧。用hexo和github实现这个博客的搭建还用了差不多一天时间，感谢我河北老乡<del>（名字被马赛克了）</del>的帮助。希望自己能够一直保持热情，加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安卓简易计算器&quot;&gt;&lt;a href=&quot;#安卓简易计算器&quot; class=&quot;headerlink&quot; title=&quot;安卓简易计算器&quot;&gt;&lt;/a&gt;安卓简易计算器&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;安卓&quot;&gt;&lt;a href=&quot;#安卓&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="Android编程" scheme="http://yoursite.com/categories/Android%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Linux SHELL脚本设计</title>
    <link href="http://yoursite.com/2017/12/19/Linux%20SHELL%E8%84%9A%E6%9C%AC%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2017/12/19/Linux SHELL脚本设计/</id>
    <published>2017-12-18T23:54:21.000Z</published>
    <updated>2018-04-12T07:42:32.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-SHELL脚本设计"><a href="#Linux-SHELL脚本设计" class="headerlink" title="Linux SHELL脚本设计"></a>Linux SHELL脚本设计</h1><hr><h2 id="SHELL程序的主要用途"><a href="#SHELL程序的主要用途" class="headerlink" title="SHELL程序的主要用途"></a>SHELL程序的主要用途</h2><p>  在SHELL程序中不仅仅可以使用命令的集合，而且可而且可以安排自动化处理过程，因此可以通过编写SHELL程序使大量的任务执行实现自动化。SHELL比较擅长完成系统管理任务，尤其适合完成那些易用性、可维护性和便携性比执行效率更优先的任务。</p><h2 id="SHELL程序的执行和调试"><a href="#SHELL程序的执行和调试" class="headerlink" title="SHELL程序的执行和调试"></a>SHELL程序的执行和调试</h2><p>⑴在bash的SHELL程序设计中，程序必须以下面的行开始：</p><p>​      #！/bin/bash</p><p>这里符号#！用来告诉系统，后面给出的参数是用来执行该文件的程序。</p><p>⑵当编辑完一个SHELL脚本后，要使该脚本能够执行，还必须使该脚本文件具有可执行权。需要执行命令：chmod  +x  filename</p><p>⑶在shell程序中，以#开头到一个行结束的句子表示注释信息。建议大家在编写shell程序时养成添加注释的习惯，因为注释不仅能给其他需要熟悉悉该程序的人以帮助，也能给出脚本编写者设计原理的提示。</p><p>⑷进行shell程序设计时，必定会用到<strong>变量</strong>。Shell编程中使用的变量有自己的特色，即所有的变量都是由字符串组成的，而且对变量无须进行声明，可直接进行变量赋值操作。</p><h2 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h2><h3 id="1-创建以下菜单程序"><a href="#1-创建以下菜单程序" class="headerlink" title="1.创建以下菜单程序"></a>1.创建以下菜单程序</h3><p><strong>USER:**</strong>            HOST: <strong><em>**</em></strong>          DATE: xx/xx/20xx</p><p><strong>A:</strong> <strong>创建子目录并复制文件</strong></p><p><strong>B:</strong> <strong>文件权限测试</strong></p><p><strong>C:</strong> <strong>文件字符转换</strong></p><p><strong>D:</strong> <strong>文件总数及文本行数统计</strong></p><p><strong>E:</strong> <strong>文件查找</strong></p><p><strong>Q:</strong> <strong>退出系统</strong></p><p>———————————————————————————————</p><p>  A：在用户家目录下创建名字为本人姓名的子目录，其存取权限为(drwxr-xr-x)。测试目录确实存在后，将已存在的file1、file2两文件拷入其中并分别显示两文件的内容。显示完成后将file1、file2两文件截断为大小为0的空文件。</p><p>  B：测试当前用户对系统中某文件是否有r、w、x的权限，输出测试结果。</p><p>  C：将file1、file2两文件中的小写字符转换为大写，并将转换后的内容分别写入新文件。判断上述操作成功后分别显示转换后的新文件的内容。</p><p>  D：统计/dev目录下目录文件和符号链接文件的数目；统计系统中某文本文件中空行的行数；显示当前系统中所有环境变量。</p><p>  E：在/dev目录下查找由s开头且文件名由5个字符组成的文件，找到后用file命令显示其文件类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">USER= &apos;whoami&apos;</span><br><span class="line">HOST=`hostname -s`</span><br><span class="line">MYDATE=`date +%d/%m/%y`</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">clear</span><br><span class="line">cat &lt;&lt; MAYDAY</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"> User:$USER   Host:$HOST   Date:$MYDATE</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">                    A:创建子目录并复制文件</span><br><span class="line">                    B:文件权限测试</span><br><span class="line">                    C:文件字符转换</span><br><span class="line">                    D:文件总数及文本行数统计</span><br><span class="line">                    E:文件查找</span><br><span class="line">                    Q:退出系统</span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">MAYDAY</span><br><span class="line">echo -n &quot;Please Choose [A,B,C,D,E,Q]&gt;&quot;</span><br><span class="line">read CHOICE</span><br><span class="line">case $CHOICE in</span><br><span class="line">A)</span><br><span class="line">echo &quot;A:创建子目录并复制文件&quot;</span><br><span class="line">echo &quot;输入要创建的文件名:&quot;</span><br><span class="line">read FILE</span><br><span class="line">mkdir $FILE</span><br><span class="line">chmod 755 $FILE</span><br><span class="line">test -d $FILE</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">cp file1 $FILE</span><br><span class="line">cp file2 $FILE</span><br><span class="line">echo &quot;file1 内容&quot;</span><br><span class="line">cat file1</span><br><span class="line">:&gt;$FILE/file1</span><br><span class="line">echo &quot;file2 内容&quot;</span><br><span class="line">cat file2</span><br><span class="line">:&gt;$FILE/file2</span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">B)</span><br><span class="line">echo &quot;B:文件权限测试&quot;</span><br><span class="line">echo &quot;请输入要测试的文件绝对路径&quot;</span><br><span class="line">read NAME1</span><br><span class="line">test -r $NAME1</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;可读&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;不可读&quot;</span><br><span class="line">fi</span><br><span class="line">test -w $NAME1</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;可写&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;不可写&quot;</span><br><span class="line">fi</span><br><span class="line">test -x $NAME1</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;可执行&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;不可执行&quot;</span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">C)</span><br><span class="line">echo &quot;C:文件字符转换&quot;</span><br><span class="line">cat file1 | tr &quot;[a-z]&quot; &quot;[A-Z]&quot; &gt;file1.tr</span><br><span class="line">diff -q file1 file1.tr</span><br><span class="line">if [ $? -eq 1 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;file1.tr 内容&quot;</span><br><span class="line">cat file1.tr</span><br><span class="line">fi</span><br><span class="line">cat file2 | tr &quot;[a-z]&quot; &quot;[A-Z]&quot; &gt;file2.tr</span><br><span class="line">diff -q file2 file2.tr</span><br><span class="line">if [ $? -eq 1 ]</span><br><span class="line">then</span><br><span class="line">echo &quot;file2.tr 内容&quot;</span><br><span class="line">cat file2.tr</span><br><span class="line">fi</span><br><span class="line">;;</span><br><span class="line">D)</span><br><span class="line">echo &quot;/dev 目录下目录文件和符号链接文件的数目&quot;</span><br><span class="line">find /dev -type d | wc -l</span><br><span class="line">find /dev -type l | wc -l</span><br><span class="line">echo &quot;file1 空行行数统计&quot;</span><br><span class="line">grep ^$ file1 | wc -l</span><br><span class="line">echo &quot;显示当前系统中所有环境变量&quot;</span><br><span class="line">env</span><br><span class="line">;;</span><br><span class="line">E)</span><br><span class="line">echo &quot;文件查找&quot;</span><br><span class="line">find /dev -name &apos;s????&apos; | xargs file</span><br><span class="line">;;</span><br><span class="line">Q)</span><br><span class="line">exit 0</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;输入不符合条件！</span><br><span class="line">请回车后输入[A.B.C.D.E.Q]&quot;</span><br><span class="line">esac</span><br><span class="line">read DD</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="2-文件pc-txt中保存了三个班级的学生选课成绩"><a href="#2-文件pc-txt中保存了三个班级的学生选课成绩" class="headerlink" title="2.文件pc.txt中保存了三个班级的学生选课成绩"></a>2.文件pc.txt中保存了三个班级的学生选课成绩</h3><p>试编写一段shell程序对文件内容进行统计、计算后输出各个班级选课的学生人数及每班选课成绩的优秀率。 </p><p>pc.txt</p><p>文件内容</p><p>如下：</p><p>Student1: 1301: 75</p><p>Student2: 1302: 96</p><p>Student3: 1303: 99</p><p>Student4: 1302: 93</p><p>Student5: 1303: 23</p><p>Student6:  1301: 77</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">total1=`grep -F 1301 pc.txt|wc -l`</span><br><span class="line">gradeA1=`grep -F 1301 pc.txt|awk -F： &apos;$3 &gt; 90&apos;|wc -l`</span><br><span class="line">rateA1=$(($gradeA1*100/$total1))</span><br><span class="line"></span><br><span class="line">total2=`grep -F 1302 pc.txt|wc -l`</span><br><span class="line">gradeA2=`grep -F 1302 pc.txt|awk -F： &apos;$3 &gt; 90&apos;|wc -l`</span><br><span class="line">rateA2=$(($gradeA2*100/$total2))</span><br><span class="line"></span><br><span class="line">total3=`grep -F 1303 pc.txt|wc -l`</span><br><span class="line">gradeA3=`grep -F 1303 pc.txt|awk -F： &apos;$3 &gt; 90&apos;|wc -l`</span><br><span class="line">rateA3=$(($gradeA3*100/$total3))</span><br><span class="line"></span><br><span class="line">echo &quot;各班选课人数及优秀率（90及以上为优秀）&quot;</span><br><span class="line">echo &quot;1301班选课人数为$total1,优秀率为$rateA1%&quot;</span><br><span class="line">echo &quot;1302班选课人数为$total2,优秀率为$rateA2%&quot;</span><br><span class="line">echo &quot;1303班选课人数为$total3,优秀率为$rateA3%&quot;</span><br></pre></td></tr></table></figure><h3 id="3-学习、理解find和grep-家族-命令"><a href="#3-学习、理解find和grep-家族-命令" class="headerlink" title="3.学习、理解find和grep(家族)命令"></a>3.学习、理解find和grep(家族)命令</h3><p>编制两个个性化的文件搜索工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;个性化文件搜索工具:&quot;</span><br><span class="line">echo &quot;1:grep搜索工具&quot;</span><br><span class="line">echo &quot;2:find搜索工具&quot;</span><br><span class="line">echo &quot;选择想要使用的工具[1|2]:&quot;</span><br><span class="line">read CHOICE</span><br><span class="line">if [ &quot;$CHOICE&quot; == &quot;1&quot; ] #选择grep</span><br><span class="line">then</span><br><span class="line">echo &quot;自定义查找&quot;</span><br><span class="line">echo &quot;请输入查找目录:&quot;</span><br><span class="line">read mulu</span><br><span class="line">ls $mulu &gt; mulu.txt</span><br><span class="line">echo &quot;1:查找以匹配模式开头的文件&quot;</span><br><span class="line">echo &quot;2:查找不包含匹配模式的文件&quot;</span><br><span class="line">echo &quot;3:查找以匹配模式结尾并且长度固定的文件&quot;</span><br><span class="line">read CHOICE1</span><br><span class="line">case $CHOICE1 in</span><br><span class="line">1)echo &quot;查找以匹配模式开头的文件&quot;</span><br><span class="line">  read scanf</span><br><span class="line">grep -E ^$scanf mulu.txt</span><br><span class="line">;;</span><br><span class="line">2)echo &quot;查找不包含匹配模式的文件&quot;</span><br><span class="line">  read scanf</span><br><span class="line">grep -Ev $scanf mulu.txt</span><br><span class="line">;;</span><br><span class="line">3)echo &quot;查找以匹配模式结尾并且长度固定的文件&quot;</span><br><span class="line">  read scanf</span><br><span class="line">  echo &quot;请输入长度&quot;</span><br><span class="line">  read length</span><br><span class="line">          readlength=$(($length-`echo $&#123;#scanf&#125;`))</span><br><span class="line">  grep -xE [[:alnum:]]\&#123;$readlength\&#125;$scanf mulu.txt</span><br><span class="line">;;</span><br><span class="line"> *)</span><br><span class="line">esac</span><br><span class="line">else #选择find</span><br><span class="line">echo &quot;自定义查找&quot;</span><br><span class="line">echo &quot;请输入查找目录:&quot;</span><br><span class="line">read mulu2</span><br><span class="line">echo &quot;1:查找文件大小大于给定下限的文件&quot;</span><br><span class="line">echo &quot;2:查找给定时间内修改过的文件&quot;</span><br><span class="line">echo &quot;3:查找给定文件后缀的文件&quot;</span><br><span class="line">read CHOICE2</span><br><span class="line">case $CHOICE2 in</span><br><span class="line">1)echo &quot;请输入文件大小下限值(k)&quot;</span><br><span class="line">  read size</span><br><span class="line">  find $mulu2 -size +$size</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">2)echo &quot;请输入时间(day)&quot;</span><br><span class="line">  read time</span><br><span class="line">  find $mulu2 -mtime +$time</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">3)echo &quot;请输入文件后缀&quot;</span><br><span class="line">  read houzhui</span><br><span class="line">  find $mulu2 -name *.$houzhui</span><br><span class="line">;;</span><br><span class="line"> *)</span><br><span class="line">esac</span><br><span class="line">fi</span><br><span class="line">read DD</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-SHELL脚本设计&quot;&gt;&lt;a href=&quot;#Linux-SHELL脚本设计&quot; class=&quot;headerlink&quot; title=&quot;Linux SHELL脚本设计&quot;&gt;&lt;/a&gt;Linux SHELL脚本设计&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;SHELL程序的
      
    
    </summary>
    
      <category term="Linux学习" scheme="http://yoursite.com/categories/Linux%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="SHELL" scheme="http://yoursite.com/tags/SHELL/"/>
    
  </entry>
  
  <entry>
    <title>Linux下目录及其操作命令</title>
    <link href="http://yoursite.com/2017/12/17/Linux%E4%B8%8B%E7%9B%AE%E5%BD%95%E5%8F%8A%E5%85%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/12/17/Linux下目录及其操作命令/</id>
    <published>2017-12-17T13:23:34.000Z</published>
    <updated>2018-04-12T02:02:28.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux下目录及其操作命令"><a href="#Linux下目录及其操作命令" class="headerlink" title="Linux下目录及其操作命令"></a>Linux下目录及其操作命令</h1><hr><h2 id="创建和删除目录的命令"><a href="#创建和删除目录的命令" class="headerlink" title="创建和删除目录的命令"></a>创建和删除目录的命令</h2><h3 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h3><p>用来创建目录。</p><p>-m, –more=MORE 将新建目录的存取权限设置为MORE,存取权限用给定的八进制数字表示。</p><p>-p, –panrents 可一次性建立多个目录，即如果新建目录所指定的路径中有些父目录尚不存在，此选项可以自动建立他们。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir --more=700 /home/mengqc/test (在目录/home/mengqc下建立子目录test，并且只有文件主有读、写和执行权限，其他人无权访问)</span><br><span class="line">$ mkdir -p -m 750 bin/os_1 (在当前目录中建立bin和bin下的os_1目录，权限设置为文件主可读、写执行，用户组可读和执行，其他用户无权访问)</span><br></pre></td></tr></table></figure><h3 id="rmdir命令"><a href="#rmdir命令" class="headerlink" title="rmdir命令"></a>rmdir命令</h3><p>从一个目录中删除一个或多个空的子目录。</p><p>-p –parents 递归删除目录dirname，当子目录删除后其父目录为空时，也一同被删除。如果有非空目录，则该目录保留下来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /home/mengqc/test</span><br><span class="line">rmdir -p bin/os_1 (删除子目录os_1和其父目录bin)</span><br></pre></td></tr></table></figure><h2 id="改变工作目录和显示目录内容的命令"><a href="#改变工作目录和显示目录内容的命令" class="headerlink" title="改变工作目录和显示目录内容的命令"></a>改变工作目录和显示目录内容的命令</h2><h3 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h3><p>改变工作目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /home/liu (将当前目录改到/home/liu)</span><br><span class="line">$ cd (将当前目录改到用户的主目录)</span><br><span class="line">$ cd ../..  (将当前目录向上移动两级)</span><br></pre></td></tr></table></figure><h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><p>显示当前工作目录的绝对路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">/home/mengqc</span><br></pre></td></tr></table></figure><h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h3><p>列出指定目录的内容。</p><p>-a, –all 显示指定目录下所有子目录和文件，包括”.”开头的隐藏文件（例如.cshrc）。</p><p>-A, –almost-all 显示指定目录下所有子目录和文件，包括”.”开头的隐藏文件，但是列出”.”和”..”目录项</p><p>-b, –escape 当文件名中包含不可显示的字符时，则用\ddd（3位八进制数）形式显示该字符。</p><p>-c 按文件的修改时间排序</p><p>-C 分成多列显示项目</p><p>-d 如果参数是目录，则只显示它的名字，往往与-l选项一起用，以得到目录的详细信息。</p><p>-i, –inode 在输出的第一行显示文件的I节点号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls -F (列出当前目录的内容，并标出文件的属性)</span><br><span class="line">Desktop/ ex1 ex2 m1.c m2.c test/</span><br><span class="line">$ ls -C /home/mengqc (按多列形式列出目录/home/mengqc的内容)</span><br><span class="line">$ ls -lai (以长列表格式列出当前目录的内容，包含隐藏文件和他们的I节点号)</span><br></pre></td></tr></table></figure><h2 id="链接文件的命令"><a href="#链接文件的命令" class="headerlink" title="链接文件的命令"></a>链接文件的命令</h2><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><p>建立硬链接时，在别的目录或者本目录中增加目标文件的一个目录项，这样一个文件就登记在多个目录中。创建硬链接后，已经存在的文件的I节点号（Inode）会被多个目录文件项使用。</p><p>对硬链接有如下限制：</p><p>①不能对目录文件创建硬链接。</p><p>②不能在不同的文件系统之间创建硬链接。就是说链接文件和被链接文件必须位于同一个文件系统中。</p><h3 id="符号链接"><a href="#符号链接" class="headerlink" title="符号链接"></a>符号链接</h3><p>符号链接也称为软链接，是将一个路径名链接到另一个文件。这些文件是一种特别类型的文件。事实上，他只是一个文本文件，其中包含了它提供链接的另一个文件的路径名，另一个文件是实际包含所有数据的文件。所有读写文件内容的命令被用于符号链接时，将沿着链接方向前进来访问实际的文件。</p><h3 id="ln命令"><a href="#ln命令" class="headerlink" title="ln命令"></a>ln命令</h3><p>用来创建链接。</p><p>-s, –symbolic 建立符号链接，而不是硬链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /home/mengqc</span><br><span class="line">$ ln mub1/m2.c /home/liu/a2.c (将目录/home/mengqc/mub1下的文件m2.c链接到目录/home/liu下的文件a2.c)</span><br><span class="line">$ ln -s /home/mengqc/mub1 /home/liu/abc (在目录/home/liu下建立一个符号链接文件abc，使他指向目录/home/mengqc/mub1)</span><br></pre></td></tr></table></figure><h2 id="改变文件或目录存取权限的命令"><a href="#改变文件或目录存取权限的命令" class="headerlink" title="改变文件或目录存取权限的命令"></a>改变文件或目录存取权限的命令</h2><h3 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h3><p>（1）文件主</p><p>Linux为每个文件都分配一个文件所有者，成为文件主，并赋予文件主唯一的注册名。对文件的控制取决于文件主或超级用户（root）</p><p>文件或目录的创建者对创建的文件或目录拥有特别使用权。</p><p>文件的所有关系是可以改变的，可以将文件或目录的所有权转让给其他用户，但只有文件主或者超级用户才有权改变文件的所有关系。文件所有权的标志是用户ID(UID).</p><p>（2）用户组</p><p>当系统给管理员为用户建立账号后，会分配一个组ID合一个特定的用户组名。</p><p>（3）存取权限</p><p>Linux系统中的每个文件和目录都有存取许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。</p><p>Linux系统规定了4中不同类型的用户：①文件主（owner）②同组用户（group）③可以访问系统的其他用户（others）④超级用户（root）</p><p>存取权限规定了3中访问文件或者目录的方式：①读（r）②写（w）③可执行或查询（x）。</p><h3 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h3><p>用于改变或者设置文件或目录的存取权限。</p><p>一般格式：chmod key 文件名</p><p>key：who  操作符号 mode</p><p>[who]:</p><p>u 用户（user），即文件或目录的所有者</p><p>g 同组（group）用户，即与文件属主有相同组ID的所有用户</p><p>o 其他（others）用户，</p><p>a 所有（all）用户。他是系统默认值</p><p>[操作符号]:</p><p>+添加某个权限</p><p>-取消某个权限</p><p>=赋予给定权限并取消原有权限</p><p>[mode]:</p><p>r 可读</p><p>w 可写</p><p>x 可执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ chmod a+x ex1 (将文件ex1的权限改为所有用户都有执行权限)</span><br><span class="line">$ chmod u=r ug=x ex1 （将ex1的权限诚信设置成文件主可以读和执行，组用户可以执行，其他用户无权限）</span><br><span class="line">$ chmod 0664 ex1 (使文件ex1的文件主和同组用户具有读、写权限，而其他用户只可读)</span><br></pre></td></tr></table></figure><h3 id="umask命令"><a href="#umask命令" class="headerlink" title="umask命令"></a>umask命令</h3><p>用来设置限制新建文件权限的掩码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ umask u=,g=w,o=rwxg (将组用户的写权限、其他用户的读/写和执行权限都取消)</span><br></pre></td></tr></table></figure><h2 id="改变用户组和文件主的命令"><a href="#改变用户组和文件主的命令" class="headerlink" title="改变用户组和文件主的命令"></a>改变用户组和文件主的命令</h2><h3 id="chgrp命令"><a href="#chgrp命令" class="headerlink" title="chgrp命令"></a>chgrp命令</h3><p>改变文件或目录的所属的用户组。</p><p>-R，–recursive 递归式改变指定目录及其下面的所有子目录和文件的用户组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chgrp -R mengxin /home/mengqc (将/home/mengqc及其子目录下的所有文件的用户组改为mengxin)</span><br></pre></td></tr></table></figure><h3 id="chown命令"><a href="#chown命令" class="headerlink" title="chown命令"></a>chown命令</h3><p>改变某个文件或目录的所有者和所属的组。</p><p>-R，–recursive 递归式改变指定目录及其下面的所有子目录和文件的文件主。</p><p>-v –verbose 详细列出该命令所做的工作。</p><p>ps：只有文件主和超级用户可以使用该命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R liu /home/mengqc (将目录/home/mengqc及下面的所有文件、子目录的文件主改为liu)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux下目录及其操作命令&quot;&gt;&lt;a href=&quot;#Linux下目录及其操作命令&quot; class=&quot;headerlink&quot; title=&quot;Linux下目录及其操作命令&quot;&gt;&lt;/a&gt;Linux下目录及其操作命令&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;创建和删除目录的命令&quot;&gt;
      
    
    </summary>
    
      <category term="Linux学习" scheme="http://yoursite.com/categories/Linux%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
