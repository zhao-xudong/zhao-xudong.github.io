<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>马里奥</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-10T10:38:51.883Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>马里奥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javaScript中DOM操作</title>
    <link href="http://yoursite.com/2018/07/10/javaScript%E4%B8%ADDOM%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/07/10/javaScript中DOM操作/</id>
    <published>2018-07-10T09:48:41.000Z</published>
    <updated>2018-07-10T10:38:51.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript中DOM操作"><a href="#JavaScript中DOM操作" class="headerlink" title="JavaScript中DOM操作"></a>JavaScript中DOM操作</h1><hr><h2 id="通过ID获取-元素"><a href="#通过ID获取-元素" class="headerlink" title="通过ID获取 元素"></a>通过ID获取 元素</h2><p><strong>语法：</strong>document.getElementById(“id”);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  var mychar=document.getElementById(&quot;con&quot;);</span><br><span class="line">  document.write(&quot;结果:&quot;+mychar); //输出获取的P标签。 </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>结果：null或者[object HTMLParagraphElement]</p><h2 id="innerHTML属性"><a href="#innerHTML属性" class="headerlink" title="innerHTML属性"></a>innerHTML属性</h2><p>innerHTML属性用于获取或替换HTML元素的内容。</p><p><strong>语法：</strong>Object.innerHTML</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mychar=document.getElementById(&quot;con&quot;);</span><br><span class="line">mychar.innerHTML=&quot;hellow world&quot;;</span><br></pre></td></tr></table></figure><h2 id="改变HTML样式"><a href="#改变HTML样式" class="headerlink" title="改变HTML样式"></a>改变HTML样式</h2><p><strong>语法：</strong>Object.style.property=new style;</p><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">backgroundColor</td><td style="text-align:center">设置元素的背景颜色</td></tr><tr><td style="text-align:center">height</td><td style="text-align:center">设置元素的高度</td></tr><tr><td style="text-align:center">width</td><td style="text-align:center">设置元素的宽度</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">设置文本的颜色</td></tr><tr><td style="text-align:center">font</td><td style="text-align:center">在一行设置所有的字体属性</td></tr><tr><td style="text-align:center">fontFamily</td><td style="text-align:center">设置元素的字体系列</td></tr><tr><td style="text-align:center">fontSize</td><td style="text-align:center">设置元素的字体大小</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;pcon&quot;&gt;Hello World!&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   var mychar = document.getElementById(&quot;pcon&quot;);</span><br><span class="line">   mychar.style.color=&quot;red&quot;;//颜色改为红色</span><br><span class="line">   mychar.style.fontSize=&quot;20&quot;;//字号改为20</span><br><span class="line">   mychar.style.backgroundColor =&quot;blue&quot;;//背景颜色改为blue</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="显示和隐藏（display属性）"><a href="#显示和隐藏（display属性）" class="headerlink" title="显示和隐藏（display属性）"></a>显示和隐藏（display属性）</h2><p><strong>语法：</strong>Object.style.display=value</p><p><strong>value取值：</strong>none        此元素不会被显示（即隐藏）</p><p>​               block    此元素将显示为块级元素（即显示）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mychar = document.getElementById(&quot;con&quot;).style.display=&quot;none&quot;;//隐藏</span><br><span class="line">var mychar = document.getElementById(&quot;con&quot;).style.display=&quot;block&quot;;//显示</span><br></pre></td></tr></table></figure><h2 id="控制类名（className-属性）"><a href="#控制类名（className-属性）" class="headerlink" title="控制类名（className 属性）"></a>控制类名（className 属性）</h2><p><strong>语法：</strong>object.className=classname</p><p><strong>作用：</strong>1.获取元素的class属性        2.为网页内的某个元素指定一个css样式来改变该元素的外观</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var p1=document.getElementById(&quot;p1&quot;);</span><br><span class="line">p1.className=&quot;two&quot;;</span><br></pre></td></tr></table></figure><h2 id="编程挑战"><a href="#编程挑战" class="headerlink" title="编程挑战"></a>编程挑战</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; Content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;javascript&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">body&#123;font-size:12px;&#125;</span><br><span class="line">#txt&#123;</span><br><span class="line">    height:400px;</span><br><span class="line">    width:600px;</span><br><span class="line">border:#333 solid 1px;</span><br><span class="line">padding:5px;&#125;</span><br><span class="line">p&#123;</span><br><span class="line">line-height:18px;</span><br><span class="line">text-indent:2em;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h2 id=&quot;con&quot;&gt;JavaScript课程&lt;/H2&gt;</span><br><span class="line">  &lt;div id=&quot;txt&quot;&gt; </span><br><span class="line">     &lt;h5&gt;JavaScript为网页添加动态效果并实现与用户交互的功能。&lt;/h5&gt;</span><br><span class="line">        &lt;p&gt;1. JavaScript入门篇，让不懂JS的你，快速了解JS。&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;2. JavaScript进阶篇，让你掌握JS的基础语法、函数、数组、事件、内置对象、BOM浏览器、DOM操作。&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;3. 学完以上两门基础课后，在深入学习JavaScript的变量作用域、事件、对象、运动、cookie、正则表达式、ajax等课程。&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;form&gt;</span><br><span class="line">  &lt;!--当点击相应按钮，执行相应操作，为按钮添加相应事件--&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;改变颜色&quot; onclick=&quot;upcolor()&quot;&gt;  </span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;改变宽高&quot; onclick=&quot;upwidth()&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;隐藏内容&quot; onclick=&quot;cang()&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;显示内容&quot; onclick=&quot;xian()&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;取消设置&quot; onclick=&quot;quxiao()&quot;&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">//定义&quot;改变颜色&quot;的函数</span><br><span class="line">    function upcolor()&#123;</span><br><span class="line">        var mychar=document.getElementById(&quot;txt&quot;);</span><br><span class="line">        mychar.style.color=&quot;red&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//定义&quot;改变宽高&quot;的函数</span><br><span class="line">    function upwidth()&#123;</span><br><span class="line">        var mychar=document.getElementById(&quot;txt&quot;);</span><br><span class="line">        mychar.style.width=&quot;100px&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//定义&quot;隐藏内容&quot;的函数</span><br><span class="line">    function cang()&#123;</span><br><span class="line">        var mychar=document.getElementById(&quot;txt&quot;).style.display=&quot;none&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//定义&quot;显示内容&quot;的函数</span><br><span class="line">    function xian()&#123;</span><br><span class="line">        var mychar=document.getElementById(&quot;txt&quot;).style.display=&quot;block&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//定义&quot;取消设置&quot;的函数</span><br><span class="line">    function quxiao()&#123;</span><br><span class="line">        var mychar=document.getElementById(&quot;txt&quot;);</span><br><span class="line">        var flag=confirm(&quot;是否取消设置？&quot;);</span><br><span class="line">        if(flag==true)&#123;</span><br><span class="line">            document.getElementById(&quot;txt&quot;).removeAttribute(&quot;style&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript中DOM操作&quot;&gt;&lt;a href=&quot;#JavaScript中DOM操作&quot; class=&quot;headerlink&quot; title=&quot;JavaScript中DOM操作&quot;&gt;&lt;/a&gt;JavaScript中DOM操作&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;通过ID
      
    
    </summary>
    
      <category term="Javascript入门" scheme="http://yoursite.com/categories/Javascript%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="DOM" scheme="http://yoursite.com/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript之请与我互动</title>
    <link href="http://yoursite.com/2018/07/10/JavaScript%E4%B9%8B%E8%AF%B7%E4%B8%8E%E6%88%91%E4%BA%92%E5%8A%A8/"/>
    <id>http://yoursite.com/2018/07/10/JavaScript之请与我互动/</id>
    <published>2018-07-10T06:04:44.000Z</published>
    <updated>2018-07-10T08:56:03.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript之请与我互动"><a href="#JavaScript之请与我互动" class="headerlink" title="JavaScript之请与我互动"></a>JavaScript之请与我互动</h1><hr><p>学习均源于<a href="https://www.imooc.com/learn/36" target="_blank" rel="noopener">慕客网学习地址</a>。</p><h2 id="JavaScript的位置"><a href="#JavaScript的位置" class="headerlink" title="JavaScript的位置"></a>JavaScript的位置</h2><p>最常用的方式是在页面head部分放置<code>&lt;script&gt;</code>元素，浏览器解析head部分就会执行这个代码，然后才解析其余部分。</p><p>放在<code>&lt;body&gt;</code>部分，JavaScript代码在网页读取该语句的时候就会执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;JS代码的位置&lt;/title&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"> document.write(&quot;I love&quot;); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"> document.write(&quot;javascript&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="JavaScript互动部分"><a href="#JavaScript互动部分" class="headerlink" title="JavaScript互动部分"></a>JavaScript互动部分</h2><h3 id="输出内容"><a href="#输出内容" class="headerlink" title="输出内容"></a>输出内容</h3><p>document.write();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//方法一：输出内容用&quot;&quot;括起来，直接输出&quot;&quot;中的内容</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  document.write(&quot;I love JavaScript！&quot;); //内容用&quot;&quot;括起来，&quot;&quot;里的内容直接输出。</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">//方法二：通过变量，输出内容</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  var mystr=&quot;hello world!&quot;;</span><br><span class="line">  document.write(mystr);  //直接写变量名，输出变量存储的内容。</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">//方法三：输出多项内容，内容之前用+连接</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  var mystr=&quot;hello&quot;;</span><br><span class="line">  document.write(mystr+&quot;I love JavaScript&quot;); //多项内容之间用+号连接</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">//输出HTML标签，并起作用，标签用&quot;&quot;括起来</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  var mystr=&quot;hello&quot;;</span><br><span class="line">document.write(mystr+&quot;&lt;br&gt;&quot;);//输出hello后，输出一个换行符</span><br><span class="line">  document.write(&quot;JavaScript&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="警告（alert消息对话框）"><a href="#警告（alert消息对话框）" class="headerlink" title="警告（alert消息对话框）"></a>警告（alert消息对话框）</h3><p><strong>语法：</strong>alert(字符串或变量)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">   var mynum = 30;</span><br><span class="line">   alert(&quot;hello!&quot;+mynum);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2018/07/10/JavaScript之请与我互动/001.jpg" alt=""></p><h3 id="确认（confirm消息对话框）"><a href="#确认（confirm消息对话框）" class="headerlink" title="确认（confirm消息对话框）"></a>确认（confirm消息对话框）</h3><p>confirm消息对话框常用语 允许用户做选择动作。</p><p><strong>语法：</strong>confirm(str)；</p><p>参数说明：<em>str</em>：在消息对话框要显示的文本        <em>返回值</em>：Boolean值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;confirm&lt;/title&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  function rec()&#123;</span><br><span class="line">    var mymessage=confirm(&quot;你是女生吗？&quot;);</span><br><span class="line">    if(mymessage==true)</span><br><span class="line">    &#123;</span><br><span class="line">    document.write(&quot;你是女士!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        document.write(&quot;你是男士!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;    </span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;input name=&quot;button&quot; type=&quot;button&quot; onClick=&quot;rec()&quot; value=&quot;点击我，弹出确认对话框&quot; /&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2018/07/10/JavaScript之请与我互动/002.jpg" alt=""></p><h3 id="提问（prompt消息对话框）"><a href="#提问（prompt消息对话框）" class="headerlink" title="提问（prompt消息对话框）"></a>提问（prompt消息对话框）</h3><p><code>prompt</code>弹出消息对话框通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮和一个文本输入框）</p><p><strong>语法</strong>：prompt(str1,str2)；</p><p><strong>参数说明：</strong>str1：要显示在消息对话框中的文本，不可修改        str2：文本框中的内容，可以修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;prompt&lt;/title&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  var myname=prompt(&quot;请输入你的姓名:&quot;);</span><br><span class="line">if(myname!=null)</span><br><span class="line">  &#123;   alert(&quot;你好&quot;+myname); &#125;</span><br><span class="line">else</span><br><span class="line">  &#123;  alert(&quot;你好 my friend.&quot;);  &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2018/07/10/JavaScript之请与我互动/003.jpg" alt=""></p><h3 id="打开新窗口（window-open）"><a href="#打开新窗口（window-open）" class="headerlink" title="打开新窗口（window.open）"></a>打开新窗口（window.open）</h3><p><strong>语法：</strong>window.open([URL],[窗口名称],[参数字符串])</p><p><strong>参数说明：</strong>URL：在窗口中要显示网页的网址或路径。</p><p>​           窗口名称：1.该名称由字母、数字和下划线字符组成</p><p>​                    2._blank：在新窗口显示目标网页</p><p>​                       _self：在当前窗口显示目标网页</p><p>​                       _top：框架网页中在上部窗口中显示目标网页</p><p>​           参数字符串：可选参数，设置窗口参数，各参数用逗号隔开</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">top</td><td style="text-align:center">Number</td><td style="text-align:center">窗口顶端离开屏幕顶部的像素数</td></tr><tr><td style="text-align:center">left</td><td style="text-align:center">Number</td><td style="text-align:center">窗口左端离开屏幕左端的像素数</td></tr><tr><td style="text-align:center">width</td><td style="text-align:center">Number</td><td style="text-align:center">窗口的宽度</td></tr><tr><td style="text-align:center">height</td><td style="text-align:center">Number</td><td style="text-align:center">窗口的高度</td></tr><tr><td style="text-align:center">menubar</td><td style="text-align:center">yes，no</td><td style="text-align:center">窗口有没有菜单</td></tr><tr><td style="text-align:center">toolbar</td><td style="text-align:center">yes，no</td><td style="text-align:center">窗口有没有工具条</td></tr><tr><td style="text-align:center">scrolbars</td><td style="text-align:center">yes，no</td><td style="text-align:center">窗口有没有滚动条</td></tr><tr><td style="text-align:center">status</td><td style="text-align:center">yes，no</td><td style="text-align:center">窗口有没有状态栏</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*打开http://www.baidu.com网页，将在新窗体中打开，宽为600，高为400，距屏幕顶100像素，屏左0像素。当点击  *按钮时，打开新窗口</span><br><span class="line">*/</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">window.open(&apos;http://www.baidu.com&apos;,&apos;sadas&apos;,width=400,&apos;height=600,top=100,left=0&apos;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><pre><code>### 关闭窗口（window.close）</code></pre><p><strong>用法：</strong>window.close();或者&lt;窗口对象&gt;.close();</p><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><p><strong>要求：</strong>在窗口打开时候弹出确认框，是否打开（使用if判断确认框是否点击了确定，如点击弹出输入对话框，否则没有任何操作。）。通过输入对话框，确定打开的网址，默认为<code>http://www.imooc.com/</code>。打开的窗口要求，宽400像素，高500像素，无菜单栏，无工具栏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function openWindow()&#123;</span><br><span class="line">        var mymessage=confirm(&apos;是否已经打开窗口？&apos;);</span><br><span class="line">        if(mymessage==true)&#123;</span><br><span class="line">            var mubiao=prompt(&apos;请输入网址：&apos;,&apos;http://www.imooc.com/&apos;);</span><br><span class="line">            if(mubiao!==null)&#123;</span><br><span class="line">                window.open(mubiao,&apos;_blank&apos;,&apos;width=400,height=500,menubar=no,toolbar=no&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        document.write(&quot;下次再来&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript之请与我互动&quot;&gt;&lt;a href=&quot;#JavaScript之请与我互动&quot; class=&quot;headerlink&quot; title=&quot;JavaScript之请与我互动&quot;&gt;&lt;/a&gt;JavaScript之请与我互动&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;学习均源于&lt;a h
      
    
    </summary>
    
      <category term="Javascript入门" scheme="http://yoursite.com/categories/Javascript%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>python中类中操作一个对象的状态</title>
    <link href="http://yoursite.com/2018/06/08/python%E4%B8%AD%E7%B1%BB%E4%B8%AD%E6%93%8D%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%8A%B6%E6%80%81/"/>
    <id>http://yoursite.com/2018/06/08/python中类中操作一个对象的状态/</id>
    <published>2018-06-08T15:12:42.000Z</published>
    <updated>2018-06-08T15:51:02.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python中类中操作一个对象的状态"><a href="#python中类中操作一个对象的状态" class="headerlink" title="python中类中操作一个对象的状态"></a>python中类中操作一个对象的状态</h1><hr><p>使用<code>getattr()</code>、<code>setattr()</code>以及<code>hasattr()</code>，我们可以直接操作一个对象的状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;class MyObject(object):</span><br><span class="line">...def __init__(self):</span><br><span class="line">...self.x=9</span><br><span class="line">...def power(self):</span><br><span class="line">...return self.x * self.x</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;obj = MyObject()</span><br></pre></td></tr></table></figure><p>紧接着，可以测试该对象的属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;hasattr(obj,&apos;x&apos;) # 有属性&apos;x&apos;吗？</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt;obj.x</span><br><span class="line">9</span><br><span class="line">&gt;&gt;&gt;hasattr(obj,&apos;y&apos;) # 有属性&apos;y&apos;吗？</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt;setattr(obj,&apos;y&apos;,19) # 设置一个属性&apos;y&apos;</span><br><span class="line">&gt;&gt;&gt;hasattr(obj,&apos;y&apos;) # 有属性&apos;y&apos;吗？</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt;getattr(obj,&apos;y&apos;) # 获取属性&apos;y&apos;</span><br><span class="line">19</span><br><span class="line">&gt;&gt;&gt;obj.y</span><br><span class="line">19</span><br></pre></td></tr></table></figure><p>可以传入一个default参数，如果属性不存在，就返回默认值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;getattr(obj,&apos;z&apos;,404)</span><br><span class="line">404</span><br></pre></td></tr></table></figure><p>也可以获得对象的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;hasattr(obj,&apos;power&apos;) # 有属性&apos;power&apos;吗？</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt;getattr(obj,&apos;power&apos;) # 获取属性&apos;power&apos;吗？</span><br><span class="line">&lt;bound method MyObject.power of &lt;__main__.MyObject object at 0x108ca35d0&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;fn=getattr(obj,&apos;power&apos;) # 获取属性&apos;power&apos;并赋值到变量fn</span><br><span class="line">&gt;&gt;&gt;fn # fn指向obj.power</span><br><span class="line">&lt;bound method MyObject.power of &lt;__main__.MyObject object at 0x108ca35d0&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;fn() # 调用fn()与调用obj.power()是一样的</span><br><span class="line">81</span><br></pre></td></tr></table></figure><p>目前还是没有实际应用过，处于半懵半懂状态。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python中类中操作一个对象的状态&quot;&gt;&lt;a href=&quot;#python中类中操作一个对象的状态&quot; class=&quot;headerlink&quot; title=&quot;python中类中操作一个对象的状态&quot;&gt;&lt;/a&gt;python中类中操作一个对象的状态&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;使
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="getattr()" scheme="http://yoursite.com/tags/getattr/"/>
    
      <category term="setattr()" scheme="http://yoursite.com/tags/setattr/"/>
    
      <category term="hasattr()" scheme="http://yoursite.com/tags/hasattr/"/>
    
  </entry>
  
  <entry>
    <title>基于MySQL的图书管理系统</title>
    <link href="http://yoursite.com/2018/05/28/%E5%9F%BA%E4%BA%8EMySQL%E7%9A%84%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2018/05/28/基于MySQL的图书管理系统/</id>
    <published>2018-05-28T06:43:48.000Z</published>
    <updated>2018-05-28T08:10:00.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于MySQL的图书管理系统"><a href="#基于MySQL的图书管理系统" class="headerlink" title="基于MySQL的图书管理系统"></a>基于MySQL的图书管理系统</h1><hr><h2 id="连接MySQL数据库"><a href="#连接MySQL数据库" class="headerlink" title="连接MySQL数据库"></a>连接MySQL数据库</h2><p><strong>1.在eclipse中新建一个java项目，然后新建一个文件夹-libs(用来存放各种外部包)</strong></p><p>[假装这里有一张操作图片]</p><p><strong>2.在包里加入连接mysql数据库的包</strong></p><p><a href="https://pan.baidu.com/s/155nEXmZI7bUPy5oEnpEJSA" target="_blank" rel="noopener">下载链接</a>提取密码：cn9f</p><p>解压后打开”mysql-connector-java-5.0.8-bin.jar”，然后复制粘贴到我们的java项目的libs文件下面</p><p><strong>3.构建路径上的jar包</strong></p><p>打开eclipse→选择Project→选择Properties→点击“添加 JAR…..”并选择“mysql-connector-java-5.0.8-bin.jar”然后点击确认到结束。</p><p><strong>4.在java项目中进行mysql数据库的连接</strong></p><p>1)连接数据库的步骤:</p><p>​    ①加载驱动程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br></pre></td></tr></table></figure><p>​    ②连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String URL=&quot;jdbc:mysql://localhost:3306/数据库名字?&quot;;</span><br><span class="line">String NAME=&quot;root&quot;;//数据库名字</span><br><span class="line">String PASSWORD=&quot;1234&quot;;//数据库密码</span><br><span class="line">Coonection conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br></pre></td></tr></table></figure><p>2)创建SqlConnection.java文件</p><p>SqlConnection.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">public class SqlConnection &#123;  </span><br><span class="line">//这里是SqlConnection 类  </span><br><span class="line">  </span><br><span class="line">        /* </span><br><span class="line">        *java连接mysql数据库 </span><br><span class="line">        *1、加载驱动程序 </span><br><span class="line">        *2、数据库连接字符串&quot;jdbc:mysql://localhost:3306/数据库名?&quot; </span><br><span class="line">        *3、数据库登录名 </span><br><span class="line">        *3、数据库登录密码 </span><br><span class="line">        */  </span><br><span class="line">  </span><br><span class="line">    private static final String URL=&quot;jdbc:mysql://localhost:3306/deom?&quot;;//数据库连接字符串，这里的deom为数据库名  </span><br><span class="line">    private static final String NAME=&quot;admin&quot;;//登录名  </span><br><span class="line">    private static final String PASSWORD=&quot;13245&quot;;//密码  </span><br><span class="line">      </span><br><span class="line">    public void TheSqlConnection()  </span><br><span class="line">    &#123;  </span><br><span class="line">        //1.加载驱动  </span><br><span class="line">        try &#123;  </span><br><span class="line">            Class.forName(&quot;com.mysql.jdbc.Driver&quot;);  </span><br><span class="line">        &#125; catch (ClassNotFoundException e) &#123;  </span><br><span class="line">            System.out.println(&quot;未能成功加载驱动程序，请检查是否导入驱动程序！&quot;);  </span><br><span class="line">                        //添加一个println，如果加载驱动异常，检查是否添加驱动，或者添加驱动字符串是否错误  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">        Connection conn = null;  </span><br><span class="line">        try &#123;  </span><br><span class="line">            conn = DriverManager.getConnection(URL, NAME, PASSWORD);  </span><br><span class="line">                System.out.println(&quot;获取数据库连接成功！&quot;);  </span><br><span class="line">        &#125; catch (SQLException e) &#123;  </span><br><span class="line">            System.out.println(&quot;获取数据库连接失败！&quot;);  </span><br><span class="line">                        //添加一个println，如果连接失败，检查连接字符串或者登录名以及密码是否错误  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">               //数据库打开后就要关闭  </span><br><span class="line">        if(conn!=null)  </span><br><span class="line">        &#123;  </span><br><span class="line">            try &#123;  </span><br><span class="line">                conn.close();  </span><br><span class="line">            &#125; catch (SQLException e) &#123;  </span><br><span class="line">                // TODO Auto-generated catch block  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">                conn=null;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3)创建一个MainClass.java文件</p><p>MainClass.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class MainCalss &#123;  </span><br><span class="line">  </span><br><span class="line">    public static void main(String[] args) &#123;  </span><br><span class="line">        // TODO 自动生成的方法存根  </span><br><span class="line">        new SqlConnection().TheSqlConnection();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后，输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">获取数据库连接成功！</span><br></pre></td></tr></table></figure><p>以上便是所有关于连接数据库的操作，下面便是如何使用数据库进行增删改查的数据操作。</p><h2 id="图书管理系统"><a href="#图书管理系统" class="headerlink" title="图书管理系统"></a>图书管理系统</h2><p>Java中MySQL数据库的insert、delete、alter操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...连接数据库语句...</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">String sql=&quot;数据操作语句&quot;;</span><br><span class="line">stat.executeUpdate(sql);</span><br></pre></td></tr></table></figure><p>Java中MySQL数据库的select操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...连接数据库语句...</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">String sql=&quot;数据操作语句&quot;;</span><br><span class="line">stat.executeQuery(sql);</span><br><span class="line">ResultSet rs=stat.executeQuery(sql);</span><br><span class="line">//如果是输出所有结果，用下面这个</span><br><span class="line">while(rs.next())&#123;</span><br><span class="line">    System.out.println(rs.getString(1)+&quot;\t\t&quot;+rs.getString(2)+&quot;\t\t&quot;+rs.getString(3)+&quot;\t\t&quot;+rs.getString(4))</span><br><span class="line">&#125;</span><br><span class="line">//如果是输出指定id的单一结果</span><br><span class="line">if(rs.next())&#123;</span><br><span class="line">    System.out.println(rs.getString(1)+&quot;\t\t&quot;+rs.getString(2)+&quot;\t\t&quot;+rs.getString(3)+&quot;\t\t&quot;+rs.getString(4))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SqlConnection.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line">package test;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class SqlConnection &#123;</span><br><span class="line">/*</span><br><span class="line"> * java连接mysql数据库</span><br><span class="line"> * 1.加载驱动程序</span><br><span class="line"> * 2.数据库连接字符串&quot;jdbc:mysql://localhost;3306/s数据库名?&quot;</span><br><span class="line"> * 3.数据库登录名字 登录密码</span><br><span class="line"> */</span><br><span class="line">private static final String URL=&quot;jdbc:mysql://localhost:3306/BookStore?&quot;;</span><br><span class="line">private static final String NAME=&quot;root&quot;;//登录名</span><br><span class="line">private static final String PASSWORD=&quot;1234&quot;;</span><br><span class="line">Scanner input=new Scanner(System.in);</span><br><span class="line">public void TheSqlConnection()&#123;</span><br><span class="line">//1.加载驱动</span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line">System.out.println(&quot;未能成功加载驱动程序，请检查是否导入驱动程序！&quot;);</span><br><span class="line">//添加一个println，如果驱动加载异常，检查是否添加驱动，或者添加驱动字符串是否错误</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">Connection conn=null;</span><br><span class="line">try&#123;</span><br><span class="line">conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br><span class="line">System.out.println(&quot;获取数据库连接成功！&quot;);</span><br><span class="line">PreparedStatement pst=conn.prepareCall(&quot;select * from book&quot;);//输入的要是在MYSQL中执行的句子</span><br><span class="line">ResultSet rs=pst.executeQuery();//获得执行上面代码后的结果集</span><br><span class="line">while(rs.next())&#123;</span><br><span class="line">System.out.print(rs.getString(1)+&quot; &quot;);</span><br><span class="line">System.out.print(rs.getString(2));</span><br><span class="line">System.out.print(rs.getString(3));</span><br><span class="line">System.out.print(rs.getString(4)+&quot; &quot;);&#125;</span><br><span class="line"></span><br><span class="line">&#125;catch(SQLException e)&#123;</span><br><span class="line">System.out.println(&quot;获取数据库连接失败！&quot;);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">//数据库打开后就要关闭</span><br><span class="line">if(conn!=null)&#123;</span><br><span class="line">try&#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;catch(SQLException e)&#123;</span><br><span class="line">//TODO Auto-generated catch block</span><br><span class="line">e.printStackTrace();</span><br><span class="line">conn=null;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//查找表函数</span><br><span class="line">public void selectAll() throws Exception&#123;</span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);//加载驱动</span><br><span class="line">Connection conn=DriverManager.getConnection(URL,NAME,PASSWORD);//连接数据库</span><br><span class="line">Statement stat=conn.createStatement();//容器</span><br><span class="line">String sql=&quot;select * from book&quot;;//查询图书</span><br><span class="line">ResultSet rs=stat.executeQuery(sql);</span><br><span class="line">System.out.println(&quot;图书编号\t\t图书名称\t\t图书作者\t\t图书数量&quot;);</span><br><span class="line">while(rs.next())&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(rs.getString(1)+&quot;\t\t&quot;+rs.getString(2)+&quot;\t\t&quot;+rs.getString(3)+&quot;\t\t&quot;+rs.getString(4));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn.close();</span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//查找某个图书信息</span><br><span class="line">public void select() throws Exception&#123;</span><br><span class="line">int id;</span><br><span class="line">System.out.println(&quot;输入你要查找图书的ID：&quot;);</span><br><span class="line">id=input.nextInt();</span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">Connection conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">String sql=&quot;select * from book where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">stat.executeQuery(sql);</span><br><span class="line">ResultSet rs=stat.executeQuery(sql);</span><br><span class="line">System.out.println(&quot;图书编号\t\t图书名称\t\t图书作者\t\t图书数量&quot;);</span><br><span class="line">if(rs.next())&#123;</span><br><span class="line">System.out.println(rs.getString(1)+&quot;\t\t&quot;+rs.getString(2)+&quot;\t\t&quot;+rs.getString(3)+&quot;\t\t&quot;+rs.getString(4));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn.close();</span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//插入数据函数</span><br><span class="line">public void insert() throws Exception&#123;</span><br><span class="line">int id,num;</span><br><span class="line">String name,author;</span><br><span class="line">id=input.nextInt();</span><br><span class="line">name=input.next();</span><br><span class="line">author=input.next();</span><br><span class="line">num=input.nextInt();</span><br><span class="line"></span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">Connection conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">String sql=&quot;insert into book(bookId,bookName,bookAuthor,bookNum)values(\&quot;&quot;+id+&quot;\&quot;,\&quot;&quot;+name+&quot;\&quot;,\&quot;&quot;+author+&quot;\&quot;,\&quot;&quot;+num+&quot;\&quot;)&quot;;</span><br><span class="line">//String sql=&quot;insert into book(bookId,bookName,bookAuthor,bookNum)values(&quot;+id+&quot;,&quot;+name+&quot;,&quot;+author+&quot;,&quot;+num+&quot;)&quot;;</span><br><span class="line">stat.executeUpdate(sql);</span><br><span class="line">System.out.println(&quot;图书已经被插入......！&quot;);</span><br><span class="line">conn.close();</span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//修改数据</span><br><span class="line">public void alter() throws Exception&#123;</span><br><span class="line">boolean flag=false;</span><br><span class="line">int a;//switch</span><br><span class="line">int id,num,id1,num1;</span><br><span class="line">String name,name1,author,author1;</span><br><span class="line">System.out.println(&quot;选择你要修改的图书编号：&quot;);</span><br><span class="line">id=input.nextInt();</span><br><span class="line">System.out.println(&quot;选择你要修改的内容：1.图书编号 2.图书名称 3.图书作者，4.图书数量&quot;);</span><br><span class="line">a=input.nextInt();</span><br><span class="line">String sql=&quot;&quot;;</span><br><span class="line">switch(a)&#123;</span><br><span class="line">case 1:</span><br><span class="line">System.out.println(&quot;请输入新的图书编号：&quot;);</span><br><span class="line">id1=input.nextInt();</span><br><span class="line">sql=&quot;update book set bookId=&apos;&quot;+id1+&quot;&apos;where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">flag=true;</span><br><span class="line">break;</span><br><span class="line">case 2:</span><br><span class="line">System.out.println(&quot;请输入新的图书名称：&quot;);</span><br><span class="line">name1=input.next();</span><br><span class="line">sql=&quot;update book set bookName=&apos;&quot;+name1+&quot;&apos;where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">flag=true;</span><br><span class="line">break;</span><br><span class="line">case 3:</span><br><span class="line">System.out.println(&quot;请输入新的图书作者：&quot;);</span><br><span class="line">author1=input.next();</span><br><span class="line">sql=&quot;update book set bookAuthor=&apos;&quot;+author1+&quot;&apos;where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">flag=true;</span><br><span class="line">break;</span><br><span class="line">case 4:</span><br><span class="line">System.out.println(&quot;请输入新的图书数量&quot;);</span><br><span class="line">num1=input.nextInt();</span><br><span class="line">sql=&quot;update book set bookNum=&apos;&quot;+num1+&quot;&apos;where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">flag=true;</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">System.out.println(&quot;输入数字有误！&quot;);</span><br><span class="line">flag=false;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">if(flag)&#123;</span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">Connection conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">stat.executeUpdate(sql);</span><br><span class="line">int i=stat.executeUpdate(sql);</span><br><span class="line">if(i&gt;=0)&#123;</span><br><span class="line">System.out.println(&quot;修改成功！&quot;);</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;修改失败！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">conn.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//删除数据</span><br><span class="line">public void delete() throws Exception&#123;</span><br><span class="line">int id;</span><br><span class="line">System.out.println(&quot;选择你要删除的图书的编号：&quot;);</span><br><span class="line">id=input.nextInt();</span><br><span class="line">try&#123;</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">Connection conn=DriverManager.getConnection(URL,NAME,PASSWORD);</span><br><span class="line">Statement stat=conn.createStatement();</span><br><span class="line">String sql=&quot;delete from book where bookId=&apos;&quot;+id+&quot;&apos;&quot;;</span><br><span class="line">stat.executeUpdate(sql);</span><br><span class="line">int i=stat.executeUpdate(sql);</span><br><span class="line">if(i&gt;=0)&#123;</span><br><span class="line">System.out.println(&quot;删除成功！&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;删除失败！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">conn.close();</span><br><span class="line"></span><br><span class="line">&#125;catch(ClassNotFoundException e)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainClass.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.Statement;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class MainClass &#123;</span><br><span class="line">public static void main(String[] args) throws Exception&#123;</span><br><span class="line">Scanner input=new Scanner(System.in);</span><br><span class="line">boolean m=true;//用于while循环</span><br><span class="line">int n;//switch判断</span><br><span class="line"></span><br><span class="line">while(m)&#123;</span><br><span class="line">new MainClass().menu();</span><br><span class="line">System.out.println(&quot;请选择功能：&quot;);</span><br><span class="line">n=input.nextInt();</span><br><span class="line">switch(n)&#123;</span><br><span class="line">case 1:</span><br><span class="line">new SqlConnection().selectAll();</span><br><span class="line">break;</span><br><span class="line">case 2:</span><br><span class="line">new SqlConnection().insert();</span><br><span class="line">break;</span><br><span class="line">case 3:</span><br><span class="line">new SqlConnection().select();</span><br><span class="line">break;</span><br><span class="line">case 4:</span><br><span class="line">new SqlConnection().alter();</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">new SqlConnection().delete();</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">System.out.println(&quot;773626743@qq.com&quot;);</span><br><span class="line">break;</span><br><span class="line">case 7:</span><br><span class="line">m=false;</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">System.out.println(&quot;输入有误，请重新输入！&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public void menu()&#123;</span><br><span class="line">System.out.println(&quot;\n\n&quot;);</span><br><span class="line">System.out.println(&quot;*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*&quot;);</span><br><span class="line">System.out.println(&quot;*\t\t\t\t\t图书管理系统\t\t\t\t\t*&quot;);</span><br><span class="line">System.out.println(&quot;*\t\t\t\t\t\t\t\t\t\t\t*&quot;);</span><br><span class="line">System.out.println(&quot;*\t\t1.图书信息\t\t2.增加图书\t\t3.查找图书\t\t*&quot;);</span><br><span class="line">System.out.println(&quot;*\t\t4.修改图书\t\t5.删除图书\t\t6.联系作者\t\t*&quot;);</span><br><span class="line">System.out.println(&quot;*\t\t7.退出系统\t\t\t\t\t\t\t\t*&quot;);</span><br><span class="line">System.out.println(&quot;*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>①主界面</p><p><img src="/2018/05/28/基于MySQL的图书管理系统/001.jpg" alt=""></p><p>②输出图书信息：</p><p><img src="/2018/05/28/基于MySQL的图书管理系统/002.jpg" alt=""></p><p>③增加图书：</p><p><img src="/2018/05/28/基于MySQL的图书管理系统/003.jpg" alt=""></p><p>④查找图书：</p><p><img src="/2018/05/28/基于MySQL的图书管理系统/004.jpg" alt=""></p><p>⑤修改图书：</p><p><img src="/2018/05/28/基于MySQL的图书管理系统/005.jpg" alt=""></p><p>以上便是图书管理系统的实现过程。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基于MySQL的图书管理系统&quot;&gt;&lt;a href=&quot;#基于MySQL的图书管理系统&quot; class=&quot;headerlink&quot; title=&quot;基于MySQL的图书管理系统&quot;&gt;&lt;/a&gt;基于MySQL的图书管理系统&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;连接MySQL数据库&quot;&gt;
      
    
    </summary>
    
      <category term="Java小项目" scheme="http://yoursite.com/categories/Java%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="图书管理系统" scheme="http://yoursite.com/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java图书管理系统</title>
    <link href="http://yoursite.com/2018/05/26/Java%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2018/05/26/Java图书管理系统/</id>
    <published>2018-05-26T15:51:42.000Z</published>
    <updated>2018-05-26T16:18:51.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java图书管理系统"><a href="#Java图书管理系统" class="headerlink" title="Java图书管理系统"></a>Java图书管理系统</h1><hr><p>​    学习要学以致用，于是写了一个粗糙的java图书管理系统，实现了图书的增删改查的基本操作，在写的过程中遇到了很多问题，不过也都通过暴力解决了。大晚上的脑仁不够用了， 直接上图吧。</p><p><strong>主界面：</strong></p><p><img src="/2018/05/26/Java图书管理系统/001.jpg" alt=""></p><p><strong>增加图书：</strong></p><p><img src="/2018/05/26/Java图书管理系统/002.jpg" alt=""></p><p><strong>查找图书：</strong></p><p><img src="/2018/05/26/Java图书管理系统/003.jpg" alt=""></p><p><strong>修改图书：</strong></p><p><img src="/2018/05/26/Java图书管理系统/004.jpg" alt=""></p><p><strong>删除图书：</strong></p><p><img src="/2018/05/26/Java图书管理系统/005.jpg" alt=""></p><p><strong>源代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line">package success;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Library &#123;</span><br><span class="line">Scanner input=new Scanner(System.in);</span><br><span class="line">private int BookId;//书的ID</span><br><span class="line">private String BookName;//书的名字</span><br><span class="line">private String Author;//书的作者</span><br><span class="line">private int BookNum;//书的数量</span><br><span class="line"></span><br><span class="line">public void Library(int BookId,String BookName,String Author,int BookNum)&#123;</span><br><span class="line">this.BookId=BookId;</span><br><span class="line">this.BookName=BookName;</span><br><span class="line">this.Author=Author;</span><br><span class="line">this.BookNum=BookNum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setBookId(int BookId)&#123;</span><br><span class="line">this.BookId=BookId;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public void setBookName(String BookName)&#123;</span><br><span class="line">this.BookName=BookName;</span><br><span class="line">&#125;</span><br><span class="line">public void setAuthor(String Author)&#123;</span><br><span class="line">this.Author=Author;</span><br><span class="line">&#125;</span><br><span class="line">public void setBookNum(int BookNum)&#123;</span><br><span class="line">this.BookNum=BookNum;</span><br><span class="line">&#125;</span><br><span class="line">public int getBookId()&#123;</span><br><span class="line">return BookId;</span><br><span class="line">&#125;</span><br><span class="line">public String getBookName()&#123;</span><br><span class="line">return BookName;</span><br><span class="line">&#125;</span><br><span class="line">public String getAuthor()&#123;</span><br><span class="line">return Author;</span><br><span class="line">&#125;</span><br><span class="line">public int getBookNum()&#123;</span><br><span class="line">return BookNum;</span><br><span class="line">&#125;</span><br><span class="line">//增加图书函数</span><br><span class="line">public void add(Library a)&#123;//增加图书以及图书信息函数</span><br><span class="line">int BookId1,BookNum1;</span><br><span class="line">String BookName1,Author1;</span><br><span class="line">System.out.println(&quot;~~~~~~~~~开始添加图书信息！~~~~~~~~~&quot;);</span><br><span class="line">System.out.println(&quot;图书ID：&quot;);</span><br><span class="line">BookId1=input.nextInt();</span><br><span class="line">a.setBookId(BookId1);</span><br><span class="line">System.out.println(&quot;图书名字：&quot;);</span><br><span class="line">BookName1=input.next();</span><br><span class="line">a.setBookName(BookName1);</span><br><span class="line">System.out.println(&quot;图书作者&quot;);</span><br><span class="line">Author1=input.next();</span><br><span class="line">a.setAuthor(Author1);</span><br><span class="line">System.out.println(&quot;图书数量&quot;);</span><br><span class="line">BookNum1=input.nextInt();</span><br><span class="line">a.setBookNum(BookNum1);</span><br><span class="line">System.out.println(&quot;~~~~~~~~~结束添加图书信息！~~~~~~~~~&quot;);</span><br><span class="line">&#125;</span><br><span class="line">public int select(String[][] a)&#123;//用来输出特定图书号图书信息</span><br><span class="line">int m;</span><br><span class="line">int n = -1;</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;请输入你要查找的图书号：&quot;);</span><br><span class="line">m=input.nextInt();</span><br><span class="line">for(int i=0;i&lt;a.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(Integer.parseInt(a[i][0])==m)&#123;</span><br><span class="line"></span><br><span class="line">n=i;</span><br><span class="line">break;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public int alter_s(String[][] a)&#123;//用来查找修改图书的下标</span><br><span class="line">int m;</span><br><span class="line">int n=-1;</span><br><span class="line">System.out.println(&quot;选择要修改图书的编号：&quot;);</span><br><span class="line">m=input.nextInt();</span><br><span class="line">for(int i=0;i&lt;a.length;i++)&#123;</span><br><span class="line">if(Integer.parseInt(a[i][0])==m)&#123;</span><br><span class="line">n=i;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return n;</span><br><span class="line">&#125;</span><br><span class="line">public int Num()&#123;//用来查找修改图书信息的下标</span><br><span class="line">int n=-1;</span><br><span class="line">System.out.println(&quot;选择你要修改的内容：0.图书ID   1.图书姓名   2.图书作者   4.图书数量&quot;);</span><br><span class="line">n=input.nextInt();</span><br><span class="line">return n;</span><br><span class="line">&#125;</span><br><span class="line">public int delete(String[][] a)&#123;//用于删除图书信息</span><br><span class="line">System.out.println(&quot;选择你要删除的图书的图书号：&quot;);</span><br><span class="line">int m;</span><br><span class="line">int n=-1;</span><br><span class="line">m=input.nextInt();</span><br><span class="line">for(int i=0;i&lt;a.length;i++)&#123;</span><br><span class="line">if(Integer.parseInt(a[i][0])==m)&#123;</span><br><span class="line">n=i;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return n;</span><br><span class="line">&#125;</span><br><span class="line">public void display()&#123;</span><br><span class="line">System.out.println(&quot;-----------------------------图书管理系统---------------------------------&quot;);</span><br><span class="line">System.out.println(&quot;\t\t1.增加图书\t\t2.查找图书&quot;);</span><br><span class="line">System.out.println(&quot;\t\t3.修改图书\t\t4.删除图书&quot;);</span><br><span class="line">System.out.println(&quot;\t\t5.退出系统\t\t6.联系作者&quot;);</span><br><span class="line">System.out.println(&quot;--------------------------------------------------------------------------&quot;);&#125;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Scanner input=new Scanner(System.in);</span><br><span class="line">Library Lib=new Library();</span><br><span class="line">String[][] book1=new String[10][10];//存放图书信息的数组</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int count=0;//图书个数</span><br><span class="line">int m,o;//用来定位下标</span><br><span class="line">boolean flag=true;</span><br><span class="line">int number;</span><br><span class="line"></span><br><span class="line">while(flag)&#123;</span><br><span class="line">Lib.display();</span><br><span class="line">System.out.println(&quot;请输入选择的功能：&quot;);</span><br><span class="line">number=input.nextInt();</span><br><span class="line">switch(number)&#123;</span><br><span class="line">case 1:</span><br><span class="line">Lib.add(Lib);</span><br><span class="line">book1[count][0]=Lib.BookId+&quot;&quot;;</span><br><span class="line">book1[count][1]=Lib.BookName;</span><br><span class="line">book1[count][2]=Lib.Author;</span><br><span class="line">book1[count][3]=Lib.BookNum+&quot;&quot;;</span><br><span class="line">System.out.println(&quot;图书的ID是：&quot;+book1[count][0]);</span><br><span class="line">System.out.println(&quot;图书的名称是：&quot;+book1[count][1]);</span><br><span class="line">System.out.println(&quot;图书的作者是：&quot;+book1[count][2]);</span><br><span class="line">System.out.println(&quot;图书的数量是：&quot;+book1[count][3]);</span><br><span class="line">count++;</span><br><span class="line"></span><br><span class="line">break;</span><br><span class="line">case 2:</span><br><span class="line">m=Lib.select(book1);</span><br><span class="line"></span><br><span class="line">if(m&lt;0)&#123;</span><br><span class="line">System.out.println(&quot;没有这个图书编号！&quot;);</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;图书编号为：&quot;+book1[m][0]);</span><br><span class="line">System.out.println(&quot;图书名称为：&quot;+book1[m][1]);</span><br><span class="line">System.out.println(&quot;图书的作者是：&quot;+book1[m][2]);</span><br><span class="line">System.out.println(&quot;图书的数量是：&quot;+book1[m][3]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;~~~~~~~~~~~~图书信息查找完毕~~~~~~~~~~~~&quot;);</span><br><span class="line">break;</span><br><span class="line">case 3:</span><br><span class="line">m=Lib.alter_s(book1);</span><br><span class="line">o=Lib.Num();</span><br><span class="line">System.out.println(&quot;请输入你要修改的内容：&quot;);</span><br><span class="line">book1[m][o]=input.next();</span><br><span class="line">System.out.println(&quot;~~~~~~~~~~~~图书信息已经修改~~~~~~~~~~~~&quot;);</span><br><span class="line">break;</span><br><span class="line">case 4:</span><br><span class="line">m=Lib.delete(book1);</span><br><span class="line">book1[m]=null;</span><br><span class="line">for(int i=m;i&lt;book1.length-1;i++)</span><br><span class="line">&#123;</span><br><span class="line">book1[i]=book1[i+1];</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;~~~~~~~~~~~~图书信息已被删除~~~~~~~~~~~&quot;);</span><br><span class="line">count--;</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">System.out.println(&quot;~~~~~~~~~~~~您已经退出系统~~~~~~~~~~~~&quot;);</span><br><span class="line">flag=false;</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">System.out.println(&quot;~~~~~~~~~~~~作者真的菜！~~~~~~~~~~~~&quot;);</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">System.out.println(&quot;输入错误&quot;);</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以从<a href="https://github.com/zhao-xudong/Library-java" target="_blank" rel="noopener">Github</a>下载源码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java图书管理系统&quot;&gt;&lt;a href=&quot;#Java图书管理系统&quot; class=&quot;headerlink&quot; title=&quot;Java图书管理系统&quot;&gt;&lt;/a&gt;Java图书管理系统&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;​    学习要学以致用，于是写了一个粗糙的java图书管理系统，
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="图书管理系统" scheme="http://yoursite.com/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Python中的函数式编程-高阶函数map/reduce</title>
    <link href="http://yoursite.com/2018/05/21/Python%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0mapreduce/"/>
    <id>http://yoursite.com/2018/05/21/Python中的函数式编程-高阶函数mapreduce/</id>
    <published>2018-05-20T16:03:44.000Z</published>
    <updated>2018-05-20T16:03:20.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中的函数式编程-高阶函数map-reduce"><a href="#Python中的函数式编程-高阶函数map-reduce" class="headerlink" title="Python中的函数式编程-高阶函数map/reduce"></a>Python中的函数式编程-高阶函数map/reduce</h1><hr><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p><code>map()</code>函数接收两个参数，一个是函数，一个是序列，<code>map</code>将传入的函数依次作用到序列的每个元素，并把结果作为新的list返回。</p><p>比如我们有一个函数f(x)=x^2，要把这个函数作用在一个list<code>[1,2,3,4,5,6,7,8,9]</code>上，就可以用<code>map()</code>实现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;def f(x):</span><br><span class="line">...return x*x</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;map(f,[1,2,3,4,5,6,7,8,9])</span><br><span class="line">[1,4,9,16,25,36,49,64,81]</span><br></pre></td></tr></table></figure><p><code>map()</code>传入的第一个参数是<code>f</code>，即函数对象本身。</p><p><code>map()</code>作为高阶函数，事实上它把运算规则抽象，因此，我们不但可以计算简单的f(x)=x^2，还可以计算任意复杂的函数，比如把这个list转为字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;map(str,[1,2,3,4,5,6,7,8,9])</span><br><span class="line">[&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;]</span><br></pre></td></tr></table></figure><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>reduce把一个函数作用于一个序列[x1,x2,x3….]上，这个函数必须接收两个参数，reduce把结果和序列的下一个元素做累计计算，其效果就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reduce(f,[x1,x2,x3,x4])=f(f(f(x1,x2),x3),x4)</span><br></pre></td></tr></table></figure><p>比如对一个序列求和，就可以用reduce实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;def add(x,y):</span><br><span class="line">...return x+y</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;reduce(add,[1,3,5,7,9])</span><br><span class="line">25</span><br></pre></td></tr></table></figure><p>当然求和运算可以直接用Python内建函数<code>sum()</code>，没必要动用reduce。</p><p>但是如果把序列[1,3,5,7,9]变换成整数13579，reduce就派上用场了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;def fn(x,y):</span><br><span class="line">...return x*10+y</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;reduce(fn,[1,3,5,7,9])</span><br><span class="line">13579</span><br></pre></td></tr></table></figure><p>这个例子本身没有多大用处，但是，如果考虑到字符串<code>str</code>也是一个序列，对上面例子稍加改动，配合<code>map()</code>,我们就可以写出把<code>str</code>转换为<code>int</code>的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;def fn(x,y):</span><br><span class="line">...return x*10+y</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;def char2num(S):</span><br><span class="line">...return &#123;&apos;0&apos;:0,&apos;1&apos;:1,&apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt;reduce(fn,map(char2num,&apos;13579&apos;))</span><br><span class="line">13579</span><br></pre></td></tr></table></figure><p>整理成一个<code>str2int</code>的函数就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def str2int(s):</span><br><span class="line">def fn(x,y):</span><br><span class="line">return x*10+y</span><br><span class="line">def char2num(s):</span><br><span class="line">return &#123;&apos;0&apos;: 0, &apos;1&apos;: 1, &apos;2&apos;: 2, &apos;3&apos;: 3, &apos;4&apos;: 4, &apos;5&apos;: 5, &apos;6&apos;: 6, &apos;7&apos;: 7, &apos;8&apos;: 8, &apos;9&apos;: 9&#125;[s]</span><br><span class="line">retrun reduce(fn,map(char2num,s))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python中的函数式编程-高阶函数map-reduce&quot;&gt;&lt;a href=&quot;#Python中的函数式编程-高阶函数map-reduce&quot; class=&quot;headerlink&quot; title=&quot;Python中的函数式编程-高阶函数map/reduce&quot;&gt;&lt;/a&gt;Py
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="map" scheme="http://yoursite.com/tags/map/"/>
    
      <category term="reduce" scheme="http://yoursite.com/tags/reduce/"/>
    
  </entry>
  
  <entry>
    <title>Python中的高级特性-列表生成器</title>
    <link href="http://yoursite.com/2018/05/19/Python%E4%B8%AD%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7-%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>http://yoursite.com/2018/05/19/Python中的高级特性-列表生成器/</id>
    <published>2018-05-19T15:51:44.000Z</published>
    <updated>2018-05-19T15:51:05.809Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中的高级特性-列表生成器"><a href="#Python中的高级特性-列表生成器" class="headerlink" title="Python中的高级特性-列表生成器"></a>Python中的高级特性-列表生成器</h1><hr><p>要生成list<code>[1,2,3,4,5,6,7,8,9,10]</code>可以用<code>range[1,11]</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;range(1,11)</span><br><span class="line">[1,2,3,4,5,6,7,8,9,10]</span><br></pre></td></tr></table></figure><p>生成<code>[1x1,2x2,3x3,...,10x10]</code>怎么做？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;[x*x for x in range(1,11)]</span><br><span class="line">[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span><br></pre></td></tr></table></figure><p>写列表生成式时，把要生成的元素<code>x*x</code>放到前面，后面跟<code>for</code>循环，就可以把list创建出来，十分有用，多写几次，很快就可以熟悉这种语法。</p><p>for循环后面还可以加if判断，这样我们就可以筛选出仅偶数的平方：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;[x*x for x in range(1,11) if x%2==0]</span><br><span class="line">[4, 16, 36, 64, 100]</span><br></pre></td></tr></table></figure><p>还可以使用两层循环，可以生成全排列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[m+n for m in&apos;ABC&apos; for n in &apos;XYZ&apos;]</span><br><span class="line">[&apos;AX&apos;, &apos;AY&apos;, &apos;AZ&apos;, &apos;BX&apos;, &apos;BY&apos;, &apos;BZ&apos;, &apos;CX&apos;, &apos;CY&apos;, &apos;CZ&apos;]</span><br></pre></td></tr></table></figure><p><code>for</code>循环其实可以使用两个甚至多个变量，比如<code>dict</code>的<code>iteritems()</code>可以同时迭代key和value：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;d=[&apos;x&apos;:&apos;A&apos;,&apos;y&apos;:&apos;B&apos;,&apos;z&apos;:&apos;C&apos;]</span><br><span class="line">&gt;&gt;&gt;for k,v in d.iteritems():</span><br><span class="line">...print k,&apos;=&apos;,v</span><br><span class="line">...</span><br><span class="line">y=B</span><br><span class="line">x=A</span><br><span class="line">z=C</span><br></pre></td></tr></table></figure><p>列表生成式也可以使用两个变量来生成list：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;d=[&apos;x&apos;:&apos;A&apos;,&apos;y&apos;:&apos;B&apos;,&apos;z&apos;:&apos;C&apos;]</span><br><span class="line">&gt;&gt;&gt;[k+&apos;=&apos;+v for k,v ind.iteritems()]</span><br><span class="line">[&apos;y=B&apos;,&apos;x=A&apos;,&apos;z=C&apos;]</span><br></pre></td></tr></table></figure><p>把一个list所有的字符串变为小写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; L = [&apos;Hello&apos;, &apos;World&apos;, &apos;IBM&apos;, &apos;Apple&apos;]</span><br><span class="line">&gt;&gt;&gt; [s.lower() for s in L]</span><br><span class="line">[&apos;hello&apos;, &apos;world&apos;, &apos;ibm&apos;, &apos;apple&apos;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python中的高级特性-列表生成器&quot;&gt;&lt;a href=&quot;#Python中的高级特性-列表生成器&quot; class=&quot;headerlink&quot; title=&quot;Python中的高级特性-列表生成器&quot;&gt;&lt;/a&gt;Python中的高级特性-列表生成器&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;要
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="列表生成器" scheme="http://yoursite.com/tags/%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python中的高级特性-切片</title>
    <link href="http://yoursite.com/2018/05/19/Python%E4%B8%AD%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7-%E5%88%87%E7%89%87/"/>
    <id>http://yoursite.com/2018/05/19/Python中的高级特性-切片/</id>
    <published>2018-05-19T15:21:44.000Z</published>
    <updated>2018-05-19T15:21:43.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中的高级特性-切片"><a href="#Python中的高级特性-切片" class="headerlink" title="Python中的高级特性-切片"></a>Python中的高级特性-切片</h1><hr><p>取一个list或tuple的部分元素是非常常见的操作。比如，一个list如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L=[&apos;Michael&apos;, &apos;Sarah&apos;, &apos;Tracy&apos;, &apos;Bob&apos;, &apos;Jack&apos;]</span><br></pre></td></tr></table></figure><p>取前三个元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;L[0:3]</span><br><span class="line">[&apos;Michael&apos;, &apos;Sarah&apos;, &apos;Tracy&apos;]</span><br><span class="line">&gt;&gt;&gt;L[:3]</span><br><span class="line">[&apos;Michael&apos;, &apos;Sarah&apos;, &apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>从索引1开始，取出2个元素来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;L[1,3]</span><br><span class="line">[&apos;Sarah&apos;,&apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>支持倒数切片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;L[-2:]</span><br><span class="line">[&apos;Bob&apos;,&apos;Jack&apos;]</span><br></pre></td></tr></table></figure><p>前10个数，每两个取一个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; L = range(100)</span><br><span class="line">&gt;&gt;&gt; L</span><br><span class="line">[0, 1, 2, 3, ..., 99]</span><br><span class="line">#上边是创建一个0-99的数列</span><br><span class="line">&gt;&gt;&gt;L[:10:2]</span><br></pre></td></tr></table></figure><p>所有数，每5个取一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; L = range(100)</span><br><span class="line">&gt;&gt;&gt; L</span><br><span class="line">[0, 1, 2, 3, ..., 99]</span><br><span class="line">#上边是创建一个0-99的数列</span><br><span class="line">&gt;&gt;&gt;L[::5]</span><br></pre></td></tr></table></figure><p>字符串’xxx’或者Unicode字符串u’xxx’也可以看成一个list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果还是字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;ABCDEFG&apos;[:3]</span><br><span class="line">&apos;ABC&apos;</span><br><span class="line">&gt;&gt;&gt; &apos;ABCDEFG&apos;[::2]</span><br><span class="line">&apos;ACEG&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python中的高级特性-切片&quot;&gt;&lt;a href=&quot;#Python中的高级特性-切片&quot; class=&quot;headerlink&quot; title=&quot;Python中的高级特性-切片&quot;&gt;&lt;/a&gt;Python中的高级特性-切片&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;取一个list或tuple
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="切片" scheme="http://yoursite.com/tags/%E5%88%87%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Python中list和tuple</title>
    <link href="http://yoursite.com/2018/05/18/Python%E4%B8%ADlist%E5%92%8Ctuple/"/>
    <id>http://yoursite.com/2018/05/18/Python中list和tuple/</id>
    <published>2018-05-18T13:57:44.000Z</published>
    <updated>2018-05-18T14:39:20.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中list和tuple"><a href="#Python中list和tuple" class="headerlink" title="Python中list和tuple"></a>Python中list和tuple</h1><hr><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><p>Python内置的一种数据类型是列表：list。list是一种有序的集合，可以随时<strong>添加和删除</strong>其中的元素。</p><p>比如，列出一个班所有同学的名字，就可以用list：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates=[&apos;Michael&apos;,&apos;Bob&apos;,&apos;Tracy&apos;]</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Bob&apos;,&apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>变量<em>classmates</em>就是一个list。用<em>len()</em>函数可以获得list元素的个数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;len(classmates)</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>用索引来访问list中每一个位置的元素，记得索引是从<em>0</em>开始的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates[0]</span><br><span class="line">&apos;Michael&apos;</span><br><span class="line">&gt;&gt;&gt;classmates[1]</span><br><span class="line">&apos;Bob&apos;</span><br><span class="line">&gt;&gt;&gt;classmates[2]</span><br><span class="line">&apos;Tracy&apos;</span><br><span class="line">&gt;&gt;&gt;classmates[3]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure><p>当索引超出了范围时，Python会报一个IndexError错误，所以，要确保索引不要越界，记得最后一个元素的索引是len(classmates)-1</p><p>如要取最后一个元素，除了计算索引位置以为还可以用<em>-1</em>做索引，直接获取最后一个元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates[-1]</span><br><span class="line">&apos;Tracy&apos;</span><br></pre></td></tr></table></figure><p>以此类推，可以取得倒数第2个………</p><p>list是一个可变的有序表，所以可以向lisy尾部追加元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;class.append(&apos;Adam&apos;)</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Bob&apos;,&apos;Tracy&apos;,&apos;Adam&apos;]</span><br></pre></td></tr></table></figure><p>也可以将元素插到指定的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates.insert(1,&apos;Jack&apos;)</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Jack&apos;,&apos;Bob&apos;,&apos;Tracy&apos;,&apos;Adam&apos;]</span><br></pre></td></tr></table></figure><p>要删除list末尾的元素，用<em>pop()</em>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates.pop()</span><br><span class="line">&apos;Adam&apos;</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Jack&apos;,&apos;Bob&apos;,&apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>要删除指定位置的元素，用pop(i)方法，其中<em>i</em>是索引位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates.pop(1)</span><br><span class="line">&apos;Jack&apos;</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Bob&apos;,&apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>要把某个元素替换成别的元素，可以直接赋值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates[1]=&apos;Sarah&apos;</span><br><span class="line">&gt;&gt;&gt;classmates</span><br><span class="line">[&apos;Michael&apos;,&apos;Sarah&apos;,&apos;Tracy&apos;]</span><br></pre></td></tr></table></figure><p>list里面的元素的数据类型也可以不同，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;L=[&apos;Apple&apos;,123,True]</span><br></pre></td></tr></table></figure><p>list元素也可以是另一个list，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s=[&apos;python&apos;,&apos;java&apos;,[&apos;asp&apos;,&apos;php&apos;],&apos;scheme&apos;]</span><br><span class="line">&gt;&gt;len(s)</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>要拿到’php’可以写s[2][1]，因为s可以看成一个二位数组，类似的还有三维数组…….</p><p>如果一个list一个元素没有，就是一个空的list，它的长度为0：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;L=[]</span><br><span class="line">&gt;&gt;&gt;len(L)</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h2><p>另一种有序列表叫元组：tuple。tuple和list非常像，但是tuple一旦初始化就不能修改，比如同样是列出同学的名字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;classmates=(&apos;Michael&apos;,&apos;Bob&apos;,&apos;Tracy&apos;)</span><br></pre></td></tr></table></figure><p>现在classmates这个tuple就不能变了，它也没有append(),insert()这样的方法。其他获取元素的方法和list是一样的，你可以正常使用classmates[0],classmates[1]，但不能赋值成另外的元素。</p><p>定义一个空的tuple，可以写成<em>()</em>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;t=()</span><br><span class="line">&gt;&gt;&gt;t</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>但是要定义一个只有1个元素的tuple，必须加一个逗号,来消除歧义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;t=(1,)</span><br><span class="line">&gt;&gt;&gt;t</span><br><span class="line">(1,)</span><br></pre></td></tr></table></figure><p>“可变”的tuple：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;t=(&apos;a&apos;,&apos;b&apos;,[&apos;A&apos;,&apos;B&apos;])</span><br><span class="line">&gt;&gt;&gt;t[2][0]=&apos;X&apos;</span><br><span class="line">&gt;&gt;&gt;t[2][1]=&apos;Y&apos;</span><br><span class="line">&gt;&gt;&gt;t</span><br><span class="line">(&apos;a&apos;,&apos;b&apos;,[&apos;X&apos;,&apos;Y&apos;])</span><br></pre></td></tr></table></figure><p>表面上看tuple元素变了，其实它依旧指向list，只是list的元素变了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python中list和tuple&quot;&gt;&lt;a href=&quot;#Python中list和tuple&quot; class=&quot;headerlink&quot; title=&quot;Python中list和tuple&quot;&gt;&lt;/a&gt;Python中list和tuple&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="list" scheme="http://yoursite.com/tags/list/"/>
    
      <category term="tuple" scheme="http://yoursite.com/tags/tuple/"/>
    
  </entry>
  
  <entry>
    <title>事件驱动编程基础1</title>
    <link href="http://yoursite.com/2018/05/15/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%801/"/>
    <id>http://yoursite.com/2018/05/15/事件驱动编程基础1/</id>
    <published>2018-05-15T14:58:13.000Z</published>
    <updated>2018-05-15T15:16:57.670Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件驱动编程基础1"><a href="#事件驱动编程基础1" class="headerlink" title="事件驱动编程基础1"></a>事件驱动编程基础1</h1><hr><p>​    为了响应一个按钮单击事件，你需要编写代码来处理按钮单击动作。按钮是一个<strong>事件源对象</strong>，即动作起源的地方。你需要创建一个能对一个按钮动作事件进行处理的对象。该对象称为一个<strong>事件处理器</strong>。</p><p>【按钮】（单击一个按钮触发一个动作事件）→【事件】（一个事件是一个对象）→【处理器】事件处理器处理对象</p><p>（事件源对象）                            （事件对象）                        （事件处理器对象）</p><p>​    不是所有的对象都可以成为一个动作事件的处理器。要成为一个动作事件的处理器，必须满足两个要求：</p><p>1）该对象必须是EventHandler<t extents="" event="">接口的一个示例。接口定义了所有处理器的共同行为。<t extends="" event="">表示T是一个Event子类型的泛型。</t></t></p><p>2）EventHandler<actionevent>接口包含了handle(ActionEvent)方法用于处理动作事件。你的处理器必须覆盖这个方法来响应事件。</actionevent></p><p><strong>HandlerEvent.java:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.geometry.Pos;</span><br><span class="line">import javafx.scene.Scene;</span><br><span class="line">import javafx.scene.control.Button;</span><br><span class="line">import javafx.scene.layout.HBox;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line">import javafx.event.ActionEvent;</span><br><span class="line">import javafx.event.EventHandler;</span><br><span class="line">public class HandleEvent extends Application&#123;</span><br><span class="line">@Override</span><br><span class="line">public void start(Stage primaryStage)&#123;</span><br><span class="line">HBox pane=new HBox(10);</span><br><span class="line">pane.setAlignment(Pos.CENTER);</span><br><span class="line">Button btOK=new Button(&quot;OK&quot;);</span><br><span class="line">Button btCancel=new Button(&quot;Cancel&quot;);</span><br><span class="line">OKHandlerClass handler1=new OKHandlerClass();</span><br><span class="line">btOK.setOnAction(handler1);</span><br><span class="line">CancelHandlerClass handler2=new CancelHandlerClass();</span><br><span class="line">btCancel.setOnAction(handler2);</span><br><span class="line">pane.getChildren().addAll(btOK,btCancel);</span><br><span class="line"></span><br><span class="line">Scene scene=new Scene(pane,200,200);</span><br><span class="line">primaryStage.setTitle(&quot;HandleEvent&quot;);</span><br><span class="line">primaryStage.setScene(scene);</span><br><span class="line">primaryStage.show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Application.launch(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class OKHandlerClass implements EventHandler&lt;ActionEvent&gt;&#123;</span><br><span class="line">@Override</span><br><span class="line">public void handle(ActionEvent e)&#123;</span><br><span class="line">System.out.println(&quot;OK button clicked&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">class CancelHandlerClass implements EventHandler&lt;ActionEvent&gt;&#123;</span><br><span class="line">@Override</span><br><span class="line">public void handle(ActionEvent e)&#123;</span><br><span class="line">System.out.println(&quot;Cancel button clicked&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="/2018/05/15/事件驱动编程基础1/001.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line">OK button clicked//点击OK按钮</span><br><span class="line">Cancel button clicked//点击Cancel按钮</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;事件驱动编程基础1&quot;&gt;&lt;a href=&quot;#事件驱动编程基础1&quot; class=&quot;headerlink&quot; title=&quot;事件驱动编程基础1&quot;&gt;&lt;/a&gt;事件驱动编程基础1&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;​    为了响应一个按钮单击事件，你需要编写代码来处理按钮单击动作。按钮
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="事件驱动编程" scheme="http://yoursite.com/tags/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>JavaFX中的Circle的使用</title>
    <link href="http://yoursite.com/2018/05/12/JavaFX%E4%B8%AD%E7%9A%84Circle%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/05/12/JavaFX中的Circle的使用/</id>
    <published>2018-05-12T05:46:09.000Z</published>
    <updated>2018-05-12T06:02:26.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaFX中的Circle的使用"><a href="#JavaFX中的Circle的使用" class="headerlink" title="JavaFX中的Circle的使用"></a>JavaFX中的Circle的使用</h1><hr><p><strong>ShowCircle.java:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.scene.Scene;</span><br><span class="line">import javafx.scene.layout.Pane;</span><br><span class="line">import javafx.scene.shape.Circle;</span><br><span class="line">import javafx.scene.paint.Color;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line">public class ShowCircle extends Application&#123;</span><br><span class="line">public void start(Stage primaryStage)&#123;</span><br><span class="line">Pane pane=new Pane();</span><br><span class="line">Circle circle = new Circle();</span><br><span class="line">circle.setCenterX(100);</span><br><span class="line">circle.setCenterY(100);</span><br><span class="line">circle.setRadius(50);</span><br><span class="line">circle.setStroke(Color.BLACK);</span><br><span class="line">circle.setFill(Color.WHITE);</span><br><span class="line">pane.getChildren().add(circle);</span><br><span class="line">Scene scene=new Scene(pane,400,400);</span><br><span class="line">primaryStage.setScene(scene);</span><br><span class="line">primaryStage.setTitle(&quot;ShowCircle&quot;);</span><br><span class="line">primaryStage.show();</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Application.launch(args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="/2018/05/12/JavaFX中的Circle的使用/001.jpg" alt=""></p><p><strong>代码解析：</strong></p><p>​    程序创建了一个Circle并将圆心设置在(100,100)同时这里也是场景的中央，因为创建场景时给出的宽度高度都为200，圆的半径为50。</p><p>​    笔画颜色设置为黑色(BLACK)，填充颜色设置为白色(WHITE)。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaFX中的Circle的使用&quot;&gt;&lt;a href=&quot;#JavaFX中的Circle的使用&quot; class=&quot;headerlink&quot; title=&quot;JavaFX中的Circle的使用&quot;&gt;&lt;/a&gt;JavaFX中的Circle的使用&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;stro
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="JavaFX" scheme="http://yoursite.com/tags/JavaFX/"/>
    
  </entry>
  
  <entry>
    <title>JavaFX程序的基本结构</title>
    <link href="http://yoursite.com/2018/05/12/JavaFX%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2018/05/12/JavaFX程序的基本结构/</id>
    <published>2018-05-12T02:05:47.000Z</published>
    <updated>2018-05-12T02:27:00.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaFX程序的基本结构"><a href="#JavaFX程序的基本结构" class="headerlink" title="JavaFX程序的基本结构"></a>JavaFX程序的基本结构</h1><hr><p><strong>MyJavaFX.java：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line">import javafx.scene.control.*;</span><br><span class="line">import javafx.scene.*;</span><br><span class="line">public class MyJavaFX extends Application&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void start(Stage primaryStage)&#123;</span><br><span class="line">        Button btOK=new Button(&quot;ok&quot;);</span><br><span class="line">        Scene scene=new Scene(BUtton,200,250);</span><br><span class="line">        primaryStage.setTitle(&quot;辣鸡&quot;);</span><br><span class="line">        primaryStage.setScene(scene);</span><br><span class="line">        primaryStage.show();</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        Application.launch(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="/2018/05/12/JavaFX程序的基本结构/001.jpg" alt=""></p><p><strong>程序解析：</strong></p><p>​    launch方法是一个定义在Application类中的静态方法，用于启动一个独立的JavaFX应用。</p><p>​    主类重写了定义在javafx.application.Application类中的start方法。当一个JavaFX应用启动时，JVM使用它的无参构造方法来创建类的一个实例，同时调用其start方法。start方法一般用于将UI组件放入一个场景，并在舞台中显示该场景。</p><p>​    一个Scene对象可以使用构造方法Scene(node,width,height)创建，这个构造方法指定了场景的宽度和高度，并将节点置于一个场景中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaFX程序的基本结构&quot;&gt;&lt;a href=&quot;#JavaFX程序的基本结构&quot; class=&quot;headerlink&quot; title=&quot;JavaFX程序的基本结构&quot;&gt;&lt;/a&gt;JavaFX程序的基本结构&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;MyJavaFX.java
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="JavaFX" scheme="http://yoursite.com/tags/JavaFX/"/>
    
  </entry>
  
  <entry>
    <title>Python糗百爬虫</title>
    <link href="http://yoursite.com/2018/05/10/Python%E7%B3%97%E7%99%BE%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2018/05/10/Python糗百爬虫/</id>
    <published>2018-05-10T12:54:05.000Z</published>
    <updated>2018-05-10T12:58:18.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python糗百爬虫"><a href="#Python糗百爬虫" class="headerlink" title="Python糗百爬虫"></a>Python糗百爬虫</h1><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import urllib2</span><br><span class="line">import urllib</span><br><span class="line">import re</span><br><span class="line">url=&apos;https://www.qiushibaike.com/8hr/page/1/&apos;</span><br><span class="line"></span><br><span class="line">headers=&#123;</span><br><span class="line">&apos;User-Agent&apos; : &apos;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&apos;</span><br><span class="line">&#125;</span><br><span class="line">try:</span><br><span class="line">    request=urllib2.Request(url,headers=headers)</span><br><span class="line">    response=urllib2.urlopen(request)</span><br><span class="line">    content=response.read().decode(&apos;utf-8&apos;)</span><br><span class="line">    pattern=re.compile(&apos;&lt;div class=&quot;author.*?&lt;h2&gt;(.*?)&lt;/h2&gt;.*?&apos;+&apos;&lt;div class=&quot;content&quot;&gt;.*?&lt;span&gt;(.*?)&lt;/span&gt;.*?&apos;+&apos;&lt;i class=&quot;number.*?&gt;(.*?)&lt;/i&gt;(.*?)&lt;/span&gt;.*?&apos;,re.S)</span><br><span class="line">    items=re.findall(pattern,content)</span><br><span class="line">    for item in items:</span><br><span class="line">        print item[0],item[1],item[2],item[3]</span><br><span class="line">except urllib2.URLError,e:</span><br><span class="line">    if hasattr(e,&quot;code&quot;):</span><br><span class="line">        print e.code</span><br><span class="line">    if hasattr(e,&quot;reason&quot;):</span><br><span class="line">        print e.reason</span><br></pre></td></tr></table></figure><p>爬取结果：</p><p><img src="/2018/05/10/Python糗百爬虫/001.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python糗百爬虫&quot;&gt;&lt;a href=&quot;#Python糗百爬虫&quot; class=&quot;headerlink&quot; title=&quot;Python糗百爬虫&quot;&gt;&lt;/a&gt;Python糗百爬虫&lt;/h1&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>学习地址</title>
    <link href="http://yoursite.com/2018/05/10/Python%E5%AD%A6%E4%B9%A0%E5%9C%B0%E5%9D%80/"/>
    <id>http://yoursite.com/2018/05/10/Python学习地址/</id>
    <published>2018-05-10T03:14:33.000Z</published>
    <updated>2018-06-16T04:43:09.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python学习地址"><a href="#Python学习地址" class="headerlink" title="Python学习地址"></a>Python学习地址</h1><hr><p><a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="noopener">廖雪峰的Python基础知识</a></p><p><a href="https://cuiqingcai.com/1052.html" target="_blank" rel="noopener">崔庆才的Python爬虫学习</a></p><p><a href="http://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener">HTML教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python学习地址&quot;&gt;&lt;a href=&quot;#Python学习地址&quot; class=&quot;headerlink&quot; title=&quot;Python学习地址&quot;&gt;&lt;/a&gt;Python学习地址&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python入门级爬取百度百科词条</title>
    <link href="http://yoursite.com/2018/05/10/Python%E5%85%A5%E9%97%A8%E7%BA%A7%E7%88%AC%E5%8F%96%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91%E8%AF%8D%E6%9D%A1/"/>
    <id>http://yoursite.com/2018/05/10/Python入门级爬取百度百科词条/</id>
    <published>2018-05-10T03:12:33.000Z</published>
    <updated>2018-05-10T03:50:39.358Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python入门级爬取百度百科词条"><a href="#Python入门级爬取百度百科词条" class="headerlink" title="Python入门级爬取百度百科词条"></a>Python入门级爬取百度百科词条</h1><hr><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>爬取 <a href="https://baike.baidu.com/historylist/Angelababy/1509275#page1" target="_blank" rel="noopener">Angelababy词条历史版本 </a>中的value值。</p><h2 id="尝试爬取网页"><a href="#尝试爬取网页" class="headerlink" title="尝试爬取网页"></a>尝试爬取网页</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># _*_ coding:utf-8 _*_</span><br><span class="line">import urllib</span><br><span class="line">import urllib2</span><br><span class="line">import re</span><br><span class="line">page = 1</span><br><span class="line">url = &apos;https://baike.baidu.com/historylist/Angelababy/1509275#page&apos;+str(page)</span><br><span class="line">try:</span><br><span class="line">    request = urllib2.Request(url)</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    print response.read()</span><br><span class="line">except urllib2.URLError, e:</span><br><span class="line">    if hasattr(e,&quot;code&quot;):</span><br><span class="line">        print e.code</span><br><span class="line">    if hasattr(e,&quot;reason&quot;):</span><br><span class="line">        print e.reason</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2018/05/10/Python入门级爬取百度百科词条/001.jpg" alt=""></p><p>可以看到已经爬取了此网页所有的内容。现在需要实现的就是爬取想要的value值了。</p><h2 id="爬取目标内容"><a href="#爬取目标内容" class="headerlink" title="爬取目标内容"></a>爬取目标内容</h2><p><img src="/2018/05/10/Python入门级爬取百度百科词条/002.jpg" alt=""></p><p>可以看到要爬取的内容，格式全部一样都是图中所示，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class=&quot;checkBox&quot;&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; value=&quot;128140635&quot;&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><p>所以我们做以下正则匹配：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pattern = re.compile(&apos;&lt;tr&gt;.*?&lt;td class=&quot;checkBox&quot;&gt;.*?&lt;input.*?value=&quot;(.*?)&quot;&gt;.*?&lt;/td&gt;.*?&lt;/tr&gt;&apos;,re.S)</span><br></pre></td></tr></table></figure><p>全部代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># _*_ coding:utf-8 _*_</span><br><span class="line">import urllib</span><br><span class="line">import urllib2</span><br><span class="line">import re</span><br><span class="line">page = 1</span><br><span class="line">url = &apos;https://baike.baidu.com/historylist/Angelababy/1509275#page&apos;+str(page)</span><br><span class="line">try:</span><br><span class="line">    request = urllib2.Request(url)</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    content = response.read().decode(&apos;utf-8&apos;)</span><br><span class="line">    pattern = re.compile(&apos;&lt;tr&gt;.*?&lt;td class=&quot;checkBox&quot;&gt;.*?&lt;input.*?value=&quot;(.*?)&quot;&gt;.*?&lt;/td&gt;.*?&lt;/tr&gt;&apos;,re.S)</span><br><span class="line">    items = re.findall(pattern,content)</span><br><span class="line">    for item in items:</span><br><span class="line">        print(item)</span><br><span class="line">except urllib2.URLError,e:</span><br><span class="line">    if hasattr(e,&quot;code&quot;):</span><br><span class="line">        print e.code</span><br><span class="line">    if hasattr(e,&quot;reason&quot;):</span><br><span class="line">        print e.reason</span><br></pre></td></tr></table></figure><p>爬取结果如下：</p><p><img src="/2018/05/10/Python入门级爬取百度百科词条/003.jpg" alt=""></p><h2 id="学习链接"><a href="#学习链接" class="headerlink" title="学习链接"></a>学习链接</h2><p><a href="https://cuiqingcai.com/990.html" target="_blank" rel="noopener">崔庆才的个人博客</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python入门级爬取百度百科词条&quot;&gt;&lt;a href=&quot;#Python入门级爬取百度百科词条&quot; class=&quot;headerlink&quot; title=&quot;Python入门级爬取百度百科词条&quot;&gt;&lt;/a&gt;Python入门级爬取百度百科词条&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="百科词条" scheme="http://yoursite.com/tags/%E7%99%BE%E7%A7%91%E8%AF%8D%E6%9D%A1/"/>
    
  </entry>
  
  <entry>
    <title>鲜衣怒马，归来不再少年</title>
    <link href="http://yoursite.com/2018/04/29/%E9%B2%9C%E8%A1%A3%E6%80%92%E9%A9%AC%EF%BC%8C%E5%BD%92%E6%9D%A5%E4%B8%8D%E5%86%8D%E5%B0%91%E5%B9%B4/"/>
    <id>http://yoursite.com/2018/04/29/鲜衣怒马，归来不再少年/</id>
    <published>2018-04-29T14:40:30.000Z</published>
    <updated>2018-04-29T15:24:50.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="鲜衣怒马，归来不在少年"><a href="#鲜衣怒马，归来不在少年" class="headerlink" title="鲜衣怒马，归来不在少年"></a>鲜衣怒马，归来不在少年</h1><hr><p>​    周末总是孤独的，想要找些什么填充自己，划着优酷，划到了《前任3》，于是… …</p><p>​    空间里有朋友在刷屏，好像是失恋了，不知道发生了什么。想起了前几天手机崩溃，相册被清空的事，后怕的打开了相册。第一张是在学四公寓拍的一张照片，当时很非，便做了很久的头像，那是一本我从来没有读过的屠格涅夫散文集，现在翻起来却又是另一番味道，让人沉迷。</p><p>​            <img src="/2018/04/29/鲜衣怒马，归来不再少年/001.jpg" alt=""></p><p>​    翻到了两年前的自拍，比现在瘦比现在阳光。翻到了学生会的合影，灯光很暖，翻到了烫头的照片，或许以前的肆无忌惮也只有回忆了，时间总是向前走的，回忆也无法回到过去。年少轻狂，满纸荒唐。曾经不是一个人，便天不怕地不怕，颇有挥斥方遒，意气风发。回过头来，其实也只是一段梦，梦的很真实，梦的很开心。梦总是要醒来的，毕竟生活还是要继续的。人会变，生活也会变，生活越来越喜欢与你独处，喜欢看你迷茫的样子，喜欢你拿起酒杯的样子。</p><p><img src="/2018/04/29/鲜衣怒马，归来不再少年/002.jpg" alt=""></p><p>​    看到这张图的时候，不知道自己在想什么，只是觉得很舒服，好像什么都放下了一样。我收到了肯定，不艰辛的不是成长，熬过苦难便是收获，每一个看到她的人都露出了微笑。自己选择的路，终归要走下去，对于新鲜的事物也有一定保质期，我感觉自己的审美疲劳到来了。得得失失，失失得得，终归要结束这宴席，毕竟我一定不是适合这场游戏的。生活吗，尤其是要走向成年人的生活，哈哈哈哈泡枸杞喝热水，终归要失去点什么、看透点什么、学会点什么或许还能带进土里。</p><p>​        <img src="/2018/04/29/鲜衣怒马，归来不再少年/003.jpg" alt=""></p><p>​    有些照片、有些话语我会好好的保存下来，它常常能带给我开心，像是冬日透过云彩的阳光散落在身上，温暖着丝丝凉意。等到我再次翻阅的时候，我会感觉到可笑、幼稚，那时候我应该是已经忘记了那种感觉，无法再构建起那份回忆，我希望我不会删除它们。</p><p>​    鲜衣怒马，归来……</p><p>​    不在少年。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;鲜衣怒马，归来不在少年&quot;&gt;&lt;a href=&quot;#鲜衣怒马，归来不在少年&quot; class=&quot;headerlink&quot; title=&quot;鲜衣怒马，归来不在少年&quot;&gt;&lt;/a&gt;鲜衣怒马，归来不在少年&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;​    周末总是孤独的，想要找些什么填充自己，划着优酷，
      
    
    </summary>
    
      <category term="生活小调" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/"/>
    
    
      <category term="negative" scheme="http://yoursite.com/tags/negative/"/>
    
  </entry>
  
  <entry>
    <title>社会再叛逆，也要做社会主义接班人</title>
    <link href="http://yoursite.com/2018/04/26/%E7%A4%BE%E4%BC%9A%E5%86%8D%E5%8F%9B%E9%80%86%EF%BC%8C%E4%B9%9F%E8%A6%81%E5%81%9A%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%8E%A5%E7%8F%AD%E4%BA%BA/"/>
    <id>http://yoursite.com/2018/04/26/社会再叛逆，也要做社会主义接班人/</id>
    <published>2018-04-26T15:26:38.000Z</published>
    <updated>2018-04-26T15:29:40.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="社会再叛逆，也要做社会主义接班人"><a href="#社会再叛逆，也要做社会主义接班人" class="headerlink" title="社会再叛逆，也要做社会主义接班人"></a>社会再叛逆，也要做社会主义接班人</h1><hr><p>​    时2018年4月24日，去往颐和园的公交上。</p><p>​    车走过两站，终于有一个空座，于是就坐了下来，刷刷知乎，回回消息。车又过了一站，上来了一家人（爷爷奶奶带着小孙子），上车后售票员开始说希望坐老弱病残座儿的给小孩子让座之类的话，然而大家都在低头刷手机并没有要让座的意思，小孩子的奶奶上来以后并没有喊着售票员要给小孙子找座，而是拉紧小孙子想让他坐在车座旁边的地方（在我认为，这就是一种很有素质的行为，而且脑子里都是孩子）。我习惯给老人孕妇孩子让座，于是我（蓝座）就招呼着让她们坐下来，这位奶奶一边安置着小孙子，一边跟我说谢谢，并且让小孙子说“谢谢叔叔”，小孙子很乖，也对我说了。说真的，这一刻我真的感慨这位奶奶的教育，这肯定不是这一刻才教育出来的。当然写这些并不是要表现我自己有多么高大上，站在道德制高点批评别人，而是对成长的疑惑，困扰了我很久的疑惑。</p><p>​    我很难预测未来的我是什么职业、什么性格、什么价值观。但是我从小被中华美德教育熏陶，并努力追求现如今的社会主义价值观。我会去尊重每一位值得我尊敬的人，我会对说清洁阿姨说谢谢，会对服务生说谢谢，会对每一位“卑微”职业的人说谢谢；我会对我的老师说谢谢，对同学说谢谢，会对每一位帮助过我的人说谢谢；我觉得这是尊重别人的基本，也是对自己的尊重。我会拧紧每一个水龙头，我会将电池扔到该扔的地方，我觉得我应该为保护地球做出一点贡献。我会给小孩、老人和孕妇让座，我会对服务生说“我自己来”，我会去农民工子弟学校面对叽叽喳喳的学生进行支教，我觉得这是我应该做的。</p><p>​    我曾看到过很多人忽略，或许长大让他们变得很忙碌，每天踩着快节奏的鼓点奔波忙碌，忙到没有意识没有精力打理这种小事，忘了说一声谢谢；或许他们累了，累到已经无法再去让座了；或许生活让他们心情有些难过，只能独善其身。</p><p>​    我也曾看到很多人背道而驰，不仅对类似的事嗤之以鼻，甚至对”施善者“打压构建和谐友爱社会的积极性，在他邻域的人会因为他的话他的行为开始不去做这些事，或许这就是社会的叛逆。</p><p>​    成功者的路是孤独的。成功者的标新立异才造就孤独吧。我不想在后辈的语文课上没有了中华美德熏陶，我相信哪怕我温暖了一个人，也会温暖我整个世界。</p><p>​    我不知道未来的自己是什么样的，我害怕以后的我是现在的我所不喜欢的、是陌生的。那么，在现在的年纪，希望自己依旧跟随自己的内心做一些心中的小善，哪怕未来的自己是那么陌生、可恶，当我望向台灯的时候，我会记得我曾经努力的在做社会主义的接班人。</p><p><img src="/2018/04/26/社会再叛逆，也要做社会主义接班人/yet.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;社会再叛逆，也要做社会主义接班人&quot;&gt;&lt;a href=&quot;#社会再叛逆，也要做社会主义接班人&quot; class=&quot;headerlink&quot; title=&quot;社会再叛逆，也要做社会主义接班人&quot;&gt;&lt;/a&gt;社会再叛逆，也要做社会主义接班人&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;​    时201
      
    
    </summary>
    
      <category term="生活小调" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%B0%83/"/>
    
    
      <category term="禅" scheme="http://yoursite.com/tags/%E7%A6%85/"/>
    
  </entry>
  
  <entry>
    <title>Font类</title>
    <link href="http://yoursite.com/2018/04/22/Font%E7%B1%BB/"/>
    <id>http://yoursite.com/2018/04/22/Font类/</id>
    <published>2018-04-22T07:46:28.000Z</published>
    <updated>2018-04-22T14:00:44.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Font类"><a href="#Font类" class="headerlink" title="Font类"></a>Font类</h1><hr><p><strong>要点提示：</strong>Font类描述字体名、粗细和大小。</p><p>​    可以砸渲染文字的时候设置字体信息。javafx.scene.text.Font类用于创建字体。</p><p>​    Font实例可以使用它的构造方法或者静态方法来创建。Font可以用它的名字、字体粗细、字体形态和大小来描述。Times、Courier和Arial是字体名字的实例。可以通过调用静态方法getFamilies()获得一个可用的字体系列名字列表。List是一个为列表字体通过方法的接口。ArrayList是List的一个具体实现。字体形态是两个常量：<strong>FontPosture.IRALIC</strong>和<strong>FontPosture.REGULAR</strong>。例如下面的语句生成两个字体。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Font font1 = new Font(&quot;SansSerif&quot;,16);//字体(SansSerif，大小16)</span><br><span class="line">Font font2 = Font.font(&quot;Times New Roman&quot;,FontPosture.IRALC,FontPosture.REGULAR,20);//字体(Times New Roman、加粗、斜体和大小为20)</span><br></pre></td></tr></table></figure><p><strong>javafx.scene.text.Font</strong></p><p>-size: double                //该字体的大小</p><p>-name: String            //该字体的名字</p><p>-family: String            //该字体属于的字体集</p><p>+Font(size: double)        //使用给定字体大小创建一个Font</p><p>+Font(name: String,size: double)//使用给定的字体完整名称和大小创建一个Font</p><p>+font(name: String,size: double)//使用给定的字体名称和大小创建一个Font</p><p>+font(name: String,w: FontWeight,size: double)//使用给定的字体名称、粗细和大小创建一个Font</p><p>+font(name: String,w: FontWeight,p:FontPosture,size: double)//使用给定的字体名称、粗细、字形以及大小创建一个Font</p><p>+getFamilies(): List<string>    //返回一个字体集名字的列表</string></p><p>+getFontName(): List<string>    //返回一个字体完整名称的列表，包括字体集和粗细</string></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package ohhh;</span><br><span class="line">import javafx.application.Application;</span><br><span class="line">import javafx.scene.Scene;</span><br><span class="line">import javafx.scene.layout.*;</span><br><span class="line">import javafx.scene.paint.Color;</span><br><span class="line">import javafx.scene.shape.Circle;</span><br><span class="line">import javafx.scene.text.*;</span><br><span class="line">import javafx.scene.control.*;</span><br><span class="line">import javafx.stage.Stage;</span><br><span class="line">public class FontDemo extends Application&#123;</span><br><span class="line">@Override</span><br><span class="line">public void start(Stage primaryStage)&#123;</span><br><span class="line">Pane pane = new StackPane();</span><br><span class="line"></span><br><span class="line">Circle circle = new Circle();</span><br><span class="line">circle.setRadius(50);</span><br><span class="line">circle.setStroke(Color.BLACK);</span><br><span class="line">circle.setFill(new Color(0.5,0.5,0.5,0.1));</span><br><span class="line">pane.getChildren().add(circle);</span><br><span class="line"></span><br><span class="line">Label label = new Label(&quot;JavaFX&quot;);</span><br><span class="line">label.setFont(Font.font(&quot;Times New Roman&quot;,FontWeight.BOLD,FontPosture.ITALIC,20));</span><br><span class="line">pane.getChildren().add(label);</span><br><span class="line"></span><br><span class="line">Scene scene=new Scene(pane);</span><br><span class="line">primaryStage.setTitle(&quot;FontDemo&quot;);</span><br><span class="line">primaryStage.setScene(scene);</span><br><span class="line">primaryStage.show();</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Application.launch(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="/2018/04/22/Font类/javaFX.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Font类&quot;&gt;&lt;a href=&quot;#Font类&quot; class=&quot;headerlink&quot; title=&quot;Font类&quot;&gt;&lt;/a&gt;Font类&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;要点提示：&lt;/strong&gt;Font类描述字体名、粗细和大小。&lt;/p&gt;
&lt;p&gt;​    可
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="JavaFX" scheme="http://yoursite.com/tags/JavaFX/"/>
    
  </entry>
  
  <entry>
    <title>ArrayList类</title>
    <link href="http://yoursite.com/2018/04/22/ArrayList%E7%B1%BB/"/>
    <id>http://yoursite.com/2018/04/22/ArrayList类/</id>
    <published>2018-04-21T16:18:23.000Z</published>
    <updated>2018-04-21T16:36:42.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ArrayList类"><a href="#ArrayList类" class="headerlink" title="ArrayList类"></a>ArrayList类</h1><hr><p>java.util.ArrayList<e></e></p><p>+ArrayList()                //返回一个空的列表</p><p>+add(o:E): void            //添加一个新元素o到列表末尾</p><p>+add(index: int,o: E): void     //添加一个新元素o到该列表的指定下标位置</p><p>+clear(): void                //清除列表所有元素</p><p>+contains(o: Object)        //如果该列表有o，返回true</p><p>+get(index: int): E            //返回该列表指定下标位置的元素</p><p>+indexOf(o: Object): int    //返回列表中第一个匹配元素的下标</p><p>+isEmpty(): boolean        //如果该列表不包括任何元素，返回true</p><p>+lastIndexOf(o: Object): int    //返回列表中匹配的最后一个元素的下标</p><p>+remove(o: Object): boolean        //去除列表的第一个元素，如果该元素被去除，则返回true</p><p>+size(): int                    //返回列表中元素个数</p><p>+remove(index: int): E            //去除指定下标位置的元素，如果该元素被去除，则返回true</p><p>set(index: int,o: E): E            //设置指定下标位置的元素</p><p>程序清单：TestArrayList.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package ohhh;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">public class TestArrayList &#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">ArrayList&lt;String&gt; cityList = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">cityList.add(&quot;London&quot;);//添加London</span><br><span class="line">cityList.add(&quot;Denver&quot;);//添加Denver</span><br><span class="line">cityList.add(&quot;Paris&quot;);//添加Paris</span><br><span class="line">cityList.add(&quot;Miami&quot;);//添加Miami</span><br><span class="line">cityList.add(&quot;Seoul&quot;);//添加Seoul</span><br><span class="line">cityList.add(&quot;Tokyo&quot;);//添加Tokyo</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;List size? &quot;+cityList.size());//列表元素数</span><br><span class="line">System.out.println(&quot;Is Miami in the list? &quot;+cityList.contains(&quot;Miami&quot;));//是否有Miami</span><br><span class="line">System.out.println(&quot;The location of Denver in the list? &quot;+cityList.indexOf(&quot;Denver&quot;));//Denver的下标</span><br><span class="line">System.out.println(&quot;Is the list empty? &quot;+cityList.isEmpty());//列表是否为空</span><br><span class="line">cityList.add(2, &quot;Xian&quot;);//下标为2添加Xian</span><br><span class="line">cityList.remove(&quot;remove&quot;);//抹除</span><br><span class="line">cityList.remove(1);//抹除下标为1的</span><br><span class="line">System.out.println(cityList.toString());//输出cityList列表</span><br><span class="line">for(int i=cityList.size()-1;i&gt;=0;i--)</span><br><span class="line">System.out.print(cityList.get(i));//输出列表里的所有元素</span><br><span class="line">System.out.println();</span><br><span class="line">ArrayList&lt;CircleFromSimpleGeometricObject&gt; list= new ArrayList&lt;&gt;();</span><br><span class="line">list.add(new CircleFromSimpleGeometricObject(2));</span><br><span class="line">list.add(new CircleFromSimpleGeometricObject(3));</span><br><span class="line">System.out.println(&quot;The area of the first circle? &quot;+list.get(0).getArea());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List size? 6</span><br><span class="line">Is Miami in the list? true</span><br><span class="line">The location of Denver in the list? 1</span><br><span class="line">Is the list empty? false</span><br><span class="line">[London, Xian, Paris, Miami, Seoul, Tokyo]</span><br><span class="line">TokyoSeoulMiamiParisXianLondon</span><br><span class="line">The area of the first circle? 0.0</span><br></pre></td></tr></table></figure><p><strong>对列表有用的方法</strong></p><p>Array类中的静态方法asList返回一个列表，该列表传递给ArrayList的构造方法用于创建一个ArrayList。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] array = &#123;&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;&#125;;</span><br><span class="line">ArrayList&lt;String&gt; list=new ArrayList&lt;&gt;(Array.asList(array));</span><br></pre></td></tr></table></figure><p>反过来也可以使用list.toArray(array1)从数组列表创建一个对象数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] array1 = new String[list.size()];</span><br><span class="line">list.toArray(array1);</span><br></pre></td></tr></table></figure><p>如果列表中的元素是可比较的，比如整数、双精度浮点数或者字符串 ，则可以使用java.util.Collections类中的静态方法sort方法来对元素进行排序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Integer[] array = &#123;3,5,95,4,15,34,3,6,5&#125;;</span><br><span class="line">ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(Array.asList(array));</span><br><span class="line">java.util.Collections(list);</span><br><span class="line">System.out.println(list);</span><br></pre></td></tr></table></figure><p>可以使用java.util.Collections类中的静态的max和min方法来返回列表中的最大和最小元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Integer[] array = &#123;3,5,95,4,15,34,3,6,5&#125;;</span><br><span class="line">ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(Array.asList(array));</span><br><span class="line">System.out.println(java.util.Collections.max(list));</span><br><span class="line">System.out.println(java.util.Collections.min(list));</span><br></pre></td></tr></table></figure><p>可以使用java.util.Collections类中的静态方法shuffle方法来随机打乱列表的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Integer[] array = &#123;3,5,95,4,15,34,3,6,5&#125;;</span><br><span class="line">ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(Array.asList(array));</span><br><span class="line">java.util.Collection.shuffle(list);</span><br><span class="line">System.out.println(list);</span><br></pre></td></tr></table></figure><p>完结。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ArrayList类&quot;&gt;&lt;a href=&quot;#ArrayList类&quot; class=&quot;headerlink&quot; title=&quot;ArrayList类&quot;&gt;&lt;/a&gt;ArrayList类&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;java.util.ArrayList&lt;e&gt;&lt;/e&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="ArrayList" scheme="http://yoursite.com/tags/ArrayList/"/>
    
  </entry>
  
  <entry>
    <title>动态绑定</title>
    <link href="http://yoursite.com/2018/04/21/%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A/"/>
    <id>http://yoursite.com/2018/04/21/动态绑定/</id>
    <published>2018-04-21T11:14:57.000Z</published>
    <updated>2018-04-21T11:49:51.523Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h1><p><strong>要点提示：</strong>方法可以沿着继承链的多个类中实现。JVM决定运行时调用哪个方法。</p><p>​    方法可以在父类中定义而在子类中重写。例如：toString()方法在Object类中定义的，而在GeometricObject类中重写。思考下面代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object o =new GeometricObject();</span><br><span class="line">System.out.println(o.toString());</span><br></pre></td></tr></table></figure><p>​    这里的o调用哪个toString()呢？为了回答这个问题，我们首先介绍两个术语：声明类型和实际类型。一个变量必须被声明为某种类型。变量的这个类型成为它的<strong>声明类型</strong>（declared type）。这里，o的声明类型是Object。一个引用类型变量可以是一个null值或者一个对声明类型实例的引用。实例可以使用声明类型或它的子类型的构造方法创建。变量的<strong>实际类型</strong>（actual type）是被变量引用的对象的实际类。这里，o的实际类型是GeometricObject,因为o指向使用new GeometricObject()创建的对象。o调用哪个toString()方法由o的实际类型决定。这成为<strong>动态绑定</strong>。</p><p>​    <strong>动态绑定的工作机制</strong>如下：假设对象o是类C1，C2，….，Cn的实例，其中C1是C2的子类，C2是C3的子类…Cn-1是Cn的子类，也就是说Cn是最通用类，C1是最特殊的类。在Java中，Cn是Object类。如果对象o调用一个方法p，那么JVM会依次在类C1，C2，….，Cn-1，Cn中查找方法p的实现，直到找到为止。一旦找到就实现，就停止查找，然后使用首先找到的实现。</p><p>DynamicBindingDemo.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package ohhh;</span><br><span class="line"></span><br><span class="line">public class DynamicBindingDemo&#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        m(new GraduateStudent());</span><br><span class="line">        m(new Student());</span><br><span class="line">        m(new Person());</span><br><span class="line">        m(new Object());</span><br><span class="line">    &#125;</span><br><span class="line">    public static void m(Object x)&#123;</span><br><span class="line">        System.out.println(x.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    public static class GraduateStudent extends Student&#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">    public static class Student extends Person&#123;</span><br><span class="line">        @Override</span><br><span class="line">        public String toString()&#123;</span><br><span class="line">            return &quot;Student&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public static class Person extends Object&#123;</span><br><span class="line">        @Override</span><br><span class="line">        public String toString()&#123;</span><br><span class="line">            return &quot;Person&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="/2018/04/21/动态绑定/qwe.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;动态绑定&quot;&gt;&lt;a href=&quot;#动态绑定&quot; class=&quot;headerlink&quot; title=&quot;动态绑定&quot;&gt;&lt;/a&gt;动态绑定&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;要点提示：&lt;/strong&gt;方法可以沿着继承链的多个类中实现。JVM决定运行时调用哪个方法。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="Java(基础篇)" scheme="http://yoursite.com/categories/Java-%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
</feed>
